

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jul 05 16:10:35 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    81                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83   000000                     
    84                           ; Version 2.20
    85                           ; Generated 12/02/2020 GMT
    86                           ; 
    87                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F4580 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118   000000                     
   119                           	psect	idataBANK0
   120   0029F2                     __pidataBANK0:
   121                           	callstack 0
   122                           
   123                           ;initializer for _menu_item
   124   0029F2  7E                 	db	low STR_88
   125   0029F3  2F                 	db	high STR_88
   126   0029F4  8E                 	db	low STR_89
   127   0029F5  2F                 	db	high STR_89
   128   0029F6  9E                 	db	low STR_90
   129   0029F7  2F                 	db	high STR_90
   130   0029F8  6E                 	db	low STR_91
   131   0029F9  2F                 	db	high STR_91
   132   0029FA  AE                 	db	low STR_92
   133   0029FB  2F                 	db	high STR_92
   134                           
   135                           ;initializer for read_switches@once
   136   0029FC  0001               	dw	1
   137                           
   138                           ;initializer for _attempt
   139   0029FE  01                 	db	1
   140                           
   141                           ;initializer for _line
   142   0029FF  01                 	db	1
   143                           
   144                           	psect	idataBANK1
   145   0029BC                     __pidataBANK1:
   146                           	callstack 0
   147                           
   148                           ;initializer for _gear
   149   0029BC  F5                 	db	low STR_1
   150   0029BD  2F                 	db	high STR_1
   151   0029BE  F2                 	db	low STR_2
   152   0029BF  2F                 	db	high STR_2
   153   0029C0  F8                 	db	low STR_3
   154   0029C1  2F                 	db	high STR_3
   155   0029C2  E3                 	db	low STR_4
   156   0029C3  2F                 	db	high STR_4
   157   0029C4  E6                 	db	low STR_5
   158   0029C5  2F                 	db	high STR_5
   159   0029C6  E9                 	db	low STR_6
   160   0029C7  2F                 	db	high STR_6
   161   0029C8  EC                 	db	low STR_7
   162   0029C9  2F                 	db	high STR_7
   163   0029CA  EF                 	db	low STR_8
   164   0029CB  2F                 	db	high STR_8
   165   0029CC  E0                 	db	low STR_9
   166   0029CD  2F                 	db	high STR_9
   167   000000                     _RCREG	set	4014
   168   000000                     _TXREG	set	4013
   169   000000                     _SPBRG	set	4015
   170   000000                     _SSPADD	set	4040
   171   000000                     _SSPCON1	set	4038
   172   000000                     _ADRESL	set	4035
   173   000000                     _ADRESH	set	4036
   174   000000                     _TRISC	set	3988
   175   000000                     _BRG16	set	32195
   176   000000                     _ACKSTAT	set	32302
   177   000000                     _CKE	set	32318
   178   000000                     _GODONE	set	32273
   179   000000                     _TRISD7	set	31919
   180   000000                     _ADCON0	set	4034
   181   000000                     _TRISD	set	3989
   182   000000                     _PORTBbits	set	3969
   183   000000                     _RCIF	set	31989
   184   000000                     _TXIF	set	31988
   185   000000                     _CREN	set	32092
   186   000000                     _RX9	set	32094
   187   000000                     _BRGH	set	32098
   188   000000                     _SENDB	set	32099
   189   000000                     _SYNC	set	32100
   190   000000                     _TXEN	set	32101
   191   000000                     _TRISC6	set	31910
   192   000000                     _TRISC7	set	31911
   193   000000                     _ACKEN	set	32300
   194   000000                     _ACKDT	set	32301
   195   000000                     _RCEN	set	32299
   196   000000                     _RSEN	set	32297
   197   000000                     _PEN	set	32298
   198   000000                     _SEN	set	32296
   199   000000                     _SMP	set	32319
   200   000000                     _TRISC4	set	31908
   201   000000                     _TRISC3	set	31907
   202   000000                     _TMR0IE	set	32661
   203   000000                     _TMR0IF	set	32658
   204   000000                     _PSA	set	32427
   205   000000                     _T0CS	set	32429
   206   000000                     _T08BIT	set	32430
   207   000000                     _GO	set	32273
   208   000000                     _ADON	set	32272
   209   000000                     _VCFG0	set	32268
   210   000000                     _VCFG1	set	32269
   211   000000                     _ADCS2	set	32258
   212   000000                     _ADCS1	set	32257
   213   000000                     _ADCS0	set	32256
   214   000000                     _ACQT0	set	32259
   215   000000                     _ACQT1	set	32260
   216   000000                     _ACQT2	set	32261
   217   000000                     _RD7	set	31775
   218   000000                     _RC0	set	31760
   219   000000                     _RC2	set	31762
   220   000000                     _GIE	set	32663
   221   000000                     _PORTB	set	3969
   222   000000                     _TRISB	set	3987
   223   000000                     _ADCON1	set	4033
   224   000000                     _TMR0ON	set	32431
   225   000000                     _TMR0	set	4054
   226   000000                     _RBPU	set	32655
   227   000000                     _PEIE	set	32662
   228   000000                     _PORTD	set	3971
   229   000000                     _RC1	set	31761
   230   000000                     _SSPIF	set	31987
   231   000000                     _ADFM	set	32263
   232   000000                     _SSPBUF	set	4041
   233   000000                     _BCLIF	set	32011
   234   000000                     _SPEN	set	32095
   235   000000                     _TX9	set	32102
   236                           
   237                           	psect	mediumconst
   238   002D58                     __pmediumconst:
   239                           	callstack 0
   240   002D58  00                 	db	0
   241   002D59                     STR_62:
   242   002D59  20                 	db	32
   243   002D5A  20                 	db	32
   244   002D5B  20                 	db	32
   245   002D5C  20                 	db	32
   246   002D5D  25                 	db	37
   247   002D5E  63                 	db	99	;'c'
   248   002D5F  20                 	db	32
   249   002D60  20                 	db	32
   250   002D61  20                 	db	32
   251   002D62  25                 	db	37
   252   002D63  63                 	db	99	;'c'
   253   002D64  25                 	db	37
   254   002D65  63                 	db	99	;'c'
   255   002D66  3A                 	db	58	;':'
   256   002D67  25                 	db	37
   257   002D68  63                 	db	99	;'c'
   258   002D69  25                 	db	37
   259   002D6A  63                 	db	99	;'c'
   260   002D6B  3A                 	db	58	;':'
   261   002D6C  25                 	db	37
   262   002D6D  63                 	db	99	;'c'
   263   002D6E  25                 	db	37
   264   002D6F  63                 	db	99	;'c'
   265   002D70  20                 	db	32
   266   002D71  20                 	db	32
   267   002D72  20                 	db	32
   268   002D73  20                 	db	32
   269   002D74  20                 	db	32
   270   002D75  25                 	db	37
   271   002D76  63                 	db	99	;'c'
   272   002D77  25                 	db	37
   273   002D78  63                 	db	99	;'c'
   274   002D79  20                 	db	32
   275   002D7A  20                 	db	32
   276   002D7B  20                 	db	32
   277   002D7C  20                 	db	32
   278   002D7D  20                 	db	32
   279   002D7E  20                 	db	32
   280   002D7F  25                 	db	37
   281   002D80  63                 	db	99	;'c'
   282   002D81  25                 	db	37
   283   002D82  63                 	db	99	;'c'
   284   002D83  20                 	db	32
   285   002D84  20                 	db	32
   286   002D85  0A                 	db	10
   287   002D86  0D                 	db	13
   288   002D87  00                 	db	0
   289   002D88                     STR_61:
   290   002D88  2D                 	db	45
   291   002D89  2D                 	db	45
   292   002D8A  2D                 	db	45
   293   002D8B  2D                 	db	45
   294   002D8C  2D                 	db	45
   295   002D8D  20                 	db	32
   296   002D8E  20                 	db	32
   297   002D8F  20                 	db	32
   298   002D90  2D                 	db	45
   299   002D91  2D                 	db	45
   300   002D92  2D                 	db	45
   301   002D93  2D                 	db	45
   302   002D94  20                 	db	32
   303   002D95  20                 	db	32
   304   002D96  20                 	db	32
   305   002D97  20                 	db	32
   306   002D98  20                 	db	32
   307   002D99  20                 	db	32
   308   002D9A  20                 	db	32
   309   002D9B  2D                 	db	45
   310   002D9C  2D                 	db	45
   311   002D9D  2D                 	db	45
   312   002D9E  2D                 	db	45
   313   002D9F  20                 	db	32
   314   002DA0  20                 	db	32
   315   002DA1  20                 	db	32
   316   002DA2  2D                 	db	45
   317   002DA3  2D                 	db	45
   318   002DA4  2D                 	db	45
   319   002DA5  2D                 	db	45
   320   002DA6  2D                 	db	45
   321   002DA7  0A                 	db	10
   322   002DA8  0D                 	db	13
   323   002DA9  00                 	db	0
   324   002DAA                     STR_60:
   325   002DAA  53                 	db	83	;'S'
   326   002DAB  4C                 	db	76	;'L'
   327   002DAC  20                 	db	32
   328   002DAD  4E                 	db	78	;'N'
   329   002DAE  4F                 	db	79	;'O'
   330   002DAF  20                 	db	32
   331   002DB0  20                 	db	32
   332   002DB1  20                 	db	32
   333   002DB2  44                 	db	68	;'D'
   334   002DB3  41                 	db	65	;'A'
   335   002DB4  54                 	db	84	;'T'
   336   002DB5  45                 	db	69	;'E'
   337   002DB6  20                 	db	32
   338   002DB7  20                 	db	32
   339   002DB8  20                 	db	32
   340   002DB9  20                 	db	32
   341   002DBA  20                 	db	32
   342   002DBB  20                 	db	32
   343   002DBC  20                 	db	32
   344   002DBD  47                 	db	71	;'G'
   345   002DBE  45                 	db	69	;'E'
   346   002DBF  41                 	db	65	;'A'
   347   002DC0  52                 	db	82	;'R'
   348   002DC1  20                 	db	32
   349   002DC2  20                 	db	32
   350   002DC3  20                 	db	32
   351   002DC4  53                 	db	83	;'S'
   352   002DC5  50                 	db	80	;'P'
   353   002DC6  45                 	db	69	;'E'
   354   002DC7  45                 	db	69	;'E'
   355   002DC8  44                 	db	68	;'D'
   356   002DC9  0A                 	db	10
   357   002DCA  0D                 	db	13
   358   002DCB  00                 	db	0
   359   002DCC                     STR_36:
   360   002DCC  20                 	db	32
   361   002DCD  20                 	db	32
   362   002DCE  2D                 	db	45
   363   002DCF  2D                 	db	45
   364   002DD0  2D                 	db	45
   365   002DD1  2D                 	db	45
   366   002DD2  2D                 	db	45
   367   002DD3  2D                 	db	45
   368   002DD4  2D                 	db	45
   369   002DD5  2D                 	db	45
   370   002DD6  2D                 	db	45
   371   002DD7  2D                 	db	45
   372   002DD8  2D                 	db	45
   373   002DD9  20                 	db	32
   374   002DDA  20                 	db	32
   375   002DDB  20                 	db	32
   376   002DDC  20                 	db	32
   377   002DDD  20                 	db	32
   378   002DDE  20                 	db	32
   379   002DDF  00                 	db	0
   380   002DE0                     STR_35:
   381   002DE0  20                 	db	32
   382   002DE1  20                 	db	32
   383   002DE2  4C                 	db	76	;'L'
   384   002DE3  4F                 	db	79	;'O'
   385   002DE4  47                 	db	71	;'G'
   386   002DE5  20                 	db	32
   387   002DE6  43                 	db	67	;'C'
   388   002DE7  4C                 	db	76	;'L'
   389   002DE8  45                 	db	69	;'E'
   390   002DE9  41                 	db	65	;'A'
   391   002DEA  52                 	db	82	;'R'
   392   002DEB  45                 	db	69	;'E'
   393   002DEC  44                 	db	68	;'D'
   394   002DED  20                 	db	32
   395   002DEE  20                 	db	32
   396   002DEF  20                 	db	32
   397   002DF0  20                 	db	32
   398   002DF1  20                 	db	32
   399   002DF2  20                 	db	32
   400   002DF3  00                 	db	0
   401   002DF4                     STR_111:
   402   002DF4  45                 	db	69	;'E'
   403   002DF5  6E                 	db	110	;'n'
   404   002DF6  74                 	db	116	;'t'
   405   002DF7  65                 	db	101	;'e'
   406   002DF8  72                 	db	114	;'r'
   407   002DF9  20                 	db	32
   408   002DFA  50                 	db	80	;'P'
   409   002DFB  61                 	db	97	;'a'
   410   002DFC  73                 	db	115	;'s'
   411   002DFD  73                 	db	115	;'s'
   412   002DFE  77                 	db	119	;'w'
   413   002DFF  6F                 	db	111	;'o'
   414   002E00  72                 	db	114	;'r'
   415   002E01  64                 	db	100	;'d'
   416   002E02  20                 	db	32
   417   002E03  3A                 	db	58	;':'
   418   002E04  20                 	db	32
   419   002E05  00                 	db	0
   420   002E06                     STR_15:
   421   002E06  20                 	db	32
   422   002E07  20                 	db	32
   423   002E08  20                 	db	32
   424   002E09  20                 	db	32
   425   002E0A  20                 	db	32
   426   002E0B  20                 	db	32
   427   002E0C  20                 	db	32
   428   002E0D  20                 	db	32
   429   002E0E  20                 	db	32
   430   002E0F  20                 	db	32
   431   002E10  20                 	db	32
   432   002E11  20                 	db	32
   433   002E12  20                 	db	32
   434   002E13  20                 	db	32
   435   002E14  20                 	db	32
   436   002E15  20                 	db	32
   437   002E16  20                 	db	32
   438   002E17  00                 	db	0
   439   002E18                     STR_22:
   440   002E18  53                 	db	83	;'S'
   441   002E19  55                 	db	85	;'U'
   442   002E1A  43                 	db	67	;'C'
   443   002E1B  43                 	db	67	;'C'
   444   002E1C  45                 	db	69	;'E'
   445   002E1D  53                 	db	83	;'S'
   446   002E1E  53                 	db	83	;'S'
   447   002E1F  2E                 	db	46
   448   002E20  2E                 	db	46
   449   002E21  20                 	db	32
   450   002E22  20                 	db	32
   451   002E23  20                 	db	32
   452   002E24  20                 	db	32
   453   002E25  20                 	db	32
   454   002E26  20                 	db	32
   455   002E27  20                 	db	32
   456   002E28  20                 	db	32
   457   002E29  00                 	db	0
   458   002E2A                     STR_23:
   459   002E2A  50                 	db	80	;'P'
   460   002E2B  53                 	db	83	;'S'
   461   002E2C  57                 	db	87	;'W'
   462   002E2D  44                 	db	68	;'D'
   463   002E2E  20                 	db	32
   464   002E2F  53                 	db	83	;'S'
   465   002E30  41                 	db	65	;'A'
   466   002E31  56                 	db	86	;'V'
   467   002E32  45                 	db	69	;'E'
   468   002E33  44                 	db	68	;'D'
   469   002E34  2E                 	db	46
   470   002E35  20                 	db	32
   471   002E36  20                 	db	32
   472   002E37  20                 	db	32
   473   002E38  20                 	db	32
   474   002E39  20                 	db	32
   475   002E3A  20                 	db	32
   476   002E3B  00                 	db	0
   477   002E3C                     STR_14:
   478   002E3C  45                 	db	69	;'E'
   479   002E3D  4E                 	db	78	;'N'
   480   002E3E  54                 	db	84	;'T'
   481   002E3F  45                 	db	69	;'E'
   482   002E40  52                 	db	82	;'R'
   483   002E41  20                 	db	32
   484   002E42  4E                 	db	78	;'N'
   485   002E43  45                 	db	69	;'E'
   486   002E44  57                 	db	87	;'W'
   487   002E45  20                 	db	32
   488   002E46  50                 	db	80	;'P'
   489   002E47  53                 	db	83	;'S'
   490   002E48  57                 	db	87	;'W'
   491   002E49  44                 	db	68	;'D'
   492   002E4A  20                 	db	32
   493   002E4B  20                 	db	32
   494   002E4C  20                 	db	32
   495   002E4D  00                 	db	0
   496   002E4E                     STR_18:
   497   002E4E  52                 	db	82	;'R'
   498   002E4F  45                 	db	69	;'E'
   499   002E50  45                 	db	69	;'E'
   500   002E51  4E                 	db	78	;'N'
   501   002E52  54                 	db	84	;'T'
   502   002E53  45                 	db	69	;'E'
   503   002E54  52                 	db	82	;'R'
   504   002E55  20                 	db	32
   505   002E56  4E                 	db	78	;'N'
   506   002E57  45                 	db	69	;'E'
   507   002E58  57                 	db	87	;'W'
   508   002E59  20                 	db	32
   509   002E5A  50                 	db	80	;'P'
   510   002E5B  53                 	db	83	;'S'
   511   002E5C  57                 	db	87	;'W'
   512   002E5D  44                 	db	68	;'D'
   513   002E5E  20                 	db	32
   514   002E5F  00                 	db	0
   515   002E60                     STR_155:
   516   002E60  20                 	db	32
   517   002E61  20                 	db	32
   518   002E62  56                 	db	86	;'V'
   519   002E63  49                 	db	73	;'I'
   520   002E64  45                 	db	69	;'E'
   521   002E65  57                 	db	87	;'W'
   522   002E66  20                 	db	32
   523   002E67  4C                 	db	76	;'L'
   524   002E68  4F                 	db	79	;'O'
   525   002E69  47                 	db	71	;'G'
   526   002E6A  20                 	db	32
   527   002E6B  3A                 	db	58	;':'
   528   002E6C  20                 	db	32
   529   002E6D  20                 	db	32
   530   002E6E  20                 	db	32
   531   002E6F  20                 	db	32
   532   002E70  00                 	db	0
   533   002E71                     STR_156:
   534   002E71  20                 	db	32
   535   002E72  3C                 	db	60	;'<'
   536   002E73  20                 	db	32
   537   002E74  45                 	db	69	;'E'
   538   002E75  4D                 	db	77	;'M'
   539   002E76  50                 	db	80	;'P'
   540   002E77  54                 	db	84	;'T'
   541   002E78  59                 	db	89	;'Y'
   542   002E79  20                 	db	32
   543   002E7A  4C                 	db	76	;'L'
   544   002E7B  4F                 	db	79	;'O'
   545   002E7C  47                 	db	71	;'G'
   546   002E7D  20                 	db	32
   547   002E7E  3E                 	db	62	;'>'
   548   002E7F  20                 	db	32
   549   002E80  20                 	db	32
   550   002E81  00                 	db	0
   551   002E82                     STR_154:
   552   002E82  23                 	db	35
   553   002E83  20                 	db	32
   554   002E84  54                 	db	84	;'T'
   555   002E85  49                 	db	73	;'I'
   556   002E86  4D                 	db	77	;'M'
   557   002E87  45                 	db	69	;'E'
   558   002E88  20                 	db	32
   559   002E89  20                 	db	32
   560   002E8A  20                 	db	32
   561   002E8B  47                 	db	71	;'G'
   562   002E8C  45                 	db	69	;'E'
   563   002E8D  41                 	db	65	;'A'
   564   002E8E  52                 	db	82	;'R'
   565   002E8F  20                 	db	32
   566   002E90  53                 	db	83	;'S'
   567   002E91  50                 	db	80	;'P'
   568   002E92  00                 	db	0
   569   002E93                     STR_115:
   570   002E93  20                 	db	32
   571   002E94  20                 	db	32
   572   002E95  20                 	db	32
   573   002E96  2D                 	db	45
   574   002E97  2D                 	db	45
   575   002E98  2D                 	db	45
   576   002E99  2D                 	db	45
   577   002E9A  2D                 	db	45
   578   002E9B  2D                 	db	45
   579   002E9C  2D                 	db	45
   580   002E9D  2D                 	db	45
   581   002E9E  2D                 	db	45
   582   002E9F  20                 	db	32
   583   002EA0  20                 	db	32
   584   002EA1  20                 	db	32
   585   002EA2  20                 	db	32
   586   002EA3  00                 	db	0
   587   002EA4                     STR_122:
   588   002EA4  55                 	db	85	;'U'
   589   002EA5  53                 	db	83	;'S'
   590   002EA6  45                 	db	69	;'E'
   591   002EA7  52                 	db	82	;'R'
   592   002EA8  20                 	db	32
   593   002EA9  42                 	db	66	;'B'
   594   002EAA  4C                 	db	76	;'L'
   595   002EAB  4F                 	db	79	;'O'
   596   002EAC  43                 	db	67	;'C'
   597   002EAD  4B                 	db	75	;'K'
   598   002EAE  45                 	db	69	;'E'
   599   002EAF  44                 	db	68	;'D'
   600   002EB0  20                 	db	32
   601   002EB1  20                 	db	32
   602   002EB2  20                 	db	32
   603   002EB3  20                 	db	32
   604   002EB4  00                 	db	0
   605   002EB5                     STR_114:
   606   002EB5  20                 	db	32
   607   002EB6  20                 	db	32
   608   002EB7  20                 	db	32
   609   002EB8  4D                 	db	77	;'M'
   610   002EB9  41                 	db	65	;'A'
   611   002EBA  49                 	db	73	;'I'
   612   002EBB  4E                 	db	78	;'N'
   613   002EBC  20                 	db	32
   614   002EBD  4D                 	db	77	;'M'
   615   002EBE  45                 	db	69	;'E'
   616   002EBF  4E                 	db	78	;'N'
   617   002EC0  55                 	db	85	;'U'
   618   002EC1  20                 	db	32
   619   002EC2  20                 	db	32
   620   002EC3  20                 	db	32
   621   002EC4  20                 	db	32
   622   002EC5  00                 	db	0
   623   002EC6                     STR_123:
   624   002EC6  46                 	db	70	;'F'
   625   002EC7  6F                 	db	111	;'o'
   626   002EC8  72                 	db	114	;'r'
   627   002EC9  20                 	db	32
   628   002ECA  25                 	db	37
   629   002ECB  33                 	db	51	;'3'
   630   002ECC  64                 	db	100	;'d'
   631   002ECD  20                 	db	32
   632   002ECE  73                 	db	115	;'s'
   633   002ECF  65                 	db	101	;'e'
   634   002ED0  63                 	db	99	;'c'
   635   002ED1  6F                 	db	111	;'o'
   636   002ED2  6E                 	db	110	;'n'
   637   002ED3  64                 	db	100	;'d'
   638   002ED4  73                 	db	115	;'s'
   639   002ED5  20                 	db	32
   640   002ED6  00                 	db	0
   641   002ED7                     STR_93:
   642   002ED7  4D                 	db	77	;'M'
   643   002ED8  45                 	db	69	;'E'
   644   002ED9  4E                 	db	78	;'N'
   645   002EDA  55                 	db	85	;'U'
   646   002EDB  20                 	db	32
   647   002EDC  45                 	db	69	;'E'
   648   002EDD  4E                 	db	78	;'N'
   649   002EDE  54                 	db	84	;'T'
   650   002EDF  45                 	db	69	;'E'
   651   002EE0  52                 	db	82	;'R'
   652   002EE1  2E                 	db	46
   653   002EE2  2E                 	db	46
   654   002EE3  20                 	db	32
   655   002EE4  20                 	db	32
   656   002EE5  20                 	db	32
   657   002EE6  20                 	db	32
   658   002EE7  00                 	db	0
   659   002EE8                     STR_66:
   660   002EE8  4C                 	db	76	;'L'
   661   002EE9  4F                 	db	79	;'O'
   662   002EEA  47                 	db	71	;'G'
   663   002EEB  53                 	db	83	;'S'
   664   002EEC  20                 	db	32
   665   002EED  41                 	db	65	;'A'
   666   002EEE  52                 	db	82	;'R'
   667   002EEF  45                 	db	69	;'E'
   668   002EF0  20                 	db	32
   669   002EF1  45                 	db	69	;'E'
   670   002EF2  4D                 	db	77	;'M'
   671   002EF3  50                 	db	80	;'P'
   672   002EF4  54                 	db	84	;'T'
   673   002EF5  59                 	db	89	;'Y'
   674   002EF6  0A                 	db	10
   675   002EF7  0D                 	db	13
   676   002EF8  00                 	db	0
   677   002EF9                     STR_57:
   678   002EF9  20                 	db	32
   679   002EFA  44                 	db	68	;'D'
   680   002EFB  4F                 	db	79	;'O'
   681   002EFC  57                 	db	87	;'W'
   682   002EFD  4E                 	db	78	;'N'
   683   002EFE  4C                 	db	76	;'L'
   684   002EFF  4F                 	db	79	;'O'
   685   002F00  41                 	db	65	;'A'
   686   002F01  44                 	db	68	;'D'
   687   002F02  49                 	db	73	;'I'
   688   002F03  4E                 	db	78	;'N'
   689   002F04  47                 	db	71	;'G'
   690   002F05  2E                 	db	46
   691   002F06  2E                 	db	46
   692   002F07  20                 	db	32
   693   002F08  20                 	db	32
   694   002F09  00                 	db	0
   695   002F0A                     STR_47:
   696   002F0A  54                 	db	84	;'T'
   697   002F0B  49                 	db	73	;'I'
   698   002F0C  4D                 	db	77	;'M'
   699   002F0D  45                 	db	69	;'E'
   700   002F0E  20                 	db	32
   701   002F0F  20                 	db	32
   702   002F10  20                 	db	32
   703   002F11  20                 	db	32
   704   002F12  20                 	db	32
   705   002F13  47                 	db	71	;'G'
   706   002F14  45                 	db	69	;'E'
   707   002F15  41                 	db	65	;'A'
   708   002F16  52                 	db	82	;'R'
   709   002F17  20                 	db	32
   710   002F18  53                 	db	83	;'S'
   711   002F19  50                 	db	80	;'P'
   712   002F1A  00                 	db	0
   713   002F1B                     STR_24:
   714   002F1B  46                 	db	70	;'F'
   715   002F1C  41                 	db	65	;'A'
   716   002F1D  49                 	db	73	;'I'
   717   002F1E  4C                 	db	76	;'L'
   718   002F1F  45                 	db	69	;'E'
   719   002F20  44                 	db	68	;'D'
   720   002F21  21                 	db	33
   721   002F22  21                 	db	33
   722   002F23  20                 	db	32
   723   002F24  20                 	db	32
   724   002F25  20                 	db	32
   725   002F26  20                 	db	32
   726   002F27  20                 	db	32
   727   002F28  20                 	db	32
   728   002F29  20                 	db	32
   729   002F2A  20                 	db	32
   730   002F2B  00                 	db	0
   731   002F2C                     STR_25:
   732   002F2C  4E                 	db	78	;'N'
   733   002F2D  4F                 	db	79	;'O'
   734   002F2E  54                 	db	84	;'T'
   735   002F2F  20                 	db	32
   736   002F30  4D                 	db	77	;'M'
   737   002F31  41                 	db	65	;'A'
   738   002F32  54                 	db	84	;'T'
   739   002F33  43                 	db	67	;'C'
   740   002F34  48                 	db	72	;'H'
   741   002F35  49                 	db	73	;'I'
   742   002F36  4E                 	db	78	;'N'
   743   002F37  47                 	db	71	;'G'
   744   002F38  2E                 	db	46
   745   002F39  2E                 	db	46
   746   002F3A  20                 	db	32
   747   002F3B  20                 	db	32
   748   002F3C  00                 	db	0
   749   002F3D                     STR_11:
   750   002F3D  45                 	db	69	;'E'
   751   002F3E  4E                 	db	78	;'N'
   752   002F3F  54                 	db	84	;'T'
   753   002F40  45                 	db	69	;'E'
   754   002F41  52                 	db	82	;'R'
   755   002F42  20                 	db	32
   756   002F43  4F                 	db	79	;'O'
   757   002F44  4C                 	db	76	;'L'
   758   002F45  44                 	db	68	;'D'
   759   002F46  20                 	db	32
   760   002F47  50                 	db	80	;'P'
   761   002F48  53                 	db	83	;'S'
   762   002F49  57                 	db	87	;'W'
   763   002F4A  44                 	db	68	;'D'
   764   002F4B  20                 	db	32
   765   002F4C  20                 	db	32
   766   002F4D  00                 	db	0
   767   002F4E                     STR_118:
   768   002F4E  57                 	db	87	;'W'
   769   002F4F  72                 	db	114	;'r'
   770   002F50  6F                 	db	111	;'o'
   771   002F51  6E                 	db	110	;'n'
   772   002F52  67                 	db	103	;'g'
   773   002F53  20                 	db	32
   774   002F54  50                 	db	80	;'P'
   775   002F55  61                 	db	97	;'a'
   776   002F56  73                 	db	115	;'s'
   777   002F57  73                 	db	115	;'s'
   778   002F58  77                 	db	119	;'w'
   779   002F59  6F                 	db	111	;'o'
   780   002F5A  72                 	db	114	;'r'
   781   002F5B  64                 	db	100	;'d'
   782   002F5C  20                 	db	32
   783   002F5D  00                 	db	0
   784   002F5E                     STR_119:
   785   002F5E  20                 	db	32
   786   002F5F  61                 	db	97	;'a'
   787   002F60  74                 	db	116	;'t'
   788   002F61  74                 	db	116	;'t'
   789   002F62  65                 	db	101	;'e'
   790   002F63  6D                 	db	109	;'m'
   791   002F64  70                 	db	112	;'p'
   792   002F65  74                 	db	116	;'t'
   793   002F66  73                 	db	115	;'s'
   794   002F67  20                 	db	32
   795   002F68  6C                 	db	108	;'l'
   796   002F69  65                 	db	101	;'e'
   797   002F6A  66                 	db	102	;'f'
   798   002F6B  74                 	db	116	;'t'
   799   002F6C  20                 	db	32
   800   002F6D  00                 	db	0
   801   002F6E                     STR_91:
   802   002F6E  53                 	db	83	;'S'
   803   002F6F  65                 	db	101	;'e'
   804   002F70  74                 	db	116	;'t'
   805   002F71  20                 	db	32
   806   002F72  54                 	db	84	;'T'
   807   002F73  69                 	db	105	;'i'
   808   002F74  6D                 	db	109	;'m'
   809   002F75  65                 	db	101	;'e'
   810   002F76  20                 	db	32
   811   002F77  20                 	db	32
   812   002F78  20                 	db	32
   813   002F79  20                 	db	32
   814   002F7A  20                 	db	32
   815   002F7B  20                 	db	32
   816   002F7C  20                 	db	32
   817   002F7D  00                 	db	0
   818   002F7E                     STR_88:
   819   002F7E  56                 	db	86	;'V'
   820   002F7F  69                 	db	105	;'i'
   821   002F80  65                 	db	101	;'e'
   822   002F81  77                 	db	119	;'w'
   823   002F82  20                 	db	32
   824   002F83  4C                 	db	76	;'L'
   825   002F84  6F                 	db	111	;'o'
   826   002F85  67                 	db	103	;'g'
   827   002F86  20                 	db	32
   828   002F87  20                 	db	32
   829   002F88  20                 	db	32
   830   002F89  20                 	db	32
   831   002F8A  20                 	db	32
   832   002F8B  20                 	db	32
   833   002F8C  20                 	db	32
   834   002F8D  00                 	db	0
   835   002F8E                     STR_89:
   836   002F8E  43                 	db	67	;'C'
   837   002F8F  6C                 	db	108	;'l'
   838   002F90  65                 	db	101	;'e'
   839   002F91  61                 	db	97	;'a'
   840   002F92  72                 	db	114	;'r'
   841   002F93  20                 	db	32
   842   002F94  4C                 	db	76	;'L'
   843   002F95  6F                 	db	111	;'o'
   844   002F96  67                 	db	103	;'g'
   845   002F97  20                 	db	32
   846   002F98  20                 	db	32
   847   002F99  20                 	db	32
   848   002F9A  20                 	db	32
   849   002F9B  20                 	db	32
   850   002F9C  20                 	db	32
   851   002F9D  00                 	db	0
   852   002F9E                     STR_90:
   853   002F9E  44                 	db	68	;'D'
   854   002F9F  6F                 	db	111	;'o'
   855   002FA0  77                 	db	119	;'w'
   856   002FA1  6E                 	db	110	;'n'
   857   002FA2  6C                 	db	108	;'l'
   858   002FA3  6F                 	db	111	;'o'
   859   002FA4  61                 	db	97	;'a'
   860   002FA5  64                 	db	100	;'d'
   861   002FA6  20                 	db	32
   862   002FA7  4C                 	db	76	;'L'
   863   002FA8  6F                 	db	111	;'o'
   864   002FA9  67                 	db	103	;'g'
   865   002FAA  20                 	db	32
   866   002FAB  20                 	db	32
   867   002FAC  20                 	db	32
   868   002FAD  00                 	db	0
   869   002FAE                     STR_92:
   870   002FAE  43                 	db	67	;'C'
   871   002FAF  68                 	db	104	;'h'
   872   002FB0  61                 	db	97	;'a'
   873   002FB1  6E                 	db	110	;'n'
   874   002FB2  67                 	db	103	;'g'
   875   002FB3  65                 	db	101	;'e'
   876   002FB4  20                 	db	32
   877   002FB5  50                 	db	80	;'P'
   878   002FB6  61                 	db	97	;'a'
   879   002FB7  73                 	db	115	;'s'
   880   002FB8  73                 	db	115	;'s'
   881   002FB9  77                 	db	119	;'w'
   882   002FBA  6F                 	db	111	;'o'
   883   002FBB  72                 	db	114	;'r'
   884   002FBC  64                 	db	100	;'d'
   885   002FBD  00                 	db	0
   886   002FBE                     STR_134:
   887   002FBE  53                 	db	83	;'S'
   888   002FBF  45                 	db	69	;'E'
   889   002FC0  54                 	db	84	;'T'
   890   002FC1  20                 	db	32
   891   002FC2  54                 	db	84	;'T'
   892   002FC3  49                 	db	73	;'I'
   893   002FC4  4D                 	db	77	;'M'
   894   002FC5  45                 	db	69	;'E'
   895   002FC6  20                 	db	32
   896   002FC7  20                 	db	32
   897   002FC8  20                 	db	32
   898   002FC9  20                 	db	32
   899   002FCA  20                 	db	32
   900   002FCB  00                 	db	0
   901   002FCC                     STR_46:
   902   002FCC  20                 	db	32
   903   002FCD  20                 	db	32
   904   002FCE  25                 	db	37
   905   002FCF  73                 	db	115	;'s'
   906   002FD0  20                 	db	32
   907   002FD1  20                 	db	32
   908   002FD2  25                 	db	37
   909   002FD3  32                 	db	50	;'2'
   910   002FD4  64                 	db	100	;'d'
   911   002FD5  00                 	db	0
   912   002FD6                     STR_184:
   913   002FD6  28                 	db	40
   914   002FD7  6E                 	db	110	;'n'
   915   002FD8  75                 	db	117	;'u'
   916   002FD9  6C                 	db	108	;'l'
   917   002FDA  6C                 	db	108	;'l'
   918   002FDB  29                 	db	41
   919   002FDC  00                 	db	0
   920   002FDD                     STR_117:
   921   002FDD  25                 	db	37
   922   002FDE  64                 	db	100	;'d'
   923   002FDF  00                 	db	0
   924   002FE0                     STR_9:
   925   002FE0  43                 	db	67	;'C'
   926   002FE1  20                 	db	32
   927   002FE2  00                 	db	0
   928   002FE3                     STR_4:
   929   002FE3  47                 	db	71	;'G'
   930   002FE4  31                 	db	49	;'1'
   931   002FE5  00                 	db	0
   932   002FE6                     STR_5:
   933   002FE6  47                 	db	71	;'G'
   934   002FE7  32                 	db	50	;'2'
   935   002FE8  00                 	db	0
   936   002FE9                     STR_6:
   937   002FE9  47                 	db	71	;'G'
   938   002FEA  33                 	db	51	;'3'
   939   002FEB  00                 	db	0
   940   002FEC                     STR_7:
   941   002FEC  47                 	db	71	;'G'
   942   002FED  34                 	db	52	;'4'
   943   002FEE  00                 	db	0
   944   002FEF                     STR_8:
   945   002FEF  47                 	db	71	;'G'
   946   002FF0  35                 	db	53	;'5'
   947   002FF1  00                 	db	0
   948   002FF2                     STR_2:
   949   002FF2  47                 	db	71	;'G'
   950   002FF3  4E                 	db	78	;'N'
   951   002FF4  00                 	db	0
   952   002FF5                     STR_1:
   953   002FF5  4F                 	db	79	;'O'
   954   002FF6  4E                 	db	78	;'N'
   955   002FF7  00                 	db	0
   956   002FF8                     STR_3:
   957   002FF8  47                 	db	71	;'G'
   958   002FF9  52                 	db	82	;'R'
   959   002FFA  00                 	db	0
   960   002FFB                     STR_10:
   961   002FFB  2A                 	db	42
   962   002FFC  00                 	db	0
   963   002FFD                     STR_12:
   964   002FFD  5F                 	db	95	;'_'
   965   002FFE  00                 	db	0
   966   002FFF  00                 	db	0	; dummy byte at the end
   967   000000                     
   968                           ; #config settings
   969                           
   970                           	psect	cinit
   971   002358                     __pcinit:
   972                           	callstack 0
   973   002358                     start_initialization:
   974                           	callstack 0
   975   002358                     __initialization:
   976                           	callstack 0
   977                           
   978                           ; Initialize objects allocated to BANK1 (18 bytes)
   979                           ; load TBLPTR registers with __pidataBANK1
   980   002358  0EBC               	movlw	low __pidataBANK1
   981   00235A  6EF6               	movwf	tblptrl,c
   982   00235C  0E29               	movlw	high __pidataBANK1
   983   00235E  6EF7               	movwf	tblptrh,c
   984   002360  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   985   002362  6EF8               	movwf	tblptru,c
   986   002364  EE01  F020         	lfsr	0,__pdataBANK1
   987   002368  EE10 F012          	lfsr	1,18
   988   00236C                     copy_data0:
   989   00236C  0009               	tblrd		*+
   990   00236E  CFF5 FFEE          	movff	tablat,postinc0
   991   002372  50E5               	movf	postdec1,w,c
   992   002374  50E1               	movf	fsr1l,w,c
   993   002376  E1FA               	bnz	copy_data0
   994                           
   995                           ; Initialize objects allocated to BANK0 (14 bytes)
   996                           ; load TBLPTR registers with __pidataBANK0
   997   002378  0EF2               	movlw	low __pidataBANK0
   998   00237A  6EF6               	movwf	tblptrl,c
   999   00237C  0E29               	movlw	high __pidataBANK0
  1000   00237E  6EF7               	movwf	tblptrh,c
  1001   002380  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1002   002382  6EF8               	movwf	tblptru,c
  1003   002384  EE00  F0F1         	lfsr	0,__pdataBANK0
  1004   002388  EE10 F00E          	lfsr	1,14
  1005   00238C                     copy_data1:
  1006   00238C  0009               	tblrd		*+
  1007   00238E  CFF5 FFEE          	movff	tablat,postinc0
  1008   002392  50E5               	movf	postdec1,w,c
  1009   002394  50E1               	movf	fsr1l,w,c
  1010   002396  E1FA               	bnz	copy_data1
  1011                           
  1012                           ; Clear objects allocated to BANK1 (32 bytes)
  1013   002398  EE01  F000         	lfsr	0,__pbssBANK1
  1014   00239C  0E20               	movlw	32
  1015   00239E                     clear_0:
  1016   00239E  6AEE               	clrf	postinc0,c
  1017   0023A0  06E8               	decf	wreg,f,c
  1018   0023A2  E1FD               	bnz	clear_0
  1019                           
  1020                           ; Clear objects allocated to BANK0 (79 bytes)
  1021   0023A4  EE00  F060         	lfsr	0,__pbssBANK0
  1022   0023A8  0E4F               	movlw	79
  1023   0023AA                     clear_1:
  1024   0023AA  6AEE               	clrf	postinc0,c
  1025   0023AC  06E8               	decf	wreg,f,c
  1026   0023AE  E1FD               	bnz	clear_1
  1027                           
  1028                           ; Clear objects allocated to COMRAM (9 bytes)
  1029   0023B0  EE00  F051         	lfsr	0,__pbssCOMRAM
  1030   0023B4  0E09               	movlw	9
  1031   0023B6                     clear_2:
  1032   0023B6  6AEE               	clrf	postinc0,c
  1033   0023B8  06E8               	decf	wreg,f,c
  1034   0023BA  E1FD               	bnz	clear_2
  1035   0023BC                     end_of_initialization:
  1036                           	callstack 0
  1037   0023BC                     __end_of__initialization:
  1038                           	callstack 0
  1039   0023BC  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1040   0023BE  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1041   0023C0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1042   0023C2  6EF8               	movwf	tblptru,c
  1043   0023C4  0100               	movlb	0
  1044   0023C6  EF70  F003         	goto	_main	;jump to C main() function
  1045                           
  1046                           	psect	bssCOMRAM
  1047   000051                     __pbssCOMRAM:
  1048                           	callstack 0
  1049   000051                     _scd:
  1050                           	callstack 0
  1051   000051                     	ds	1
  1052   000052                     _mnn:
  1053                           	callstack 0
  1054   000052                     	ds	1
  1055   000053                     _hrr:
  1056                           	callstack 0
  1057   000053                     	ds	1
  1058   000054                     _field:
  1059                           	callstack 0
  1060   000054                     	ds	1
  1061   000055                     _byte:
  1062                           	callstack 0
  1063   000055                     	ds	1
  1064   000056                     _item_ind:
  1065                           	callstack 0
  1066   000056                     	ds	1
  1067   000057                     _ind:
  1068                           	callstack 0
  1069   000057                     	ds	1
  1070   000058                     _s:
  1071                           	callstack 0
  1072   000058                     	ds	1
  1073   000059                     _flag:
  1074                           	callstack 0
  1075   000059                     	ds	1
  1076                           
  1077                           	psect	bssBANK0
  1078   000060                     __pbssBANK0:
  1079                           	callstack 0
  1080   000060                     _newpw:
  1081                           	callstack 0
  1082   000060                     	ds	4
  1083   000064                     _try:
  1084                           	callstack 0
  1085   000064                     	ds	4
  1086   000068                     _pw:
  1087                           	callstack 0
  1088   000068                     	ds	4
  1089   00006C                     _calender_reg:
  1090                           	callstack 0
  1091   00006C                     	ds	4
  1092   000070                     _sec_delay:
  1093                           	callstack 0
  1094   000070                     	ds	4
  1095   000074                     _wait:
  1096                           	callstack 0
  1097   000074                     	ds	4
  1098   000078                     _clock_reg:
  1099                           	callstack 0
  1100   000078                     	ds	3
  1101   00007B                     _width:
  1102                           	callstack 0
  1103   00007B                     	ds	2
  1104   00007D                     _prec:
  1105                           	callstack 0
  1106   00007D                     	ds	2
  1107   00007F                     isr@count:
  1108                           	callstack 0
  1109   00007F                     	ds	2
  1110   000081                     read_switches@long_press:
  1111                           	callstack 0
  1112   000081                     	ds	2
  1113   000083                     _block_time:
  1114                           	callstack 0
  1115   000083                     	ds	2
  1116   000085                     _flags:
  1117                           	callstack 0
  1118   000085                     	ds	1
  1119   000086                     _once:
  1120                           	callstack 0
  1121   000086                     	ds	1
  1122   000087                     read_switches@pre_key1:
  1123                           	callstack 0
  1124   000087                     	ds	1
  1125   000088                     read_switches@key1:
  1126                           	callstack 0
  1127   000088                     	ds	1
  1128   000089                     _screen:
  1129                           	callstack 0
  1130   000089                     	ds	1
  1131   00008A                     _menu_f:
  1132                           	callstack 0
  1133   00008A                     	ds	1
  1134   00008B                     _main_f:
  1135                           	callstack 0
  1136   00008B                     	ds	1
  1137   00008C                     _back_f:
  1138                           	callstack 0
  1139   00008C                     	ds	1
  1140   00008D                     _e:
  1141                           	callstack 0
  1142   00008D                     	ds	1
  1143   00008E                     _full_f:
  1144                           	callstack 0
  1145   00008E                     	ds	1
  1146   00008F                     _p:
  1147                           	callstack 0
  1148   00008F                     	ds	1
  1149   000090                     _speed:
  1150                           	callstack 0
  1151   000090                     	ds	1
  1152   000091                     _sec:
  1153                           	callstack 0
  1154   000091                     	ds	1
  1155   000092                     _min:
  1156                           	callstack 0
  1157   000092                     	ds	1
  1158   000093                     _hr:
  1159                           	callstack 0
  1160   000093                     	ds	1
  1161   000094                     _index:
  1162                           	callstack 0
  1163   000094                     	ds	1
  1164   000095                     _str:
  1165                           	callstack 0
  1166   000095                     	ds	17
  1167   0000A6                     _time:
  1168                           	callstack 0
  1169   0000A6                     	ds	9
  1170                           
  1171                           	psect	dataBANK0
  1172   0000F1                     __pdataBANK0:
  1173                           	callstack 0
  1174   0000F1                     _menu_item:
  1175                           	callstack 0
  1176   0000F1                     	ds	10
  1177   0000FB                     read_switches@once:
  1178                           	callstack 0
  1179   0000FB                     	ds	2
  1180   0000FD                     _attempt:
  1181                           	callstack 0
  1182   0000FD                     	ds	1
  1183   0000FE                     _line:
  1184                           	callstack 0
  1185   0000FE                     	ds	1
  1186                           
  1187                           	psect	bssBANK1
  1188   000100                     __pbssBANK1:
  1189                           	callstack 0
  1190   000100                     _dbuf:
  1191                           	callstack 0
  1192   000100                     	ds	32
  1193                           
  1194                           	psect	dataBANK1
  1195   000120                     __pdataBANK1:
  1196                           	callstack 0
  1197   000120                     _gear:
  1198                           	callstack 0
  1199   000120                     	ds	18
  1200                           
  1201                           	psect	cstackBANK0
  1202   0000AF                     __pcstackBANK0:
  1203                           	callstack 0
  1204   0000AF                     ?_sprintf:
  1205                           	callstack 0
  1206   0000AF                     sprintf@s:
  1207                           	callstack 0
  1208                           
  1209                           ; 1 bytes @ 0x0
  1210   0000AF                     	ds	1
  1211   0000B0                     sprintf@fmt:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x1
  1215   0000B0                     	ds	24
  1216   0000C8                     write_10_bytes@ptr:
  1217                           	callstack 0
  1218   0000C8                     download_log@str:
  1219                           	callstack 0
  1220                           
  1221                           ; 30 bytes @ 0x19
  1222   0000C8                     	ds	2
  1223   0000CA                     write_10_bytes@time:
  1224                           	callstack 0
  1225                           
  1226                           ; 1 bytes @ 0x1B
  1227   0000CA                     	ds	1
  1228   0000CB                     write_10_bytes@index:
  1229                           	callstack 0
  1230                           
  1231                           ; 1 bytes @ 0x1C
  1232   0000CB                     	ds	1
  1233   0000CC                     write_10_bytes@speed:
  1234                           	callstack 0
  1235                           
  1236                           ; 1 bytes @ 0x1D
  1237   0000CC                     	ds	1
  1238   0000CD                     store_event@time:
  1239                           	callstack 0
  1240                           
  1241                           ; 1 bytes @ 0x1E
  1242   0000CD                     	ds	1
  1243   0000CE                     store_event@index:
  1244                           	callstack 0
  1245                           
  1246                           ; 1 bytes @ 0x1F
  1247   0000CE                     	ds	1
  1248   0000CF                     store_event@speed:
  1249                           	callstack 0
  1250                           
  1251                           ; 1 bytes @ 0x20
  1252   0000CF                     	ds	1
  1253   0000D0                     _store_event$678:
  1254                           	callstack 0
  1255                           
  1256                           ; 2 bytes @ 0x21
  1257   0000D0                     	ds	2
  1258   0000D2                     _store_event$679:
  1259                           	callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x23
  1262   0000D2                     	ds	2
  1263   0000D4                     _store_event$1801:
  1264                           	callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x25
  1267   0000D4                     	ds	2
  1268   0000D6                     dashboard@key:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x27
  1272   0000D6                     	ds	1
  1273   0000D7                     _dashboard$193:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x28
  1277   0000D7                     	ds	2
  1278   0000D9                     _dashboard$194:
  1279                           	callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x2A
  1282   0000D9                     	ds	2
  1283   0000DB                     _dashboard$195:
  1284                           	callstack 0
  1285                           
  1286                           ; 2 bytes @ 0x2C
  1287   0000DB                     	ds	2
  1288   0000DD                     _dashboard$196:
  1289                           	callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x2E
  1292   0000DD                     	ds	9
  1293   0000E6                     _download_log$1800:
  1294                           	callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x37
  1297   0000E6                     	ds	2
  1298   0000E8                     _download_log$253:
  1299                           	callstack 0
  1300                           
  1301                           ; 2 bytes @ 0x39
  1302   0000E8                     	ds	2
  1303   0000EA                     _main$368:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x3B
  1307   0000EA                     	ds	2
  1308   0000EC                     _main$369:
  1309                           	callstack 0
  1310                           
  1311                           ; 2 bytes @ 0x3D
  1312   0000EC                     	ds	2
  1313   0000EE                     main@adc_reg_val:
  1314                           	callstack 0
  1315                           
  1316                           ; 2 bytes @ 0x3F
  1317   0000EE                     	ds	2
  1318   0000F0                     main@key:
  1319                           	callstack 0
  1320                           
  1321                           ; 1 bytes @ 0x41
  1322   0000F0                     	ds	1
  1323                           
  1324                           	psect	cstackCOMRAM
  1325   000001                     __pcstackCOMRAM:
  1326                           	callstack 0
  1327   000001                     ?___lwmod:
  1328                           	callstack 0
  1329   000001                     ___lwmod@dividend:
  1330                           	callstack 0
  1331                           
  1332                           ; 2 bytes @ 0x0
  1333   000001                     	ds	2
  1334   000003                     ___lwmod@divisor:
  1335                           	callstack 0
  1336                           
  1337                           ; 2 bytes @ 0x2
  1338   000003                     	ds	2
  1339   000005                     ___lwmod@counter:
  1340                           	callstack 0
  1341                           
  1342                           ; 1 bytes @ 0x4
  1343   000005                     	ds	1
  1344   000006                     ??_read_switches:
  1345   000006                     ?_read_adc:
  1346                           	callstack 0
  1347   000006                     ?___wmul:
  1348                           	callstack 0
  1349   000006                     ?___awdiv:
  1350                           	callstack 0
  1351   000006                     ?___awmod:
  1352                           	callstack 0
  1353   000006                     ?___lwdiv:
  1354                           	callstack 0
  1355   000006                     clcd_write@control_bit:
  1356                           	callstack 0
  1357   000006                     i2c_write@data:
  1358                           	callstack 0
  1359   000006                     uart_putch@byte:
  1360                           	callstack 0
  1361   000006                     ___wmul@multiplier:
  1362                           	callstack 0
  1363   000006                     ___awdiv@dividend:
  1364                           	callstack 0
  1365   000006                     ___awmod@dividend:
  1366                           	callstack 0
  1367   000006                     ___lwdiv@dividend:
  1368                           	callstack 0
  1369   000006                     fputc@c:
  1370                           	callstack 0
  1371                           
  1372                           ; 2 bytes @ 0x5
  1373   000006                     	ds	1
  1374   000007                     clcd_write@byte:
  1375                           	callstack 0
  1376   000007                     write_ds1307@data:
  1377                           	callstack 0
  1378   000007                     read_ds1307@address:
  1379                           	callstack 0
  1380   000007                     write_external_eeprom@data:
  1381                           	callstack 0
  1382   000007                     read_external_eeprom@address:
  1383                           	callstack 0
  1384   000007                     uart_puts@s:
  1385                           	callstack 0
  1386                           
  1387                           ; 2 bytes @ 0x6
  1388   000007                     	ds	1
  1389   000008                     ??_init_clcd:
  1390   000008                     ??_read_adc:
  1391   000008                     read_switches@detection_type:
  1392                           	callstack 0
  1393   000008                     write_ds1307@address:
  1394                           	callstack 0
  1395   000008                     read_ds1307@data:
  1396                           	callstack 0
  1397   000008                     write_external_eeprom@address:
  1398                           	callstack 0
  1399   000008                     read_external_eeprom@data:
  1400                           	callstack 0
  1401   000008                     fputc@fp:
  1402                           	callstack 0
  1403   000008                     clcd_print@data:
  1404                           	callstack 0
  1405   000008                     ___wmul@multiplicand:
  1406                           	callstack 0
  1407   000008                     ___awdiv@divisor:
  1408                           	callstack 0
  1409   000008                     ___awmod@divisor:
  1410                           	callstack 0
  1411   000008                     ___lwdiv@divisor:
  1412                           	callstack 0
  1413                           
  1414                           ; 2 bytes @ 0x7
  1415   000008                     	ds	1
  1416   000009                     ??_fputc:
  1417   000009                     init_ds1307@dummy:
  1418                           	callstack 0
  1419   000009                     write_external_eeprom@wait:
  1420                           	callstack 0
  1421                           
  1422                           ; 2 bytes @ 0x8
  1423   000009                     	ds	1
  1424   00000A                     clcd_print@addr:
  1425                           	callstack 0
  1426   00000A                     ___awdiv@counter:
  1427                           	callstack 0
  1428   00000A                     ___awmod@counter:
  1429                           	callstack 0
  1430   00000A                     read_adc@reg_val:
  1431                           	callstack 0
  1432   00000A                     ___wmul@product:
  1433                           	callstack 0
  1434   00000A                     ___lwdiv@quotient:
  1435                           	callstack 0
  1436                           
  1437                           ; 2 bytes @ 0x9
  1438   00000A                     	ds	1
  1439   00000B                     ??_menu:
  1440   00000B                     addtoarray2@key:
  1441                           	callstack 0
  1442   00000B                     addtoarray@key:
  1443                           	callstack 0
  1444   00000B                     ___awdiv@sign:
  1445                           	callstack 0
  1446   00000B                     ___awmod@sign:
  1447                           	callstack 0
  1448                           
  1449                           ; 1 bytes @ 0xA
  1450   00000B                     	ds	1
  1451   00000C                     ??_view_log:
  1452   00000C                     ?_abs:
  1453                           	callstack 0
  1454   00000C                     ?_read_prec_or_width:
  1455                           	callstack 0
  1456   00000C                     change_pass@key:
  1457                           	callstack 0
  1458   00000C                     read_adc@channel:
  1459                           	callstack 0
  1460   00000C                     ___lwdiv@counter:
  1461                           	callstack 0
  1462   00000C                     read_prec_or_width@fmt:
  1463                           	callstack 0
  1464   00000C                     _menu$511:
  1465                           	callstack 0
  1466   00000C                     ___awdiv@quotient:
  1467                           	callstack 0
  1468   00000C                     abs@a:
  1469                           	callstack 0
  1470                           
  1471                           ; 2 bytes @ 0xB
  1472   00000C                     	ds	1
  1473   00000D                     read_prec_or_width@ap:
  1474                           	callstack 0
  1475   00000D                     view_log@logs:
  1476                           	callstack 0
  1477                           
  1478                           ; 17 bytes @ 0xC
  1479   00000D                     	ds	1
  1480   00000E                     ??_settime:
  1481   00000E                     ??_abs:
  1482   00000E                     ctoa@fp:
  1483                           	callstack 0
  1484   00000E                     stoa@fp:
  1485                           	callstack 0
  1486   00000E                     read_prec_or_width@c:
  1487                           	callstack 0
  1488   00000E                     _menu$512:
  1489                           	callstack 0
  1490   00000E                     fputs@s:
  1491                           	callstack 0
  1492                           
  1493                           ; 2 bytes @ 0xD
  1494   00000E                     	ds	1
  1495   00000F                     ctoa@c:
  1496                           	callstack 0
  1497   00000F                     stoa@s:
  1498                           	callstack 0
  1499   00000F                     read_prec_or_width@n:
  1500                           	callstack 0
  1501                           
  1502                           ; 2 bytes @ 0xE
  1503   00000F                     	ds	1
  1504   000010                     ??_ctoa:
  1505   000010                     menu@key:
  1506                           	callstack 0
  1507   000010                     fputs@fp:
  1508                           	callstack 0
  1509   000010                     settime@str:
  1510                           	callstack 0
  1511                           
  1512                           ; 17 bytes @ 0xF
  1513   000010                     	ds	1
  1514   000011                     ??_stoa:
  1515   000011                     fputs@c:
  1516                           	callstack 0
  1517   000011                     ctoa@l:
  1518                           	callstack 0
  1519                           
  1520                           ; 2 bytes @ 0x10
  1521   000011                     	ds	1
  1522   000012                     fputs@i:
  1523                           	callstack 0
  1524                           
  1525                           ; 2 bytes @ 0x11
  1526   000012                     	ds	1
  1527   000013                     ctoa@w:
  1528                           	callstack 0
  1529   000013                     stoa@p:
  1530                           	callstack 0
  1531                           
  1532                           ; 2 bytes @ 0x12
  1533   000013                     	ds	1
  1534   000014                     pad@fp:
  1535                           	callstack 0
  1536                           
  1537                           ; 1 bytes @ 0x13
  1538   000014                     	ds	1
  1539   000015                     pad@buf:
  1540                           	callstack 0
  1541   000015                     stoa@w:
  1542                           	callstack 0
  1543                           
  1544                           ; 2 bytes @ 0x14
  1545   000015                     	ds	2
  1546   000017                     pad@p:
  1547                           	callstack 0
  1548   000017                     stoa@cp:
  1549                           	callstack 0
  1550                           
  1551                           ; 2 bytes @ 0x16
  1552   000017                     	ds	2
  1553   000019                     ??_pad:
  1554   000019                     stoa@l:
  1555                           	callstack 0
  1556                           
  1557                           ; 2 bytes @ 0x18
  1558   000019                     	ds	1
  1559   00001A                     pad@i:
  1560                           	callstack 0
  1561                           
  1562                           ; 2 bytes @ 0x19
  1563   00001A                     	ds	2
  1564   00001C                     dtoa@fp:
  1565                           	callstack 0
  1566                           
  1567                           ; 1 bytes @ 0x1B
  1568   00001C                     	ds	1
  1569   00001D                     dtoa@d:
  1570                           	callstack 0
  1571                           
  1572                           ; 2 bytes @ 0x1C
  1573   00001D                     	ds	1
  1574   00001E                     _view_log$715:
  1575                           	callstack 0
  1576                           
  1577                           ; 2 bytes @ 0x1D
  1578   00001E                     	ds	1
  1579   00001F                     _dtoa$1492:
  1580                           	callstack 0
  1581                           
  1582                           ; 2 bytes @ 0x1E
  1583   00001F                     	ds	1
  1584   000020                     _view_log$716:
  1585                           	callstack 0
  1586                           
  1587                           ; 2 bytes @ 0x1F
  1588   000020                     	ds	1
  1589   000021                     dtoa@p:
  1590                           	callstack 0
  1591   000021                     _settime$627:
  1592                           	callstack 0
  1593                           
  1594                           ; 2 bytes @ 0x20
  1595   000021                     	ds	1
  1596   000022                     view_log@key:
  1597                           	callstack 0
  1598   000022                     dtoa@w:
  1599                           	callstack 0
  1600                           
  1601                           ; 2 bytes @ 0x21
  1602   000022                     	ds	1
  1603   000023                     _settime$628:
  1604                           	callstack 0
  1605                           
  1606                           ; 2 bytes @ 0x22
  1607   000023                     	ds	1
  1608   000024                     dtoa@s:
  1609                           	callstack 0
  1610                           
  1611                           ; 1 bytes @ 0x23
  1612   000024                     	ds	1
  1613   000025                     _settime$629:
  1614                           	callstack 0
  1615   000025                     dtoa@i:
  1616                           	callstack 0
  1617                           
  1618                           ; 2 bytes @ 0x24
  1619   000025                     	ds	2
  1620   000027                     vfpfcnvrt@fp:
  1621                           	callstack 0
  1622   000027                     _settime$630:
  1623                           	callstack 0
  1624                           
  1625                           ; 2 bytes @ 0x26
  1626   000027                     	ds	1
  1627   000028                     vfpfcnvrt@fmt:
  1628                           	callstack 0
  1629                           
  1630                           ; 1 bytes @ 0x27
  1631   000028                     	ds	1
  1632   000029                     settime@key:
  1633                           	callstack 0
  1634   000029                     vfpfcnvrt@ap:
  1635                           	callstack 0
  1636                           
  1637                           ; 1 bytes @ 0x28
  1638   000029                     	ds	1
  1639   00002A                     ??_vfpfcnvrt:
  1640                           
  1641                           ; 1 bytes @ 0x29
  1642   00002A                     	ds	2
  1643   00002C                     vfpfcnvrt@convarg:
  1644                           	callstack 0
  1645                           
  1646                           ; 4 bytes @ 0x2B
  1647   00002C                     	ds	4
  1648   000030                     vfpfcnvrt@c:
  1649                           	callstack 0
  1650                           
  1651                           ; 1 bytes @ 0x2F
  1652   000030                     	ds	1
  1653   000031                     vfpfcnvrt@done:
  1654                           	callstack 0
  1655                           
  1656                           ; 1 bytes @ 0x30
  1657   000031                     	ds	1
  1658   000032                     vfpfcnvrt@cp:
  1659                           	callstack 0
  1660                           
  1661                           ; 2 bytes @ 0x31
  1662   000032                     	ds	2
  1663   000034                     ?_vfprintf:
  1664                           	callstack 0
  1665   000034                     vfprintf@fp:
  1666                           	callstack 0
  1667                           
  1668                           ; 1 bytes @ 0x33
  1669   000034                     	ds	1
  1670   000035                     vfprintf@fmt:
  1671                           	callstack 0
  1672                           
  1673                           ; 2 bytes @ 0x34
  1674   000035                     	ds	2
  1675   000037                     vfprintf@ap:
  1676                           	callstack 0
  1677                           
  1678                           ; 1 bytes @ 0x36
  1679   000037                     	ds	1
  1680   000038                     vfprintf@cfmt:
  1681                           	callstack 0
  1682                           
  1683                           ; 2 bytes @ 0x37
  1684   000038                     	ds	2
  1685   00003A                     sprintf@ap:
  1686                           	callstack 0
  1687                           
  1688                           ; 1 bytes @ 0x39
  1689   00003A                     	ds	1
  1690   00003B                     sprintf@f:
  1691                           	callstack 0
  1692                           
  1693                           ; 12 bytes @ 0x3A
  1694   00003B                     	ds	12
  1695   000047                     ??_download_log:
  1696   000047                     ??_write_10_bytes:
  1697   000047                     password@key:
  1698                           	callstack 0
  1699                           
  1700                           ; 1 bytes @ 0x46
  1701   000047                     	ds	2
  1702   000049                     write_10_bytes@tm:
  1703                           	callstack 0
  1704                           
  1705                           ; 3 bytes @ 0x48
  1706   000049                     	ds	3
  1707   00004C                     
  1708                           ; 1 bytes @ 0x4B
  1709   00004C                     	ds	5
  1710   000051                     
  1711                           ; 1 bytes @ 0x50
  1712 ;;
  1713 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1714 ;;
  1715 ;; *************** function _main *****************
  1716 ;; Defined at:
  1717 ;;		line 43 in file "main.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;		None
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  adc_reg_val     2   63[BANK0 ] unsigned short 
  1722 ;;  key             1   65[BANK0 ] unsigned char 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1732 ;;      Params:         0       0       0       0       0       0       0
  1733 ;;      Locals:         0       7       0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0
  1735 ;;      Totals:         0       7       0       0       0       0       0
  1736 ;;Total ram usage:        7 bytes
  1737 ;; Hardware stack levels required when called: 13
  1738 ;; This function calls:
  1739 ;;		___lwdiv
  1740 ;;		_change_pass
  1741 ;;		_clcd_print
  1742 ;;		_clear_log
  1743 ;;		_dashboard
  1744 ;;		_download_log
  1745 ;;		_get_time
  1746 ;;		_inti_config
  1747 ;;		_menu
  1748 ;;		_password
  1749 ;;		_read_adc
  1750 ;;		_read_external_eeprom
  1751 ;;		_read_switches
  1752 ;;		_settime
  1753 ;;		_store_event
  1754 ;;		_view_log
  1755 ;; This function is called by:
  1756 ;;		Startup code after reset
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text0
  1761   0006E0                     __ptext0:
  1762                           	callstack 0
  1763   0006E0                     _main:
  1764                           	callstack 18
  1765   0006E0                     
  1766                           ;main.c: 44:     inti_config();
  1767   0006E0  EC7C  F014         	call	_inti_config	;wreg free
  1768   0006E4                     
  1769                           ;main.c: 46:     char key;;main.c: 47:     main_f = 0;
  1770   0006E4  0E00               	movlw	0
  1771   0006E6  0100               	movlb	0	; () banked
  1772   0006E8  6F8B               	movwf	_main_f& (0+255),b
  1773   0006EA                     
  1774                           ; BSR set to: 0
  1775                           ;main.c: 48:     menu_f = 0;
  1776   0006EA  0E00               	movlw	0
  1777   0006EC  6F8A               	movwf	_menu_f& (0+255),b
  1778   0006EE                     
  1779                           ; BSR set to: 0
  1780                           ;main.c: 49:     e = -1;
  1781   0006EE  698D               	setf	_e& (0+255),b
  1782                           
  1783                           ;main.c: 52:     unsigned short adc_reg_val;;main.c: 53:     adc_reg_val = read_adc(0x04
      +                          );
  1784   0006F0  0E04               	movlw	4
  1785   0006F2  EC2A  F013         	call	_read_adc
  1786   0006F6  C006  F0EE         	movff	?_read_adc,main@adc_reg_val
  1787   0006FA  C007  F0EF         	movff	?_read_adc+1,main@adc_reg_val+1
  1788                           
  1789                           ;main.c: 54:     speed = adc_reg_val / 10;
  1790   0006FE  C0EE  F006         	movff	main@adc_reg_val,___lwdiv@dividend
  1791   000702  C0EF  F007         	movff	main@adc_reg_val+1,___lwdiv@dividend+1
  1792   000706  0E00               	movlw	0
  1793   000708  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  1794   00070A  0E0A               	movlw	10
  1795   00070C  6E08               	movwf	___lwdiv@divisor^0,c
  1796   00070E  EC72  F011         	call	___lwdiv	;wreg free
  1797   000712  5006               	movf	?___lwdiv^0,w,c
  1798   000714  0100               	movlb	0	; () banked
  1799   000716  6F90               	movwf	_speed& (0+255),b
  1800   000718                     
  1801                           ; BSR set to: 0
  1802                           ;main.c: 55:     speed = speed > 100 ? 99 : speed;
  1803   000718  0E65               	movlw	101
  1804   00071A  6190               	cpfslt	_speed& (0+255),b
  1805   00071C  EF92  F003         	goto	u5071
  1806   000720  EF94  F003         	goto	u5070
  1807   000724                     u5071:
  1808   000724  EF99  F003         	goto	l6305
  1809   000728                     u5070:
  1810   000728                     
  1811                           ; BSR set to: 0
  1812   000728  C090  F0EA         	movff	_speed,_main$368
  1813   00072C  6BEB               	clrf	(_main$368+1)& (0+255),b
  1814   00072E  EF9D  F003         	goto	l6307
  1815   000732                     l6305:
  1816                           
  1817                           ; BSR set to: 0
  1818   000732  0E00               	movlw	0
  1819   000734  6FEB               	movwf	(_main$368+1)& (0+255),b
  1820   000736  0E63               	movlw	99
  1821   000738  6FEA               	movwf	_main$368& (0+255),b
  1822   00073A                     l6307:
  1823                           
  1824                           ; BSR set to: 0
  1825   00073A  C0EA  F090         	movff	_main$368,_speed
  1826   00073E                     
  1827                           ; BSR set to: 0
  1828                           ;main.c: 57:     get_time();
  1829   00073E  EC2F  F011         	call	_get_time	;wreg free
  1830   000742                     
  1831                           ;main.c: 58:     store_event(time,index,speed);
  1832   000742  0EA6               	movlw	low _time
  1833   000744  0100               	movlb	0	; () banked
  1834   000746  6FCD               	movwf	store_event@time& (0+255),b
  1835   000748  C094  F0CE         	movff	_index,store_event@index
  1836   00074C  C090  F0CF         	movff	_speed,store_event@speed
  1837   000750  ECF8  F00D         	call	_store_event	;wreg free
  1838   000754                     
  1839                           ;main.c: 68:     pw[0] = read_external_eeprom(100);
  1840   000754  0E64               	movlw	100
  1841   000756  EC3F  F014         	call	_read_external_eeprom
  1842   00075A  0100               	movlb	0	; () banked
  1843   00075C  6F68               	movwf	_pw& (0+255),b
  1844   00075E                     
  1845                           ; BSR set to: 0
  1846                           ;main.c: 70:     pw[1] = read_external_eeprom(101);
  1847   00075E  0E65               	movlw	101
  1848   000760  EC3F  F014         	call	_read_external_eeprom
  1849   000764  0100               	movlb	0	; () banked
  1850   000766  6F69               	movwf	(_pw+1)& (0+255),b
  1851   000768                     
  1852                           ; BSR set to: 0
  1853                           ;main.c: 72:     pw[2] = read_external_eeprom(102);
  1854   000768  0E66               	movlw	102
  1855   00076A  EC3F  F014         	call	_read_external_eeprom
  1856   00076E  0100               	movlb	0	; () banked
  1857   000770  6F6A               	movwf	(_pw+2)& (0+255),b
  1858   000772                     
  1859                           ; BSR set to: 0
  1860                           ;main.c: 74:     pw[3] = read_external_eeprom(103);
  1861   000772  0E67               	movlw	103
  1862   000774  EC3F  F014         	call	_read_external_eeprom
  1863   000778  0100               	movlb	0	; () banked
  1864   00077A  6F6B               	movwf	(_pw+3)& (0+255),b
  1865   00077C                     l6321:
  1866                           
  1867                           ;main.c: 77:     {;main.c: 84:         key = read_switches(0);
  1868   00077C  0E00               	movlw	0
  1869   00077E  EC63  F00E         	call	_read_switches
  1870   000782  0100               	movlb	0	; () banked
  1871   000784  6FF0               	movwf	main@key& (0+255),b
  1872   000786                     
  1873                           ; BSR set to: 0
  1874                           ;main.c: 87:         adc_reg_val = read_adc(0x04);
  1875   000786  0E04               	movlw	4
  1876   000788  EC2A  F013         	call	_read_adc
  1877   00078C  C006  F0EE         	movff	?_read_adc,main@adc_reg_val
  1878   000790  C007  F0EF         	movff	?_read_adc+1,main@adc_reg_val+1
  1879   000794                     
  1880                           ;main.c: 88:         speed = adc_reg_val / 10;
  1881   000794  C0EE  F006         	movff	main@adc_reg_val,___lwdiv@dividend
  1882   000798  C0EF  F007         	movff	main@adc_reg_val+1,___lwdiv@dividend+1
  1883   00079C  0E00               	movlw	0
  1884   00079E  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  1885   0007A0  0E0A               	movlw	10
  1886   0007A2  6E08               	movwf	___lwdiv@divisor^0,c
  1887   0007A4  EC72  F011         	call	___lwdiv	;wreg free
  1888   0007A8  5006               	movf	?___lwdiv^0,w,c
  1889   0007AA  0100               	movlb	0	; () banked
  1890   0007AC  6F90               	movwf	_speed& (0+255),b
  1891   0007AE                     
  1892                           ; BSR set to: 0
  1893                           ;main.c: 89:         speed = speed > 100 ? 99 : speed;
  1894   0007AE  0E65               	movlw	101
  1895   0007B0  6190               	cpfslt	_speed& (0+255),b
  1896   0007B2  EFDD  F003         	goto	u5081
  1897   0007B6  EFDF  F003         	goto	u5080
  1898   0007BA                     u5081:
  1899   0007BA  EFE4  F003         	goto	l6331
  1900   0007BE                     u5080:
  1901   0007BE                     
  1902                           ; BSR set to: 0
  1903   0007BE  C090  F0EC         	movff	_speed,_main$369
  1904   0007C2  6BED               	clrf	(_main$369+1)& (0+255),b
  1905   0007C4  EFE8  F003         	goto	l6333
  1906   0007C8                     l6331:
  1907                           
  1908                           ; BSR set to: 0
  1909   0007C8  0E00               	movlw	0
  1910   0007CA  6FED               	movwf	(_main$369+1)& (0+255),b
  1911   0007CC  0E63               	movlw	99
  1912   0007CE  6FEC               	movwf	_main$369& (0+255),b
  1913   0007D0                     l6333:
  1914                           
  1915                           ; BSR set to: 0
  1916   0007D0  C0EC  F090         	movff	_main$369,_speed
  1917                           
  1918                           ;main.c: 91:         if(main_f == 0)
  1919   0007D4  518B               	movf	_main_f& (0+255),w,b
  1920   0007D6  A4D8               	btfss	status,2,c
  1921   0007D8  EFF0  F003         	goto	u5091
  1922   0007DC  EFF2  F003         	goto	u5090
  1923   0007E0                     u5091:
  1924   0007E0  EF22  F004         	goto	l6349
  1925   0007E4                     u5090:
  1926   0007E4                     
  1927                           ; BSR set to: 0
  1928                           ;main.c: 92:         {;main.c: 93:             dashboard(key);
  1929   0007E4  51F0               	movf	main@key& (0+255),w,b
  1930   0007E6  EC27  F00B         	call	_dashboard
  1931   0007EA                     
  1932                           ;main.c: 94:             if(key == 11)
  1933   0007EA  0E0B               	movlw	11
  1934   0007EC  0100               	movlb	0	; () banked
  1935   0007EE  19F0               	xorwf	main@key& (0+255),w,b
  1936   0007F0  A4D8               	btfss	status,2,c
  1937   0007F2  EFFD  F003         	goto	u5101
  1938   0007F6  EFFF  F003         	goto	u5100
  1939   0007FA                     u5101:
  1940   0007FA  EFBE  F003         	goto	l6321
  1941   0007FE                     u5100:
  1942   0007FE                     
  1943                           ; BSR set to: 0
  1944                           ;main.c: 95:             {;main.c: 96:                 main_f = 1;
  1945   0007FE  0E01               	movlw	1
  1946   000800  6F8B               	movwf	_main_f& (0+255),b
  1947   000802                     
  1948                           ; BSR set to: 0
  1949                           ;main.c: 97:                 clcd_print("                ", (0x80 + (0)));
  1950   000802  0E07               	movlw	low (STR_15+1)
  1951   000804  6E08               	movwf	clcd_print@data^0,c
  1952   000806  0E2E               	movlw	high (STR_15+1)
  1953   000808  6E09               	movwf	(clcd_print@data+1)^0,c
  1954   00080A  0E80               	movlw	128
  1955   00080C  6E0A               	movwf	clcd_print@addr^0,c
  1956   00080E  EC1C  F012         	call	_clcd_print	;wreg free
  1957   000812                     
  1958                           ;main.c: 98:                 clcd_print("                ", (0xC0 + (0)));
  1959   000812  0E07               	movlw	low (STR_15+1)
  1960   000814  6E08               	movwf	clcd_print@data^0,c
  1961   000816  0E2E               	movlw	high (STR_15+1)
  1962   000818  6E09               	movwf	(clcd_print@data+1)^0,c
  1963   00081A  0EC0               	movlw	192
  1964   00081C  6E0A               	movwf	clcd_print@addr^0,c
  1965   00081E  EC1C  F012         	call	_clcd_print	;wreg free
  1966   000822                     
  1967                           ;main.c: 99:                 TMR0ON = 0;
  1968   000822  9ED5               	bcf	4053,7,c	;volatile
  1969                           
  1970                           ;main.c: 100:                 wait = 60000;
  1971   000824  0E60               	movlw	96
  1972   000826  0100               	movlb	0	; () banked
  1973   000828  6F74               	movwf	_wait& (0+255),b
  1974   00082A  0EEA               	movlw	234
  1975   00082C  6F75               	movwf	(_wait+1)& (0+255),b
  1976   00082E  0E00               	movlw	0
  1977   000830  6F76               	movwf	(_wait+2)& (0+255),b
  1978   000832  0E00               	movlw	0
  1979   000834  6F77               	movwf	(_wait+3)& (0+255),b
  1980                           
  1981                           ;main.c: 101:                 TMR0 = 6;
  1982   000836  0E00               	movlw	0
  1983   000838  6ED7               	movwf	215,c	;volatile
  1984   00083A  0E06               	movlw	6
  1985   00083C  6ED6               	movwf	214,c	;volatile
  1986   00083E                     
  1987                           ; BSR set to: 0
  1988                           ;main.c: 102:                 TMR0ON = 1;
  1989   00083E  8ED5               	bsf	4053,7,c	;volatile
  1990   000840  EFBE  F003         	goto	l6321
  1991   000844                     l6349:
  1992                           
  1993                           ; BSR set to: 0
  1994   000844  058B               	decf	_main_f& (0+255),w,b
  1995   000846  A4D8               	btfss	status,2,c
  1996   000848  EF28  F004         	goto	u5111
  1997   00084C  EF2A  F004         	goto	u5110
  1998   000850                     u5111:
  1999   000850  EF5F  F004         	goto	l6363
  2000   000854                     u5110:
  2001   000854                     
  2002                           ; BSR set to: 0
  2003                           ;main.c: 107:         {;main.c: 108:             pw[0] = read_external_eeprom(100);
  2004   000854  0E64               	movlw	100
  2005   000856  EC3F  F014         	call	_read_external_eeprom
  2006   00085A  0100               	movlb	0	; () banked
  2007   00085C  6F68               	movwf	_pw& (0+255),b
  2008                           
  2009                           ;main.c: 110:             pw[1] = read_external_eeprom(101);
  2010   00085E  0E65               	movlw	101
  2011   000860  EC3F  F014         	call	_read_external_eeprom
  2012   000864  0100               	movlb	0	; () banked
  2013   000866  6F69               	movwf	(_pw+1)& (0+255),b
  2014                           
  2015                           ;main.c: 112:             pw[2] = read_external_eeprom(102);
  2016   000868  0E66               	movlw	102
  2017   00086A  EC3F  F014         	call	_read_external_eeprom
  2018   00086E  0100               	movlb	0	; () banked
  2019   000870  6F6A               	movwf	(_pw+2)& (0+255),b
  2020                           
  2021                           ;main.c: 114:             pw[3] = read_external_eeprom(103);
  2022   000872  0E67               	movlw	103
  2023   000874  EC3F  F014         	call	_read_external_eeprom
  2024   000878  0100               	movlb	0	; () banked
  2025   00087A  6F6B               	movwf	(_pw+3)& (0+255),b
  2026   00087C                     
  2027                           ; BSR set to: 0
  2028                           ;main.c: 115:             password(key);
  2029   00087C  51F0               	movf	main@key& (0+255),w,b
  2030   00087E  EC2D  F007         	call	_password
  2031   000882                     
  2032                           ;main.c: 116:             if(wait == 0 && !block_time )
  2033   000882  0100               	movlb	0	; () banked
  2034   000884  5174               	movf	_wait& (0+255),w,b
  2035   000886  1175               	iorwf	(_wait+1)& (0+255),w,b
  2036   000888  1176               	iorwf	(_wait+2)& (0+255),w,b
  2037   00088A  1177               	iorwf	(_wait+3)& (0+255),w,b
  2038   00088C  A4D8               	btfss	status,2,c
  2039   00088E  EF4B  F004         	goto	u5121
  2040   000892  EF4D  F004         	goto	u5120
  2041   000896                     u5121:
  2042   000896  EFBE  F003         	goto	l6321
  2043   00089A                     u5120:
  2044   00089A                     
  2045                           ; BSR set to: 0
  2046   00089A  5183               	movf	_block_time& (0+255),w,b
  2047   00089C  1184               	iorwf	(_block_time+1)& (0+255),w,b
  2048   00089E  A4D8               	btfss	status,2,c
  2049   0008A0  EF54  F004         	goto	u5131
  2050   0008A4  EF56  F004         	goto	u5130
  2051   0008A8                     u5131:
  2052   0008A8  EFBE  F003         	goto	l6321
  2053   0008AC                     u5130:
  2054   0008AC                     
  2055                           ; BSR set to: 0
  2056                           ;main.c: 117:             {;main.c: 118:                 main_f = 0;
  2057   0008AC  0E00               	movlw	0
  2058   0008AE  6F8B               	movwf	_main_f& (0+255),b
  2059   0008B0                     
  2060                           ; BSR set to: 0
  2061                           ;main.c: 119:                 password(33);
  2062   0008B0  0E21               	movlw	33
  2063   0008B2  EC2D  F007         	call	_password
  2064   0008B6  EFBE  F003         	goto	l6321
  2065   0008BA                     l417:
  2066                           
  2067                           ; BSR set to: 0
  2068                           ;main.c: 121:         }
  2069   0008BA  EFBE  F003         	goto	l6321
  2070   0008BE                     l6363:
  2071                           
  2072                           ; BSR set to: 0
  2073   0008BE  0E02               	movlw	2
  2074   0008C0  198B               	xorwf	_main_f& (0+255),w,b
  2075   0008C2  A4D8               	btfss	status,2,c
  2076   0008C4  EF66  F004         	goto	u5141
  2077   0008C8  EF68  F004         	goto	u5140
  2078   0008CC                     u5141:
  2079   0008CC  EF6D  F004         	goto	l6367
  2080   0008D0                     u5140:
  2081   0008D0                     
  2082                           ; BSR set to: 0
  2083                           ;main.c: 123:         {;main.c: 124:             menu(key);
  2084   0008D0  51F0               	movf	main@key& (0+255),w,b
  2085   0008D2  EC57  F008         	call	_menu
  2086                           
  2087                           ;main.c: 125:         }
  2088   0008D6  EFBE  F003         	goto	l6321
  2089   0008DA                     l6367:
  2090                           
  2091                           ; BSR set to: 0
  2092   0008DA  0E03               	movlw	3
  2093   0008DC  198B               	xorwf	_main_f& (0+255),w,b
  2094   0008DE  A4D8               	btfss	status,2,c
  2095   0008E0  EF74  F004         	goto	u5151
  2096   0008E4  EF76  F004         	goto	u5150
  2097   0008E8                     u5151:
  2098   0008E8  EFBE  F003         	goto	l6321
  2099   0008EC                     u5150:
  2100   0008EC                     
  2101                           ; BSR set to: 0
  2102                           ;main.c: 127:         {;main.c: 128:             if(menu_f == 0)
  2103   0008EC  518A               	movf	_menu_f& (0+255),w,b
  2104   0008EE  A4D8               	btfss	status,2,c
  2105   0008F0  EF7C  F004         	goto	u5161
  2106   0008F4  EF7E  F004         	goto	u5160
  2107   0008F8                     u5161:
  2108   0008F8  EF83  F004         	goto	l6373
  2109   0008FC                     u5160:
  2110   0008FC                     
  2111                           ; BSR set to: 0
  2112                           ;main.c: 129:             {;main.c: 130:                 view_log(key);
  2113   0008FC  51F0               	movf	main@key& (0+255),w,b
  2114   0008FE  EC7E  F009         	call	_view_log
  2115                           
  2116                           ;main.c: 131:             }
  2117   000902  EFBE  F003         	goto	l6321
  2118   000906                     l6373:
  2119                           
  2120                           ; BSR set to: 0
  2121   000906  0E02               	movlw	2
  2122   000908  198A               	xorwf	_menu_f& (0+255),w,b
  2123   00090A  A4D8               	btfss	status,2,c
  2124   00090C  EF8A  F004         	goto	u5171
  2125   000910  EF8C  F004         	goto	u5170
  2126   000914                     u5171:
  2127   000914  EF90  F004         	goto	l6377
  2128   000918                     u5170:
  2129   000918                     
  2130                           ; BSR set to: 0
  2131                           ;main.c: 133:             {;main.c: 134:                 download_log();
  2132   000918  ECFE  F005         	call	_download_log	;wreg free
  2133                           
  2134                           ;main.c: 135:             }
  2135   00091C  EFBE  F003         	goto	l6321
  2136   000920                     l6377:
  2137                           
  2138                           ; BSR set to: 0
  2139   000920  058A               	decf	_menu_f& (0+255),w,b
  2140   000922  A4D8               	btfss	status,2,c
  2141   000924  EF96  F004         	goto	u5181
  2142   000928  EF98  F004         	goto	u5180
  2143   00092C                     u5181:
  2144   00092C  EF9D  F004         	goto	l6381
  2145   000930                     u5180:
  2146   000930                     
  2147                           ; BSR set to: 0
  2148                           ;main.c: 137:             {;main.c: 138:                 clear_log(key);
  2149   000930  51F0               	movf	main@key& (0+255),w,b
  2150   000932  ECE5  F011         	call	_clear_log
  2151                           
  2152                           ;main.c: 139:             }
  2153   000936  EFBE  F003         	goto	l6321
  2154   00093A                     l6381:
  2155                           
  2156                           ; BSR set to: 0
  2157   00093A  0E03               	movlw	3
  2158   00093C  198A               	xorwf	_menu_f& (0+255),w,b
  2159   00093E  A4D8               	btfss	status,2,c
  2160   000940  EFA4  F004         	goto	u5191
  2161   000944  EFA6  F004         	goto	u5190
  2162   000948                     u5191:
  2163   000948  EFAB  F004         	goto	l6385
  2164   00094C                     u5190:
  2165   00094C                     
  2166                           ; BSR set to: 0
  2167                           ;main.c: 141:             {;main.c: 142:                 settime(key);
  2168   00094C  51F0               	movf	main@key& (0+255),w,b
  2169   00094E  EC09  F000         	call	_settime
  2170                           
  2171                           ;main.c: 143:             }
  2172   000952  EFBE  F003         	goto	l6321
  2173   000956                     l6385:
  2174                           
  2175                           ; BSR set to: 0
  2176   000956  0E04               	movlw	4
  2177   000958  198A               	xorwf	_menu_f& (0+255),w,b
  2178   00095A  A4D8               	btfss	status,2,c
  2179   00095C  EFB2  F004         	goto	u5201
  2180   000960  EFB4  F004         	goto	u5200
  2181   000964                     u5201:
  2182   000964  EF5D  F004         	goto	l417
  2183   000968                     u5200:
  2184   000968                     
  2185                           ; BSR set to: 0
  2186                           ;main.c: 145:             {;main.c: 146:                 change_pass(key);
  2187   000968  51F0               	movf	main@key& (0+255),w,b
  2188   00096A  EC05  F002         	call	_change_pass
  2189   00096E  EFBE  F003         	goto	l6321
  2190   000972  EF07  F000         	goto	start
  2191   000976                     __end_of_main:
  2192                           	callstack 0
  2193                           
  2194 ;; *************** function _view_log *****************
  2195 ;; Defined at:
  2196 ;;		line 17 in file "view_log.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  key             1    wreg     unsigned char 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  key             1   33[COMRAM] unsigned char 
  2201 ;;  logs           17   12[COMRAM] unsigned char [17]
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2211 ;;      Params:         0       0       0       0       0       0       0
  2212 ;;      Locals:        22       0       0       0       0       0       0
  2213 ;;      Temps:          1       0       0       0       0       0       0
  2214 ;;      Totals:        23       0       0       0       0       0       0
  2215 ;;Total ram usage:       23 bytes
  2216 ;; Hardware stack levels used: 1
  2217 ;; Hardware stack levels required when called: 6
  2218 ;; This function calls:
  2219 ;;		___awmod
  2220 ;;		_clcd_print
  2221 ;;		_read_external_eeprom
  2222 ;; This function is called by:
  2223 ;;		_main
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text1
  2228   0012FC                     __ptext1:
  2229                           	callstack 0
  2230   0012FC                     _view_log:
  2231                           	callstack 24
  2232                           
  2233                           ;incstack = 0
  2234                           ;view_log@key stored from wreg
  2235   0012FC  6E22               	movwf	view_log@key^0,c
  2236   0012FE                     
  2237                           ;view_log.c: 17: void view_log(char key);view_log.c: 18: {;view_log.c: 20:     if(key ==
      +                           22)
  2238   0012FE  0E16               	movlw	22
  2239   001300  1822               	xorwf	view_log@key^0,w,c
  2240   001302  A4D8               	btfss	status,2,c
  2241   001304  EF86  F009         	goto	u4861
  2242   001308  EF88  F009         	goto	u4860
  2243   00130C                     u4861:
  2244   00130C  EF8F  F009         	goto	l6081
  2245   001310                     u4860:
  2246   001310                     
  2247                           ;view_log.c: 21:     {;view_log.c: 22:         main_f = 2;
  2248   001310  0E02               	movlw	2
  2249   001312  0100               	movlb	0	; () banked
  2250   001314  6F8B               	movwf	_main_f& (0+255),b
  2251                           
  2252                           ;view_log.c: 23:         back_f = 1;
  2253   001316  0E01               	movlw	1
  2254   001318  6F8C               	movwf	_back_f& (0+255),b
  2255   00131A  EF77  F00A         	goto	l870
  2256   00131E                     l6081:
  2257                           
  2258                           ;view_log.c: 28:     if(e >= 0 && e < 10)
  2259   00131E  0E0A               	movlw	10
  2260   001320  0100               	movlb	0	; () banked
  2261   001322  618D               	cpfslt	_e& (0+255),b
  2262   001324  EF96  F009         	goto	u4871
  2263   001328  EF98  F009         	goto	u4870
  2264   00132C                     u4871:
  2265   00132C  EF67  F00A         	goto	l6145
  2266   001330                     u4870:
  2267   001330                     
  2268                           ; BSR set to: 0
  2269                           ;view_log.c: 29:     {;view_log.c: 32:         char logs[17];;view_log.c: 35:         if
      +                          (key == 11)
  2270   001330  0E0B               	movlw	11
  2271   001332  1822               	xorwf	view_log@key^0,w,c
  2272   001334  A4D8               	btfss	status,2,c
  2273   001336  EF9F  F009         	goto	u4881
  2274   00133A  EFA1  F009         	goto	u4880
  2275   00133E                     u4881:
  2276   00133E  EFC2  F009         	goto	l6095
  2277   001342                     u4880:
  2278   001342                     
  2279                           ; BSR set to: 0
  2280                           ;view_log.c: 36:         {;view_log.c: 37:             if(p != s)
  2281   001342  5058               	movf	_s^0,w,c
  2282   001344  198F               	xorwf	_p& (0+255),w,b
  2283   001346  B4D8               	btfsc	status,2,c
  2284   001348  EFA8  F009         	goto	u4891
  2285   00134C  EFAA  F009         	goto	u4890
  2286   001350                     u4891:
  2287   001350  EFEB  F009         	goto	l6107
  2288   001354                     u4890:
  2289   001354                     
  2290                           ; BSR set to: 0
  2291                           ;view_log.c: 38:             {;view_log.c: 39:                 p = p == 0? 9: p - 1;
  2292   001354  518F               	movf	_p& (0+255),w,b
  2293   001356  B4D8               	btfsc	status,2,c
  2294   001358  EFB0  F009         	goto	u4901
  2295   00135C  EFB2  F009         	goto	u4900
  2296   001360                     u4901:
  2297   001360  EFBA  F009         	goto	l6091
  2298   001364                     u4900:
  2299   001364                     
  2300                           ; BSR set to: 0
  2301   001364  0EFF               	movlw	255
  2302   001366  258F               	addwf	_p& (0+255),w,b
  2303   001368  6E1E               	movwf	_view_log$715^0,c
  2304   00136A  6A1F               	clrf	(_view_log$715+1)^0,c
  2305   00136C  0EFF               	movlw	255
  2306   00136E  221F               	addwfc	(_view_log$715+1)^0,f,c
  2307   001370  EFBE  F009         	goto	l6093
  2308   001374                     l6091:
  2309                           
  2310                           ; BSR set to: 0
  2311   001374  0E00               	movlw	0
  2312   001376  6E1F               	movwf	(_view_log$715+1)^0,c
  2313   001378  0E09               	movlw	9
  2314   00137A  6E1E               	movwf	_view_log$715^0,c
  2315   00137C                     l6093:
  2316                           
  2317                           ; BSR set to: 0
  2318   00137C  C01E  F08F         	movff	_view_log$715,_p
  2319   001380  EFEB  F009         	goto	l6107
  2320   001384                     l6095:
  2321                           
  2322                           ; BSR set to: 0
  2323   001384  0E0C               	movlw	12
  2324   001386  1822               	xorwf	view_log@key^0,w,c
  2325   001388  A4D8               	btfss	status,2,c
  2326   00138A  EFC9  F009         	goto	u4911
  2327   00138E  EFCB  F009         	goto	u4910
  2328   001392                     u4911:
  2329   001392  EFEB  F009         	goto	l6107
  2330   001396                     u4910:
  2331   001396                     
  2332                           ; BSR set to: 0
  2333                           ;view_log.c: 43:         {;view_log.c: 44:             if(p != e)
  2334   001396  518D               	movf	_e& (0+255),w,b
  2335   001398  198F               	xorwf	_p& (0+255),w,b
  2336   00139A  B4D8               	btfsc	status,2,c
  2337   00139C  EFD2  F009         	goto	u4921
  2338   0013A0  EFD4  F009         	goto	u4920
  2339   0013A4                     u4921:
  2340   0013A4  EFEB  F009         	goto	l6107
  2341   0013A8                     u4920:
  2342   0013A8                     
  2343                           ; BSR set to: 0
  2344                           ;view_log.c: 45:             {;view_log.c: 46:                 p = p == 9? 0: p + 1;
  2345   0013A8  0E09               	movlw	9
  2346   0013AA  198F               	xorwf	_p& (0+255),w,b
  2347   0013AC  B4D8               	btfsc	status,2,c
  2348   0013AE  EFDB  F009         	goto	u4931
  2349   0013B2  EFDD  F009         	goto	u4930
  2350   0013B6                     u4931:
  2351   0013B6  EFE5  F009         	goto	l6103
  2352   0013BA                     u4930:
  2353   0013BA                     
  2354                           ; BSR set to: 0
  2355   0013BA  0E01               	movlw	1
  2356   0013BC  258F               	addwf	_p& (0+255),w,b
  2357   0013BE  6E20               	movwf	_view_log$716^0,c
  2358   0013C0  6A21               	clrf	(_view_log$716+1)^0,c
  2359   0013C2  0E00               	movlw	0
  2360   0013C4  2221               	addwfc	(_view_log$716+1)^0,f,c
  2361   0013C6  EFE9  F009         	goto	l6105
  2362   0013CA                     l6103:
  2363                           
  2364                           ; BSR set to: 0
  2365   0013CA  0E00               	movlw	0
  2366   0013CC  6E21               	movwf	(_view_log$716+1)^0,c
  2367   0013CE  0E00               	movlw	0
  2368   0013D0  6E20               	movwf	_view_log$716^0,c
  2369   0013D2                     l6105:
  2370                           
  2371                           ; BSR set to: 0
  2372   0013D2  C020  F08F         	movff	_view_log$716,_p
  2373   0013D6                     l6107:
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;view_log.c: 51:         logs[0] = (char) (p - s + 10)%10 + '0';
  2377   0013D6  5058               	movf	_s^0,w,c
  2378   0013D8  5D8F               	subwf	_p& (0+255),w,b
  2379   0013DA  6E0C               	movwf	??_view_log^0,c
  2380   0013DC  0E0A               	movlw	10
  2381   0013DE  260C               	addwf	??_view_log^0,f,c
  2382   0013E0  500C               	movf	??_view_log^0,w,c
  2383   0013E2  6E06               	movwf	___awmod@dividend^0,c
  2384   0013E4  6A07               	clrf	(___awmod@dividend+1)^0,c
  2385   0013E6  0E00               	movlw	0
  2386   0013E8  6E09               	movwf	(___awmod@divisor+1)^0,c
  2387   0013EA  0E0A               	movlw	10
  2388   0013EC  6E08               	movwf	___awmod@divisor^0,c
  2389   0013EE  EC8C  F00F         	call	___awmod	;wreg free
  2390   0013F2  5006               	movf	?___awmod^0,w,c
  2391   0013F4  0F30               	addlw	48
  2392   0013F6  6E0D               	movwf	view_log@logs^0,c
  2393   0013F8                     
  2394                           ;view_log.c: 53:         logs[2] = (char) read_external_eeprom(p*10 );
  2395   0013F8  0100               	movlb	0	; () banked
  2396   0013FA  518F               	movf	_p& (0+255),w,b
  2397   0013FC  0D0A               	mullw	10
  2398   0013FE  50F3               	movf	243,w,c
  2399   001400  EC3F  F014         	call	_read_external_eeprom
  2400   001404  6E0F               	movwf	(view_log@logs+2)^0,c
  2401   001406                     
  2402                           ;view_log.c: 54:         logs[3] = (char) read_external_eeprom(p*10 + 1);
  2403   001406  0100               	movlb	0	; () banked
  2404   001408  518F               	movf	_p& (0+255),w,b
  2405   00140A  0D0A               	mullw	10
  2406   00140C  28F3               	incf	243,w,c
  2407   00140E  EC3F  F014         	call	_read_external_eeprom
  2408   001412  6E10               	movwf	(view_log@logs+3)^0,c
  2409   001414                     
  2410                           ;view_log.c: 55:         logs[5] = read_external_eeprom(p*10 + 2);
  2411   001414  0100               	movlb	0	; () banked
  2412   001416  518F               	movf	_p& (0+255),w,b
  2413   001418  0D0A               	mullw	10
  2414   00141A  50F3               	movf	243,w,c
  2415   00141C  0F02               	addlw	2
  2416   00141E  EC3F  F014         	call	_read_external_eeprom
  2417   001422  6E12               	movwf	(view_log@logs+5)^0,c
  2418   001424                     
  2419                           ;view_log.c: 56:         logs[6] = read_external_eeprom(p*10 + 3);
  2420   001424  0100               	movlb	0	; () banked
  2421   001426  518F               	movf	_p& (0+255),w,b
  2422   001428  0D0A               	mullw	10
  2423   00142A  50F3               	movf	243,w,c
  2424   00142C  0F03               	addlw	3
  2425   00142E  EC3F  F014         	call	_read_external_eeprom
  2426   001432  6E13               	movwf	(view_log@logs+6)^0,c
  2427   001434                     
  2428                           ;view_log.c: 57:         logs[8] = read_external_eeprom(p*10 + 4);
  2429   001434  0100               	movlb	0	; () banked
  2430   001436  518F               	movf	_p& (0+255),w,b
  2431   001438  0D0A               	mullw	10
  2432   00143A  50F3               	movf	243,w,c
  2433   00143C  0F04               	addlw	4
  2434   00143E  EC3F  F014         	call	_read_external_eeprom
  2435   001442  6E15               	movwf	(view_log@logs+8)^0,c
  2436   001444                     
  2437                           ;view_log.c: 58:         logs[9] = read_external_eeprom(p*10 + 5);
  2438   001444  0100               	movlb	0	; () banked
  2439   001446  518F               	movf	_p& (0+255),w,b
  2440   001448  0D0A               	mullw	10
  2441   00144A  50F3               	movf	243,w,c
  2442   00144C  0F05               	addlw	5
  2443   00144E  EC3F  F014         	call	_read_external_eeprom
  2444   001452  6E16               	movwf	(view_log@logs+9)^0,c
  2445   001454                     
  2446                           ;view_log.c: 59:         logs[11] = read_external_eeprom(p*10 + 6);
  2447   001454  0100               	movlb	0	; () banked
  2448   001456  518F               	movf	_p& (0+255),w,b
  2449   001458  0D0A               	mullw	10
  2450   00145A  50F3               	movf	243,w,c
  2451   00145C  0F06               	addlw	6
  2452   00145E  EC3F  F014         	call	_read_external_eeprom
  2453   001462  6E18               	movwf	(view_log@logs+11)^0,c
  2454   001464                     
  2455                           ;view_log.c: 60:         logs[12] = read_external_eeprom(p*10 + 7);
  2456   001464  0100               	movlb	0	; () banked
  2457   001466  518F               	movf	_p& (0+255),w,b
  2458   001468  0D0A               	mullw	10
  2459   00146A  50F3               	movf	243,w,c
  2460   00146C  0F07               	addlw	7
  2461   00146E  EC3F  F014         	call	_read_external_eeprom
  2462   001472  6E19               	movwf	(view_log@logs+12)^0,c
  2463   001474                     
  2464                           ;view_log.c: 61:         logs[14] = read_external_eeprom(p*10 + 8);
  2465   001474  0100               	movlb	0	; () banked
  2466   001476  518F               	movf	_p& (0+255),w,b
  2467   001478  0D0A               	mullw	10
  2468   00147A  50F3               	movf	243,w,c
  2469   00147C  0F08               	addlw	8
  2470   00147E  EC3F  F014         	call	_read_external_eeprom
  2471   001482  6E1B               	movwf	(view_log@logs+14)^0,c
  2472   001484                     
  2473                           ;view_log.c: 62:         logs[15] = read_external_eeprom(p*10 + 9);
  2474   001484  0100               	movlb	0	; () banked
  2475   001486  518F               	movf	_p& (0+255),w,b
  2476   001488  0D0A               	mullw	10
  2477   00148A  50F3               	movf	243,w,c
  2478   00148C  0F09               	addlw	9
  2479   00148E  EC3F  F014         	call	_read_external_eeprom
  2480   001492  6E1C               	movwf	(view_log@logs+15)^0,c
  2481   001494                     
  2482                           ;view_log.c: 65:         logs[1] = ' ';
  2483   001494  0E20               	movlw	32
  2484   001496  6E0E               	movwf	(view_log@logs+1)^0,c
  2485   001498                     
  2486                           ;view_log.c: 66:         logs[4] = ':';
  2487   001498  0E3A               	movlw	58
  2488   00149A  6E11               	movwf	(view_log@logs+4)^0,c
  2489   00149C                     
  2490                           ;view_log.c: 67:         logs[7] = ':';
  2491   00149C  0E3A               	movlw	58
  2492   00149E  6E14               	movwf	(view_log@logs+7)^0,c
  2493   0014A0                     
  2494                           ;view_log.c: 68:         logs[10] = ' ';
  2495   0014A0  0E20               	movlw	32
  2496   0014A2  6E17               	movwf	(view_log@logs+10)^0,c
  2497   0014A4                     
  2498                           ;view_log.c: 69:         logs[13] = ' ';
  2499   0014A4  0E20               	movlw	32
  2500   0014A6  6E1A               	movwf	(view_log@logs+13)^0,c
  2501   0014A8                     
  2502                           ;view_log.c: 70:         logs[16] = '\0';
  2503   0014A8  0E00               	movlw	0
  2504   0014AA  6E1D               	movwf	(view_log@logs+16)^0,c
  2505   0014AC                     
  2506                           ;view_log.c: 72:         clcd_print("# TIME   GEAR SP", (0x80 + (0)));
  2507   0014AC  0E82               	movlw	low STR_154
  2508   0014AE  6E08               	movwf	clcd_print@data^0,c
  2509   0014B0  0E2E               	movlw	high STR_154
  2510   0014B2  6E09               	movwf	(clcd_print@data+1)^0,c
  2511   0014B4  0E80               	movlw	128
  2512   0014B6  6E0A               	movwf	clcd_print@addr^0,c
  2513   0014B8  EC1C  F012         	call	_clcd_print	;wreg free
  2514   0014BC                     
  2515                           ;view_log.c: 73:         clcd_print(logs,(0xC0 + (0)));
  2516   0014BC  0E0D               	movlw	low view_log@logs
  2517   0014BE  6E08               	movwf	clcd_print@data^0,c
  2518   0014C0  6A09               	clrf	(clcd_print@data+1)^0,c
  2519   0014C2  0EC0               	movlw	192
  2520   0014C4  6E0A               	movwf	clcd_print@addr^0,c
  2521   0014C6  EC1C  F012         	call	_clcd_print	;wreg free
  2522                           
  2523                           ;view_log.c: 75:     }
  2524   0014CA  EF77  F00A         	goto	l870
  2525   0014CE                     l6145:
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;view_log.c: 77:     {;view_log.c: 78:         clcd_print("  VIEW LOG :    ", (0x80 + (0
      +                          )));
  2529   0014CE  0E60               	movlw	low STR_155
  2530   0014D0  6E08               	movwf	clcd_print@data^0,c
  2531   0014D2  0E2E               	movlw	high STR_155
  2532   0014D4  6E09               	movwf	(clcd_print@data+1)^0,c
  2533   0014D6  0E80               	movlw	128
  2534   0014D8  6E0A               	movwf	clcd_print@addr^0,c
  2535   0014DA  EC1C  F012         	call	_clcd_print	;wreg free
  2536                           
  2537                           ;view_log.c: 79:         clcd_print(" < EMPTY LOG >  ", (0xC0 + (0)));
  2538   0014DE  0E71               	movlw	low STR_156
  2539   0014E0  6E08               	movwf	clcd_print@data^0,c
  2540   0014E2  0E2E               	movlw	high STR_156
  2541   0014E4  6E09               	movwf	(clcd_print@data+1)^0,c
  2542   0014E6  0EC0               	movlw	192
  2543   0014E8  6E0A               	movwf	clcd_print@addr^0,c
  2544   0014EA  EC1C  F012         	call	_clcd_print	;wreg free
  2545   0014EE                     l870:
  2546   0014EE  0012               	return		;funcret
  2547   0014F0                     __end_of_view_log:
  2548                           	callstack 0
  2549                           
  2550 ;; *************** function _settime *****************
  2551 ;; Defined at:
  2552 ;;		line 19 in file "set_time.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;  key             1    wreg     unsigned char 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;  key             1   40[COMRAM] unsigned char 
  2557 ;;  str            17   15[COMRAM] unsigned char [17]
  2558 ;; Return value:  Size  Location     Type
  2559 ;;                  1    wreg      void 
  2560 ;; Registers used:
  2561 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2562 ;; Tracked objects:
  2563 ;;		On entry : 0/0
  2564 ;;		On exit  : 0/0
  2565 ;;		Unchanged: 0/0
  2566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2567 ;;      Params:         0       0       0       0       0       0       0
  2568 ;;      Locals:        26       0       0       0       0       0       0
  2569 ;;      Temps:          2       0       0       0       0       0       0
  2570 ;;      Totals:        28       0       0       0       0       0       0
  2571 ;;Total ram usage:       28 bytes
  2572 ;; Hardware stack levels used: 1
  2573 ;; Hardware stack levels required when called: 6
  2574 ;; This function calls:
  2575 ;;		___awdiv
  2576 ;;		___awmod
  2577 ;;		_clcd_print
  2578 ;;		_read_ds1307
  2579 ;;		_write_ds1307
  2580 ;; This function is called by:
  2581 ;;		_main
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text2
  2586   000012                     __ptext2:
  2587                           	callstack 0
  2588   000012                     _settime:
  2589                           	callstack 24
  2590                           
  2591                           ;incstack = 0
  2592                           ;settime@key stored from wreg
  2593   000012  6E29               	movwf	settime@key^0,c
  2594   000014                     
  2595                           ;set_time.c: 19: void settime(char key);set_time.c: 20: {;set_time.c: 24:     if(once ==
      +                           0)
  2596   000014  0100               	movlb	0	; () banked
  2597   000016  5186               	movf	_once& (0+255),w,b
  2598   000018  A4D8               	btfss	status,2,c
  2599   00001A  EF11  F000         	goto	u4941
  2600   00001E  EF13  F000         	goto	u4940
  2601   000022                     u4941:
  2602   000022  EF52  F000         	goto	l6179
  2603   000026                     u4940:
  2604   000026                     
  2605                           ; BSR set to: 0
  2606                           ;set_time.c: 25:     {;set_time.c: 26:     byte = read_ds1307(0x07);
  2607   000026  0E07               	movlw	7
  2608   000028  EC54  F014         	call	_read_ds1307
  2609   00002C  6E55               	movwf	_byte^0,c
  2610   00002E                     
  2611                           ;set_time.c: 27:     byte = byte | 0x80;
  2612   00002E  5055               	movf	_byte^0,w,c
  2613   000030  0980               	iorlw	128
  2614   000032  6E55               	movwf	_byte^0,c
  2615   000034                     
  2616                           ;set_time.c: 28:     write_ds1307(0x07, byte);
  2617   000034  C055  F007         	movff	_byte,write_ds1307@data
  2618   000038  0E07               	movlw	7
  2619   00003A  ECAD  F014         	call	_write_ds1307
  2620   00003E                     
  2621                           ;set_time.c: 30:     byte = read_ds1307(0x00);
  2622   00003E  0E00               	movlw	0
  2623   000040  EC54  F014         	call	_read_ds1307
  2624   000044  6E55               	movwf	_byte^0,c
  2625   000046                     
  2626                           ;set_time.c: 31:     scd = ((byte >> 4 )& 0x07);
  2627   000046  3855               	swapf	_byte^0,w,c
  2628   000048  0B0F               	andlw	15
  2629   00004A  0B07               	andlw	7
  2630   00004C  6E51               	movwf	_scd^0,c
  2631   00004E                     
  2632                           ;set_time.c: 32:     scd = scd * 10;
  2633   00004E  5051               	movf	_scd^0,w,c
  2634   000050  0D0A               	mullw	10
  2635   000052  CFF3 F051          	movff	prodl,_scd
  2636   000056                     
  2637                           ;set_time.c: 33:     scd = scd + (byte & 0x0F);
  2638   000056  5055               	movf	_byte^0,w,c
  2639   000058  0B0F               	andlw	15
  2640   00005A  2451               	addwf	_scd^0,w,c
  2641   00005C  6E51               	movwf	_scd^0,c
  2642   00005E                     
  2643                           ;set_time.c: 35:     byte = read_ds1307(0x01);
  2644   00005E  0E01               	movlw	1
  2645   000060  EC54  F014         	call	_read_ds1307
  2646   000064  6E55               	movwf	_byte^0,c
  2647   000066                     
  2648                           ;set_time.c: 36:     mnn = ((byte >> 4 )& 0x07);
  2649   000066  3855               	swapf	_byte^0,w,c
  2650   000068  0B0F               	andlw	15
  2651   00006A  0B07               	andlw	7
  2652   00006C  6E52               	movwf	_mnn^0,c
  2653                           
  2654                           ;set_time.c: 37:     mnn = mnn * 10;
  2655   00006E  5052               	movf	_mnn^0,w,c
  2656   000070  0D0A               	mullw	10
  2657   000072  CFF3 F052          	movff	prodl,_mnn
  2658   000076                     
  2659                           ;set_time.c: 38:     mnn = mnn + (byte & 0x0F);
  2660   000076  5055               	movf	_byte^0,w,c
  2661   000078  0B0F               	andlw	15
  2662   00007A  2452               	addwf	_mnn^0,w,c
  2663   00007C  6E52               	movwf	_mnn^0,c
  2664   00007E                     
  2665                           ;set_time.c: 40:     byte = read_ds1307(0x02);
  2666   00007E  0E02               	movlw	2
  2667   000080  EC54  F014         	call	_read_ds1307
  2668   000084  6E55               	movwf	_byte^0,c
  2669   000086                     
  2670                           ;set_time.c: 41:     hrr = ((byte >> 4 )& 0x03);
  2671   000086  3855               	swapf	_byte^0,w,c
  2672   000088  0B0F               	andlw	15
  2673   00008A  0B03               	andlw	3
  2674   00008C  6E53               	movwf	_hrr^0,c
  2675   00008E                     
  2676                           ;set_time.c: 42:     hrr = hrr * 10;
  2677   00008E  5053               	movf	_hrr^0,w,c
  2678   000090  0D0A               	mullw	10
  2679   000092  CFF3 F053          	movff	prodl,_hrr
  2680   000096                     
  2681                           ;set_time.c: 43:     hrr = hrr + (byte & 0x0F);
  2682   000096  5055               	movf	_byte^0,w,c
  2683   000098  0B0F               	andlw	15
  2684   00009A  2453               	addwf	_hrr^0,w,c
  2685   00009C  6E53               	movwf	_hrr^0,c
  2686   00009E                     
  2687                           ;set_time.c: 46:     once = 1;
  2688   00009E  0E01               	movlw	1
  2689   0000A0  0100               	movlb	0	; () banked
  2690   0000A2  6F86               	movwf	_once& (0+255),b
  2691   0000A4                     l6179:
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;set_time.c: 48:     if(key == 12)
  2695   0000A4  0E0C               	movlw	12
  2696   0000A6  1829               	xorwf	settime@key^0,w,c
  2697   0000A8  A4D8               	btfss	status,2,c
  2698   0000AA  EF59  F000         	goto	u4951
  2699   0000AE  EF5B  F000         	goto	u4950
  2700   0000B2                     u4951:
  2701   0000B2  EF74  F000         	goto	l6189
  2702   0000B6                     u4950:
  2703   0000B6                     
  2704                           ; BSR set to: 0
  2705                           ;set_time.c: 49:     {;set_time.c: 50:         field = field == 2? 0: field + 1;
  2706   0000B6  0E02               	movlw	2
  2707   0000B8  1854               	xorwf	_field^0,w,c
  2708   0000BA  B4D8               	btfsc	status,2,c
  2709   0000BC  EF62  F000         	goto	u4961
  2710   0000C0  EF64  F000         	goto	u4960
  2711   0000C4                     u4961:
  2712   0000C4  EF6C  F000         	goto	l6185
  2713   0000C8                     u4960:
  2714   0000C8                     
  2715                           ; BSR set to: 0
  2716   0000C8  0E01               	movlw	1
  2717   0000CA  2454               	addwf	_field^0,w,c
  2718   0000CC  6E21               	movwf	_settime$627^0,c
  2719   0000CE  6A22               	clrf	(_settime$627+1)^0,c
  2720   0000D0  0E00               	movlw	0
  2721   0000D2  2222               	addwfc	(_settime$627+1)^0,f,c
  2722   0000D4  EF70  F000         	goto	l6187
  2723   0000D8                     l6185:
  2724                           
  2725                           ; BSR set to: 0
  2726   0000D8  0E00               	movlw	0
  2727   0000DA  6E22               	movwf	(_settime$627+1)^0,c
  2728   0000DC  0E00               	movlw	0
  2729   0000DE  6E21               	movwf	_settime$627^0,c
  2730   0000E0                     l6187:
  2731                           
  2732                           ; BSR set to: 0
  2733   0000E0  C021  F054         	movff	_settime$627,_field
  2734                           
  2735                           ;set_time.c: 51:     }
  2736   0000E4  EF7C  F001         	goto	l6265
  2737   0000E8                     l6189:
  2738                           
  2739                           ; BSR set to: 0
  2740   0000E8  0E0B               	movlw	11
  2741   0000EA  1829               	xorwf	settime@key^0,w,c
  2742   0000EC  A4D8               	btfss	status,2,c
  2743   0000EE  EF7B  F000         	goto	u4971
  2744   0000F2  EF7D  F000         	goto	u4970
  2745   0000F6                     u4971:
  2746   0000F6  EFE1  F000         	goto	l6221
  2747   0000FA                     u4970:
  2748   0000FA                     
  2749                           ; BSR set to: 0
  2750                           ;set_time.c: 53:     {;set_time.c: 54:         if(field == 0)
  2751   0000FA  5054               	movf	_field^0,w,c
  2752   0000FC  A4D8               	btfss	status,2,c
  2753   0000FE  EF83  F000         	goto	u4981
  2754   000102  EF85  F000         	goto	u4980
  2755   000106                     u4981:
  2756   000106  EF9E  F000         	goto	l6201
  2757   00010A                     u4980:
  2758   00010A                     
  2759                           ; BSR set to: 0
  2760                           ;set_time.c: 55:         {;set_time.c: 56:             scd = scd == 59? 0: scd + 1;
  2761   00010A  0E3B               	movlw	59
  2762   00010C  1851               	xorwf	_scd^0,w,c
  2763   00010E  B4D8               	btfsc	status,2,c
  2764   000110  EF8C  F000         	goto	u4991
  2765   000114  EF8E  F000         	goto	u4990
  2766   000118                     u4991:
  2767   000118  EF96  F000         	goto	l6197
  2768   00011C                     u4990:
  2769   00011C                     
  2770                           ; BSR set to: 0
  2771   00011C  0E01               	movlw	1
  2772   00011E  2451               	addwf	_scd^0,w,c
  2773   000120  6E23               	movwf	_settime$628^0,c
  2774   000122  6A24               	clrf	(_settime$628+1)^0,c
  2775   000124  0E00               	movlw	0
  2776   000126  2224               	addwfc	(_settime$628+1)^0,f,c
  2777   000128  EF9A  F000         	goto	l6199
  2778   00012C                     l6197:
  2779                           
  2780                           ; BSR set to: 0
  2781   00012C  0E00               	movlw	0
  2782   00012E  6E24               	movwf	(_settime$628+1)^0,c
  2783   000130  0E00               	movlw	0
  2784   000132  6E23               	movwf	_settime$628^0,c
  2785   000134                     l6199:
  2786                           
  2787                           ; BSR set to: 0
  2788   000134  C023  F051         	movff	_settime$628,_scd
  2789                           
  2790                           ;set_time.c: 57:         }
  2791   000138  EF7C  F001         	goto	l6265
  2792   00013C                     l6201:
  2793                           
  2794                           ; BSR set to: 0
  2795   00013C  0454               	decf	_field^0,w,c
  2796   00013E  A4D8               	btfss	status,2,c
  2797   000140  EFA4  F000         	goto	u5001
  2798   000144  EFA6  F000         	goto	u5000
  2799   000148                     u5001:
  2800   000148  EFBF  F000         	goto	l6211
  2801   00014C                     u5000:
  2802   00014C                     
  2803                           ; BSR set to: 0
  2804                           ;set_time.c: 59:         {;set_time.c: 60:             mnn = mnn == 59? 0: mnn + 1;
  2805   00014C  0E3B               	movlw	59
  2806   00014E  1852               	xorwf	_mnn^0,w,c
  2807   000150  B4D8               	btfsc	status,2,c
  2808   000152  EFAD  F000         	goto	u5011
  2809   000156  EFAF  F000         	goto	u5010
  2810   00015A                     u5011:
  2811   00015A  EFB7  F000         	goto	l6207
  2812   00015E                     u5010:
  2813   00015E                     
  2814                           ; BSR set to: 0
  2815   00015E  0E01               	movlw	1
  2816   000160  2452               	addwf	_mnn^0,w,c
  2817   000162  6E25               	movwf	_settime$629^0,c
  2818   000164  6A26               	clrf	(_settime$629+1)^0,c
  2819   000166  0E00               	movlw	0
  2820   000168  2226               	addwfc	(_settime$629+1)^0,f,c
  2821   00016A  EFBB  F000         	goto	l6209
  2822   00016E                     l6207:
  2823                           
  2824                           ; BSR set to: 0
  2825   00016E  0E00               	movlw	0
  2826   000170  6E26               	movwf	(_settime$629+1)^0,c
  2827   000172  0E00               	movlw	0
  2828   000174  6E25               	movwf	_settime$629^0,c
  2829   000176                     l6209:
  2830                           
  2831                           ; BSR set to: 0
  2832   000176  C025  F052         	movff	_settime$629,_mnn
  2833                           
  2834                           ;set_time.c: 61:         }
  2835   00017A  EF7C  F001         	goto	l6265
  2836   00017E                     l6211:
  2837                           
  2838                           ; BSR set to: 0
  2839   00017E  0E02               	movlw	2
  2840   000180  1854               	xorwf	_field^0,w,c
  2841   000182  A4D8               	btfss	status,2,c
  2842   000184  EFC6  F000         	goto	u5021
  2843   000188  EFC8  F000         	goto	u5020
  2844   00018C                     u5021:
  2845   00018C  EF7C  F001         	goto	l746
  2846   000190                     u5020:
  2847   000190                     
  2848                           ; BSR set to: 0
  2849                           ;set_time.c: 63:         {;set_time.c: 64:             hrr = hrr == 23? 0: hrr + 1;
  2850   000190  0E17               	movlw	23
  2851   000192  1853               	xorwf	_hrr^0,w,c
  2852   000194  B4D8               	btfsc	status,2,c
  2853   000196  EFCF  F000         	goto	u5031
  2854   00019A  EFD1  F000         	goto	u5030
  2855   00019E                     u5031:
  2856   00019E  EFD9  F000         	goto	l6217
  2857   0001A2                     u5030:
  2858   0001A2                     
  2859                           ; BSR set to: 0
  2860   0001A2  0E01               	movlw	1
  2861   0001A4  2453               	addwf	_hrr^0,w,c
  2862   0001A6  6E27               	movwf	_settime$630^0,c
  2863   0001A8  6A28               	clrf	(_settime$630+1)^0,c
  2864   0001AA  0E00               	movlw	0
  2865   0001AC  2228               	addwfc	(_settime$630+1)^0,f,c
  2866   0001AE  EFDD  F000         	goto	l6219
  2867   0001B2                     l6217:
  2868                           
  2869                           ; BSR set to: 0
  2870   0001B2  0E00               	movlw	0
  2871   0001B4  6E28               	movwf	(_settime$630+1)^0,c
  2872   0001B6  0E00               	movlw	0
  2873   0001B8  6E27               	movwf	_settime$630^0,c
  2874   0001BA                     l6219:
  2875                           
  2876                           ; BSR set to: 0
  2877   0001BA  C027  F053         	movff	_settime$630,_hrr
  2878   0001BE  EF7C  F001         	goto	l6265
  2879   0001C2                     l6221:
  2880                           
  2881                           ; BSR set to: 0
  2882   0001C2  0E16               	movlw	22
  2883   0001C4  1829               	xorwf	settime@key^0,w,c
  2884   0001C6  A4D8               	btfss	status,2,c
  2885   0001C8  EFE8  F000         	goto	u5041
  2886   0001CC  EFEA  F000         	goto	u5040
  2887   0001D0                     u5041:
  2888   0001D0  EFFF  F000         	goto	l6239
  2889   0001D4                     u5040:
  2890   0001D4                     
  2891                           ; BSR set to: 0
  2892                           ;set_time.c: 68:     {;set_time.c: 69:         byte = read_ds1307(0x07);
  2893   0001D4  0E07               	movlw	7
  2894   0001D6  EC54  F014         	call	_read_ds1307
  2895   0001DA  6E55               	movwf	_byte^0,c
  2896   0001DC                     
  2897                           ;set_time.c: 70:         byte = byte & 0x7F;
  2898   0001DC  5055               	movf	_byte^0,w,c
  2899   0001DE  0B7F               	andlw	127
  2900   0001E0  6E55               	movwf	_byte^0,c
  2901   0001E2                     
  2902                           ;set_time.c: 71:         write_ds1307(0x07, byte);
  2903   0001E2  C055  F007         	movff	_byte,write_ds1307@data
  2904   0001E6  0E07               	movlw	7
  2905   0001E8  ECAD  F014         	call	_write_ds1307
  2906   0001EC                     l6229:
  2907                           
  2908                           ;set_time.c: 72:         main_f = 2;
  2909   0001EC  0E02               	movlw	2
  2910   0001EE  0100               	movlb	0	; () banked
  2911   0001F0  6F8B               	movwf	_main_f& (0+255),b
  2912   0001F2                     
  2913                           ; BSR set to: 0
  2914                           ;set_time.c: 73:         back_f = 1;
  2915   0001F2  0E01               	movlw	1
  2916   0001F4  6F8C               	movwf	_back_f& (0+255),b
  2917   0001F6                     
  2918                           ; BSR set to: 0
  2919                           ;set_time.c: 74:         once = 0;
  2920   0001F6  0E00               	movlw	0
  2921   0001F8  6F86               	movwf	_once& (0+255),b
  2922   0001FA  EF04  F002         	goto	l748
  2923   0001FE                     l6239:
  2924                           
  2925                           ; BSR set to: 0
  2926   0001FE  0E15               	movlw	21
  2927   000200  1829               	xorwf	settime@key^0,w,c
  2928   000202  A4D8               	btfss	status,2,c
  2929   000204  EF06  F001         	goto	u5051
  2930   000208  EF08  F001         	goto	u5050
  2931   00020C                     u5051:
  2932   00020C  EF7C  F001         	goto	l746
  2933   000210                     u5050:
  2934   000210                     
  2935                           ; BSR set to: 0
  2936                           ;set_time.c: 78:     {;set_time.c: 80:         byte = (((scd / 10) << 4) & 0x70)|((scd %
      +                           10) & 0x0F);
  2937   000210  C051  F006         	movff	_scd,___awmod@dividend
  2938   000214  6A07               	clrf	(___awmod@dividend+1)^0,c
  2939   000216  0E00               	movlw	0
  2940   000218  6E09               	movwf	(___awmod@divisor+1)^0,c
  2941   00021A  0E0A               	movlw	10
  2942   00021C  6E08               	movwf	___awmod@divisor^0,c
  2943   00021E  EC8C  F00F         	call	___awmod	;wreg free
  2944   000222  C006  F00E         	movff	?___awmod,??_settime
  2945   000226  C007  F00F         	movff	?___awmod+1,??_settime+1
  2946   00022A  0E0F               	movlw	15
  2947   00022C  160E               	andwf	??_settime^0,f,c
  2948   00022E  C051  F006         	movff	_scd,___awdiv@dividend
  2949   000232  6A07               	clrf	(___awdiv@dividend+1)^0,c
  2950   000234  0E00               	movlw	0
  2951   000236  6E09               	movwf	(___awdiv@divisor+1)^0,c
  2952   000238  0E0A               	movlw	10
  2953   00023A  6E08               	movwf	___awdiv@divisor^0,c
  2954   00023C  ECCA  F00E         	call	___awdiv	;wreg free
  2955   000240  3806               	swapf	?___awdiv^0,w,c
  2956   000242  0BF0               	andlw	240
  2957   000244  0B70               	andlw	112
  2958   000246  100E               	iorwf	??_settime^0,w,c
  2959   000248  6E55               	movwf	_byte^0,c
  2960   00024A                     
  2961                           ;set_time.c: 81:         write_ds1307(0x00, byte);
  2962   00024A  C055  F007         	movff	_byte,write_ds1307@data
  2963   00024E  0E00               	movlw	0
  2964   000250  ECAD  F014         	call	_write_ds1307
  2965   000254                     
  2966                           ;set_time.c: 83:         byte = (((mnn / 10) << 4) & 0x70)|((mnn % 10) & 0x0F);
  2967   000254  C052  F006         	movff	_mnn,___awmod@dividend
  2968   000258  6A07               	clrf	(___awmod@dividend+1)^0,c
  2969   00025A  0E00               	movlw	0
  2970   00025C  6E09               	movwf	(___awmod@divisor+1)^0,c
  2971   00025E  0E0A               	movlw	10
  2972   000260  6E08               	movwf	___awmod@divisor^0,c
  2973   000262  EC8C  F00F         	call	___awmod	;wreg free
  2974   000266  C006  F00E         	movff	?___awmod,??_settime
  2975   00026A  C007  F00F         	movff	?___awmod+1,??_settime+1
  2976   00026E  0E0F               	movlw	15
  2977   000270  160E               	andwf	??_settime^0,f,c
  2978   000272  C052  F006         	movff	_mnn,___awdiv@dividend
  2979   000276  6A07               	clrf	(___awdiv@dividend+1)^0,c
  2980   000278  0E00               	movlw	0
  2981   00027A  6E09               	movwf	(___awdiv@divisor+1)^0,c
  2982   00027C  0E0A               	movlw	10
  2983   00027E  6E08               	movwf	___awdiv@divisor^0,c
  2984   000280  ECCA  F00E         	call	___awdiv	;wreg free
  2985   000284  3806               	swapf	?___awdiv^0,w,c
  2986   000286  0BF0               	andlw	240
  2987   000288  0B70               	andlw	112
  2988   00028A  100E               	iorwf	??_settime^0,w,c
  2989   00028C  6E55               	movwf	_byte^0,c
  2990                           
  2991                           ;set_time.c: 84:         write_ds1307(0x01, byte);
  2992   00028E  C055  F007         	movff	_byte,write_ds1307@data
  2993   000292  0E01               	movlw	1
  2994   000294  ECAD  F014         	call	_write_ds1307
  2995   000298                     
  2996                           ;set_time.c: 86:         byte = (((hrr / 10) << 4) & 0x30)|((hrr % 10) & 0x0F);
  2997   000298  C053  F006         	movff	_hrr,___awmod@dividend
  2998   00029C  6A07               	clrf	(___awmod@dividend+1)^0,c
  2999   00029E  0E00               	movlw	0
  3000   0002A0  6E09               	movwf	(___awmod@divisor+1)^0,c
  3001   0002A2  0E0A               	movlw	10
  3002   0002A4  6E08               	movwf	___awmod@divisor^0,c
  3003   0002A6  EC8C  F00F         	call	___awmod	;wreg free
  3004   0002AA  C006  F00E         	movff	?___awmod,??_settime
  3005   0002AE  C007  F00F         	movff	?___awmod+1,??_settime+1
  3006   0002B2  0E0F               	movlw	15
  3007   0002B4  160E               	andwf	??_settime^0,f,c
  3008   0002B6  C053  F006         	movff	_hrr,___awdiv@dividend
  3009   0002BA  6A07               	clrf	(___awdiv@dividend+1)^0,c
  3010   0002BC  0E00               	movlw	0
  3011   0002BE  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3012   0002C0  0E0A               	movlw	10
  3013   0002C2  6E08               	movwf	___awdiv@divisor^0,c
  3014   0002C4  ECCA  F00E         	call	___awdiv	;wreg free
  3015   0002C8  3806               	swapf	?___awdiv^0,w,c
  3016   0002CA  0BF0               	andlw	240
  3017   0002CC  0B30               	andlw	48
  3018   0002CE  100E               	iorwf	??_settime^0,w,c
  3019   0002D0  6E55               	movwf	_byte^0,c
  3020   0002D2                     
  3021                           ;set_time.c: 87:         write_ds1307(0x02, byte);
  3022   0002D2  C055  F007         	movff	_byte,write_ds1307@data
  3023   0002D6  0E02               	movlw	2
  3024   0002D8  ECAD  F014         	call	_write_ds1307
  3025   0002DC                     
  3026                           ;set_time.c: 89:         byte = read_ds1307(0x07);
  3027   0002DC  0E07               	movlw	7
  3028   0002DE  EC54  F014         	call	_read_ds1307
  3029   0002E2  6E55               	movwf	_byte^0,c
  3030   0002E4                     
  3031                           ;set_time.c: 90:         byte = byte & 0x7F;
  3032   0002E4  5055               	movf	_byte^0,w,c
  3033   0002E6  0B7F               	andlw	127
  3034   0002E8  6E55               	movwf	_byte^0,c
  3035   0002EA                     
  3036                           ;set_time.c: 91:         write_ds1307(0x07, byte);
  3037   0002EA  C055  F007         	movff	_byte,write_ds1307@data
  3038   0002EE  0E07               	movlw	7
  3039   0002F0  ECAD  F014         	call	_write_ds1307
  3040   0002F4  EFF6  F000         	goto	l6229
  3041   0002F8                     l746:
  3042   0002F8                     l6265:
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;set_time.c: 100:     char str[17];;set_time.c: 101:     str[0] = (hrr / 10) + '0';
  3046   0002F8  C053  F006         	movff	_hrr,___awdiv@dividend
  3047   0002FC  6A07               	clrf	(___awdiv@dividend+1)^0,c
  3048   0002FE  0E00               	movlw	0
  3049   000300  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3050   000302  0E0A               	movlw	10
  3051   000304  6E08               	movwf	___awdiv@divisor^0,c
  3052   000306  ECCA  F00E         	call	___awdiv	;wreg free
  3053   00030A  5006               	movf	?___awdiv^0,w,c
  3054   00030C  0F30               	addlw	48
  3055   00030E  6E10               	movwf	settime@str^0,c
  3056                           
  3057                           ;set_time.c: 102:     str[1] = (hrr % 10) + '0';
  3058   000310  C053  F006         	movff	_hrr,___awmod@dividend
  3059   000314  6A07               	clrf	(___awmod@dividend+1)^0,c
  3060   000316  0E00               	movlw	0
  3061   000318  6E09               	movwf	(___awmod@divisor+1)^0,c
  3062   00031A  0E0A               	movlw	10
  3063   00031C  6E08               	movwf	___awmod@divisor^0,c
  3064   00031E  EC8C  F00F         	call	___awmod	;wreg free
  3065   000322  5006               	movf	?___awmod^0,w,c
  3066   000324  0F30               	addlw	48
  3067   000326  6E11               	movwf	(settime@str+1)^0,c
  3068   000328                     
  3069                           ;set_time.c: 103:     str[2] = ':';
  3070   000328  0E3A               	movlw	58
  3071   00032A  6E12               	movwf	(settime@str+2)^0,c
  3072   00032C                     
  3073                           ;set_time.c: 104:     str[3] = (mnn / 10) + '0';
  3074   00032C  C052  F006         	movff	_mnn,___awdiv@dividend
  3075   000330  6A07               	clrf	(___awdiv@dividend+1)^0,c
  3076   000332  0E00               	movlw	0
  3077   000334  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3078   000336  0E0A               	movlw	10
  3079   000338  6E08               	movwf	___awdiv@divisor^0,c
  3080   00033A  ECCA  F00E         	call	___awdiv	;wreg free
  3081   00033E  5006               	movf	?___awdiv^0,w,c
  3082   000340  0F30               	addlw	48
  3083   000342  6E13               	movwf	(settime@str+3)^0,c
  3084   000344                     
  3085                           ;set_time.c: 105:     str[4] = (mnn % 10) + '0';
  3086   000344  C052  F006         	movff	_mnn,___awmod@dividend
  3087   000348  6A07               	clrf	(___awmod@dividend+1)^0,c
  3088   00034A  0E00               	movlw	0
  3089   00034C  6E09               	movwf	(___awmod@divisor+1)^0,c
  3090   00034E  0E0A               	movlw	10
  3091   000350  6E08               	movwf	___awmod@divisor^0,c
  3092   000352  EC8C  F00F         	call	___awmod	;wreg free
  3093   000356  5006               	movf	?___awmod^0,w,c
  3094   000358  0F30               	addlw	48
  3095   00035A  6E14               	movwf	(settime@str+4)^0,c
  3096   00035C                     
  3097                           ;set_time.c: 106:     str[5] = ':';
  3098   00035C  0E3A               	movlw	58
  3099   00035E  6E15               	movwf	(settime@str+5)^0,c
  3100                           
  3101                           ;set_time.c: 107:     str[6] = (scd / 10) + '0';
  3102   000360  C051  F006         	movff	_scd,___awdiv@dividend
  3103   000364  6A07               	clrf	(___awdiv@dividend+1)^0,c
  3104   000366  0E00               	movlw	0
  3105   000368  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3106   00036A  0E0A               	movlw	10
  3107   00036C  6E08               	movwf	___awdiv@divisor^0,c
  3108   00036E  ECCA  F00E         	call	___awdiv	;wreg free
  3109   000372  5006               	movf	?___awdiv^0,w,c
  3110   000374  0F30               	addlw	48
  3111   000376  6E16               	movwf	(settime@str+6)^0,c
  3112                           
  3113                           ;set_time.c: 108:     str[7] = (scd % 10) + '0';
  3114   000378  C051  F006         	movff	_scd,___awmod@dividend
  3115   00037C  6A07               	clrf	(___awmod@dividend+1)^0,c
  3116   00037E  0E00               	movlw	0
  3117   000380  6E09               	movwf	(___awmod@divisor+1)^0,c
  3118   000382  0E0A               	movlw	10
  3119   000384  6E08               	movwf	___awmod@divisor^0,c
  3120   000386  EC8C  F00F         	call	___awmod	;wreg free
  3121   00038A  5006               	movf	?___awmod^0,w,c
  3122   00038C  0F30               	addlw	48
  3123   00038E  6E17               	movwf	(settime@str+7)^0,c
  3124   000390                     
  3125                           ;set_time.c: 109:     str[8] = '\0';
  3126   000390  0E00               	movlw	0
  3127   000392  6E18               	movwf	(settime@str+8)^0,c
  3128   000394                     
  3129                           ;set_time.c: 111:     if(flag)
  3130   000394  5059               	movf	_flag^0,w,c
  3131   000396  B4D8               	btfsc	status,2,c
  3132   000398  EFD0  F001         	goto	u5061
  3133   00039C  EFD2  F001         	goto	u5060
  3134   0003A0                     u5061:
  3135   0003A0  EFF5  F001         	goto	l6291
  3136   0003A4                     u5060:
  3137   0003A4  EFE6  F001         	goto	l6289
  3138   0003A8                     l6281:
  3139                           
  3140                           ;set_time.c: 116:                 str[6] = '_';
  3141   0003A8  0E5F               	movlw	95
  3142   0003AA  6E16               	movwf	(settime@str+6)^0,c
  3143                           
  3144                           ;set_time.c: 117:                 str[7] = '_';
  3145   0003AC  0E5F               	movlw	95
  3146   0003AE  6E17               	movwf	(settime@str+7)^0,c
  3147                           
  3148                           ;set_time.c: 118:                 break;
  3149   0003B0  EFF5  F001         	goto	l6291
  3150   0003B4                     l6283:
  3151                           
  3152                           ;set_time.c: 120:                 str[3] = '_';
  3153   0003B4  0E5F               	movlw	95
  3154   0003B6  6E13               	movwf	(settime@str+3)^0,c
  3155                           
  3156                           ;set_time.c: 121:                 str[4] = '_';
  3157   0003B8  0E5F               	movlw	95
  3158   0003BA  6E14               	movwf	(settime@str+4)^0,c
  3159                           
  3160                           ;set_time.c: 122:                 break;
  3161   0003BC  EFF5  F001         	goto	l6291
  3162   0003C0                     l6285:
  3163                           
  3164                           ;set_time.c: 124:                 str[0] = '_';
  3165   0003C0  0E5F               	movlw	95
  3166   0003C2  6E10               	movwf	settime@str^0,c
  3167                           
  3168                           ;set_time.c: 125:                 str[1] = '_';
  3169   0003C4  0E5F               	movlw	95
  3170   0003C6  6E11               	movwf	(settime@str+1)^0,c
  3171                           
  3172                           ;set_time.c: 126:                 break;
  3173   0003C8  EFF5  F001         	goto	l6291
  3174   0003CC                     l6289:
  3175   0003CC  5054               	movf	_field^0,w,c
  3176                           
  3177                           ; Switch size 1, requested type "simple"
  3178                           ; Number of cases is 3, Range of values is 0 to 2
  3179                           ; switch strategies available:
  3180                           ; Name         Instructions Cycles
  3181                           ; simple_byte           10     6 (average)
  3182                           ;	Chosen strategy is simple_byte
  3183   0003CE  0A00               	xorlw	0	; case 0
  3184   0003D0  B4D8               	btfsc	status,2,c
  3185   0003D2  EFD4  F001         	goto	l6281
  3186   0003D6  0A01               	xorlw	1	; case 1
  3187   0003D8  B4D8               	btfsc	status,2,c
  3188   0003DA  EFDA  F001         	goto	l6283
  3189   0003DE  0A03               	xorlw	3	; case 2
  3190   0003E0  B4D8               	btfsc	status,2,c
  3191   0003E2  EFE0  F001         	goto	l6285
  3192   0003E6  EFF5  F001         	goto	l6291
  3193   0003EA                     l6291:
  3194                           
  3195                           ;set_time.c: 130:     clcd_print("SET TIME     ", (0x80 + (0)));
  3196   0003EA  0EBE               	movlw	low STR_134
  3197   0003EC  6E08               	movwf	clcd_print@data^0,c
  3198   0003EE  0E2F               	movlw	high STR_134
  3199   0003F0  6E09               	movwf	(clcd_print@data+1)^0,c
  3200   0003F2  0E80               	movlw	128
  3201   0003F4  6E0A               	movwf	clcd_print@addr^0,c
  3202   0003F6  EC1C  F012         	call	_clcd_print	;wreg free
  3203                           
  3204                           ;set_time.c: 131:     clcd_print(str, (0xC0 + (0)));
  3205   0003FA  0E10               	movlw	low settime@str
  3206   0003FC  6E08               	movwf	clcd_print@data^0,c
  3207   0003FE  6A09               	clrf	(clcd_print@data+1)^0,c
  3208   000400  0EC0               	movlw	192
  3209   000402  6E0A               	movwf	clcd_print@addr^0,c
  3210   000404  EC1C  F012         	call	_clcd_print	;wreg free
  3211   000408                     l748:
  3212   000408  0012               	return		;funcret
  3213   00040A                     __end_of_settime:
  3214                           	callstack 0
  3215                           
  3216 ;; *************** function _read_switches *****************
  3217 ;; Defined at:
  3218 ;;		line 95 in file "matrix_keypad.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  detection_ty    1    wreg     unsigned char 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  detection_ty    1    7[COMRAM] unsigned char 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      unsigned char 
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3232 ;;      Params:         0       0       0       0       0       0       0
  3233 ;;      Locals:         1       0       0       0       0       0       0
  3234 ;;      Temps:          2       0       0       0       0       0       0
  3235 ;;      Totals:         3       0       0       0       0       0       0
  3236 ;;Total ram usage:        3 bytes
  3237 ;; Hardware stack levels used: 1
  3238 ;; Hardware stack levels required when called: 3
  3239 ;; This function calls:
  3240 ;;		_scan_key
  3241 ;; This function is called by:
  3242 ;;		_main
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           	psect	text3
  3247   001CC6                     __ptext3:
  3248                           	callstack 0
  3249   001CC6                     _read_switches:
  3250                           	callstack 27
  3251                           
  3252                           ;incstack = 0
  3253                           ;read_switches@detection_type stored from wreg
  3254   001CC6  6E08               	movwf	read_switches@detection_type^0,c
  3255   001CC8                     
  3256                           ;matrix_keypad.c: 95: unsigned char read_switches(unsigned char detection_type);matrix_k
      +                          eypad.c: 96: {;matrix_keypad.c: 97:     static unsigned int once = 1, long_press = 0 ;;m
      +                          atrix_keypad.c: 98:     static unsigned char key1,pre_key1;;matrix_keypad.c: 100:     if
      +                           (detection_type == 0)
  3257   001CC8  5008               	movf	read_switches@detection_type^0,w,c
  3258   001CCA  A4D8               	btfss	status,2,c
  3259   001CCC  EF6A  F00E         	goto	u3131
  3260   001CD0  EF6C  F00E         	goto	u3130
  3261   001CD4                     u3131:
  3262   001CD4  EFC8  F00E         	goto	l4725
  3263   001CD8                     u3130:
  3264   001CD8                     
  3265                           ;matrix_keypad.c: 101:     {;matrix_keypad.c: 102:         key1 = scan_key();
  3266   001CD8  EC05  F00D         	call	_scan_key	;wreg free
  3267   001CDC  0100               	movlb	0	; () banked
  3268   001CDE  6F88               	movwf	read_switches@key1& (0+255),b
  3269   001CE0                     
  3270                           ; BSR set to: 0
  3271                           ;matrix_keypad.c: 103:         if(key1 != 0xFF)
  3272   001CE0  2988               	incf	read_switches@key1& (0+255),w,b
  3273   001CE2  B4D8               	btfsc	status,2,c
  3274   001CE4  EF76  F00E         	goto	u3141
  3275   001CE8  EF78  F00E         	goto	u3140
  3276   001CEC                     u3141:
  3277   001CEC  EF9C  F00E         	goto	l4711
  3278   001CF0                     u3140:
  3279   001CF0                     
  3280                           ; BSR set to: 0
  3281                           ;matrix_keypad.c: 104:         {;matrix_keypad.c: 105:             pre_key1 = key1;
  3282   001CF0  C088  F087         	movff	read_switches@key1,read_switches@pre_key1
  3283   001CF4                     
  3284                           ; BSR set to: 0
  3285                           ;matrix_keypad.c: 106:             if (long_press++ > 800 && once)
  3286   001CF4  5181               	movf	read_switches@long_press& (0+255),w,b
  3287   001CF6  6E06               	movwf	??_read_switches^0,c
  3288   001CF8  5182               	movf	(read_switches@long_press+1)& (0+255),w,b
  3289   001CFA  6E07               	movwf	(??_read_switches+1)^0,c
  3290   001CFC  4B81               	infsnz	read_switches@long_press& (0+255),f,b
  3291   001CFE  2B82               	incf	(read_switches@long_press+1)& (0+255),f,b
  3292   001D00  0E21               	movlw	33
  3293   001D02  5C06               	subwf	??_read_switches^0,w,c
  3294   001D04  0E03               	movlw	3
  3295   001D06  5807               	subwfb	(??_read_switches+1)^0,w,c
  3296   001D08  A0D8               	btfss	status,0,c
  3297   001D0A  EF89  F00E         	goto	u3151
  3298   001D0E  EF8B  F00E         	goto	u3150
  3299   001D12                     u3151:
  3300   001D12  EFC8  F00E         	goto	l4725
  3301   001D16                     u3150:
  3302   001D16                     
  3303                           ; BSR set to: 0
  3304   001D16  51FB               	movf	read_switches@once& (0+255),w,b
  3305   001D18  11FC               	iorwf	(read_switches@once+1)& (0+255),w,b
  3306   001D1A  B4D8               	btfsc	status,2,c
  3307   001D1C  EF92  F00E         	goto	u3161
  3308   001D20  EF94  F00E         	goto	u3160
  3309   001D24                     u3161:
  3310   001D24  EFC8  F00E         	goto	l4725
  3311   001D28                     u3160:
  3312   001D28                     
  3313                           ; BSR set to: 0
  3314                           ;matrix_keypad.c: 107:             {;matrix_keypad.c: 108:                 once = 0;
  3315   001D28  0E00               	movlw	0
  3316   001D2A  6FFC               	movwf	(read_switches@once+1)& (0+255),b
  3317   001D2C  0E00               	movlw	0
  3318   001D2E  6FFB               	movwf	read_switches@once& (0+255),b
  3319   001D30                     
  3320                           ; BSR set to: 0
  3321                           ;matrix_keypad.c: 110:                 return key1 + 10;
  3322   001D30  5188               	movf	read_switches@key1& (0+255),w,b
  3323   001D32  0F0A               	addlw	10
  3324   001D34  EFC9  F00E         	goto	l484
  3325   001D38                     l4711:
  3326                           
  3327                           ; BSR set to: 0
  3328   001D38  0E20               	movlw	32
  3329   001D3A  5D81               	subwf	read_switches@long_press& (0+255),w,b
  3330   001D3C  0E03               	movlw	3
  3331   001D3E  5982               	subwfb	(read_switches@long_press+1)& (0+255),w,b
  3332   001D40  B0D8               	btfsc	status,0,c
  3333   001D42  EFA5  F00E         	goto	u3171
  3334   001D46  EFA7  F00E         	goto	u3170
  3335   001D4A                     u3171:
  3336   001D4A  EFBF  F00E         	goto	l486
  3337   001D4E                     u3170:
  3338   001D4E                     
  3339                           ; BSR set to: 0
  3340   001D4E  5181               	movf	read_switches@long_press& (0+255),w,b
  3341   001D50  1182               	iorwf	(read_switches@long_press+1)& (0+255),w,b
  3342   001D52  B4D8               	btfsc	status,2,c
  3343   001D54  EFAE  F00E         	goto	u3181
  3344   001D58  EFB0  F00E         	goto	u3180
  3345   001D5C                     u3181:
  3346   001D5C  EFBF  F00E         	goto	l486
  3347   001D60                     u3180:
  3348   001D60                     
  3349                           ; BSR set to: 0
  3350   001D60  2988               	incf	read_switches@key1& (0+255),w,b
  3351   001D62  A4D8               	btfss	status,2,c
  3352   001D64  EFB6  F00E         	goto	u3191
  3353   001D68  EFB8  F00E         	goto	u3190
  3354   001D6C                     u3191:
  3355   001D6C  EFBF  F00E         	goto	l486
  3356   001D70                     u3190:
  3357   001D70                     
  3358                           ; BSR set to: 0
  3359                           ;matrix_keypad.c: 114:         {;matrix_keypad.c: 115:             long_press = 0;
  3360   001D70  0E00               	movlw	0
  3361   001D72  6F82               	movwf	(read_switches@long_press+1)& (0+255),b
  3362   001D74  0E00               	movlw	0
  3363   001D76  6F81               	movwf	read_switches@long_press& (0+255),b
  3364                           
  3365                           ;matrix_keypad.c: 116:             return pre_key1;
  3366   001D78  5187               	movf	read_switches@pre_key1& (0+255),w,b
  3367   001D7A  EFC9  F00E         	goto	l484
  3368   001D7E                     l486:
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;matrix_keypad.c: 119:         {;matrix_keypad.c: 120:             pre_key1 = 0xFF;
  3372   001D7E  6987               	setf	read_switches@pre_key1& (0+255),b
  3373   001D80                     
  3374                           ; BSR set to: 0
  3375                           ;matrix_keypad.c: 121:             long_press = 0;
  3376   001D80  0E00               	movlw	0
  3377   001D82  6F82               	movwf	(read_switches@long_press+1)& (0+255),b
  3378   001D84  0E00               	movlw	0
  3379   001D86  6F81               	movwf	read_switches@long_press& (0+255),b
  3380                           
  3381                           ;matrix_keypad.c: 122:             once = 1;
  3382   001D88  0E00               	movlw	0
  3383   001D8A  6FFC               	movwf	(read_switches@once+1)& (0+255),b
  3384   001D8C  0E01               	movlw	1
  3385   001D8E  6FFB               	movwf	read_switches@once& (0+255),b
  3386   001D90                     l4725:
  3387                           
  3388                           ;matrix_keypad.c: 125:     return 0xFF;
  3389   001D90  0EFF               	movlw	255
  3390   001D92                     l484:
  3391   001D92  0012               	return		;funcret
  3392   001D94                     __end_of_read_switches:
  3393                           	callstack 0
  3394                           
  3395 ;; *************** function _scan_key *****************
  3396 ;; Defined at:
  3397 ;;		line 25 in file "matrix_keypad.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;		None
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      unsigned char 
  3404 ;; Registers used:
  3405 ;;		wreg
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3411 ;;      Params:         0       0       0       0       0       0       0
  3412 ;;      Locals:         0       0       0       0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0       0       0
  3414 ;;      Totals:         0       0       0       0       0       0       0
  3415 ;;Total ram usage:        0 bytes
  3416 ;; Hardware stack levels used: 1
  3417 ;; Hardware stack levels required when called: 2
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_read_switches
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text4
  3426   001A0A                     __ptext4:
  3427                           	callstack 0
  3428   001A0A                     _scan_key:
  3429                           	callstack 27
  3430   001A0A                     
  3431                           ;matrix_keypad.c: 27:  PORTBbits.RB5 = 0;
  3432   001A0A  9A81               	bcf	129,5,c	;volatile
  3433                           
  3434                           ;matrix_keypad.c: 28:  PORTBbits.RB6 = 1;
  3435   001A0C  8C81               	bsf	129,6,c	;volatile
  3436                           
  3437                           ;matrix_keypad.c: 29:  PORTBbits.RB7 = 1;
  3438   001A0E  8E81               	bsf	129,7,c	;volatile
  3439                           
  3440                           ;matrix_keypad.c: 31:  if (PORTBbits.RB1 == 0)
  3441   001A10  B281               	btfsc	129,1,c	;volatile
  3442   001A12  EF0D  F00D         	goto	u2771
  3443   001A16  EF0F  F00D         	goto	u2770
  3444   001A1A                     u2771:
  3445   001A1A  EF12  F00D         	goto	l449
  3446   001A1E                     u2770:
  3447   001A1E                     
  3448                           ;matrix_keypad.c: 32:  {;matrix_keypad.c: 33:   return 1;
  3449   001A1E  0E01               	movlw	1
  3450   001A20  EF88  F00D         	goto	l450
  3451   001A24                     l449:
  3452   001A24  B481               	btfsc	129,2,c	;volatile
  3453   001A26  EF17  F00D         	goto	u2781
  3454   001A2A  EF19  F00D         	goto	u2780
  3455   001A2E                     u2781:
  3456   001A2E  EF1C  F00D         	goto	l452
  3457   001A32                     u2780:
  3458   001A32                     
  3459                           ;matrix_keypad.c: 36:  {;matrix_keypad.c: 37:   return 4;
  3460   001A32  0E04               	movlw	4
  3461   001A34  EF88  F00D         	goto	l450
  3462   001A38                     l452:
  3463   001A38  B681               	btfsc	129,3,c	;volatile
  3464   001A3A  EF21  F00D         	goto	u2791
  3465   001A3E  EF23  F00D         	goto	u2790
  3466   001A42                     u2791:
  3467   001A42  EF26  F00D         	goto	l454
  3468   001A46                     u2790:
  3469   001A46                     
  3470                           ;matrix_keypad.c: 40:  {;matrix_keypad.c: 41:   return 7;
  3471   001A46  0E07               	movlw	7
  3472   001A48  EF88  F00D         	goto	l450
  3473   001A4C                     l454:
  3474   001A4C  B881               	btfsc	129,4,c	;volatile
  3475   001A4E  EF2B  F00D         	goto	u2801
  3476   001A52  EF2D  F00D         	goto	u2800
  3477   001A56                     u2801:
  3478   001A56  EF30  F00D         	goto	l451
  3479   001A5A                     u2800:
  3480   001A5A                     
  3481                           ;matrix_keypad.c: 44:  {;matrix_keypad.c: 45:   return 10;
  3482   001A5A  0E0A               	movlw	10
  3483   001A5C  EF88  F00D         	goto	l450
  3484   001A60                     l451:
  3485                           
  3486                           ;matrix_keypad.c: 48:  PORTBbits.RB5 = 1;
  3487   001A60  8A81               	bsf	129,5,c	;volatile
  3488                           
  3489                           ;matrix_keypad.c: 49:  PORTBbits.RB6 = 0;
  3490   001A62  9C81               	bcf	129,6,c	;volatile
  3491                           
  3492                           ;matrix_keypad.c: 50:  PORTBbits.RB7 = 1;
  3493   001A64  8E81               	bsf	129,7,c	;volatile
  3494                           
  3495                           ;matrix_keypad.c: 52:  if (PORTBbits.RB1 == 0)
  3496   001A66  B281               	btfsc	129,1,c	;volatile
  3497   001A68  EF38  F00D         	goto	u2811
  3498   001A6C  EF3A  F00D         	goto	u2810
  3499   001A70                     u2811:
  3500   001A70  EF3D  F00D         	goto	l457
  3501   001A74                     u2810:
  3502   001A74                     
  3503                           ;matrix_keypad.c: 53:  {;matrix_keypad.c: 54:   return 2;
  3504   001A74  0E02               	movlw	2
  3505   001A76  EF88  F00D         	goto	l450
  3506   001A7A                     l457:
  3507   001A7A  B481               	btfsc	129,2,c	;volatile
  3508   001A7C  EF42  F00D         	goto	u2821
  3509   001A80  EF44  F00D         	goto	u2820
  3510   001A84                     u2821:
  3511   001A84  EF47  F00D         	goto	l459
  3512   001A88                     u2820:
  3513   001A88                     
  3514                           ;matrix_keypad.c: 57:  {;matrix_keypad.c: 58:   return 5;
  3515   001A88  0E05               	movlw	5
  3516   001A8A  EF88  F00D         	goto	l450
  3517   001A8E                     l459:
  3518   001A8E  B681               	btfsc	129,3,c	;volatile
  3519   001A90  EF4C  F00D         	goto	u2831
  3520   001A94  EF4E  F00D         	goto	u2830
  3521   001A98                     u2831:
  3522   001A98  EF51  F00D         	goto	l461
  3523   001A9C                     u2830:
  3524   001A9C                     
  3525                           ;matrix_keypad.c: 61:  {;matrix_keypad.c: 62:   return 8;
  3526   001A9C  0E08               	movlw	8
  3527   001A9E  EF88  F00D         	goto	l450
  3528   001AA2                     l461:
  3529   001AA2  B881               	btfsc	129,4,c	;volatile
  3530   001AA4  EF56  F00D         	goto	u2841
  3531   001AA8  EF58  F00D         	goto	u2840
  3532   001AAC                     u2841:
  3533   001AAC  EF5B  F00D         	goto	l458
  3534   001AB0                     u2840:
  3535   001AB0                     
  3536                           ;matrix_keypad.c: 65:  {;matrix_keypad.c: 66:   return 11;
  3537   001AB0  0E0B               	movlw	11
  3538   001AB2  EF88  F00D         	goto	l450
  3539   001AB6                     l458:
  3540                           
  3541                           ;matrix_keypad.c: 69:  PORTBbits.RB5 = 1;
  3542   001AB6  8A81               	bsf	129,5,c	;volatile
  3543                           
  3544                           ;matrix_keypad.c: 70:  PORTBbits.RB6 = 1;
  3545   001AB8  8C81               	bsf	129,6,c	;volatile
  3546                           
  3547                           ;matrix_keypad.c: 71:  PORTBbits.RB7 = 0;
  3548   001ABA  9E81               	bcf	129,7,c	;volatile
  3549                           
  3550                           ;matrix_keypad.c: 73:  PORTBbits.RB7 = 0;
  3551   001ABC  9E81               	bcf	129,7,c	;volatile
  3552                           
  3553                           ;matrix_keypad.c: 75:  if (PORTBbits.RB1 == 0)
  3554   001ABE  B281               	btfsc	129,1,c	;volatile
  3555   001AC0  EF64  F00D         	goto	u2851
  3556   001AC4  EF66  F00D         	goto	u2850
  3557   001AC8                     u2851:
  3558   001AC8  EF69  F00D         	goto	l464
  3559   001ACC                     u2850:
  3560   001ACC                     
  3561                           ;matrix_keypad.c: 76:  {;matrix_keypad.c: 77:   return 3;
  3562   001ACC  0E03               	movlw	3
  3563   001ACE  EF88  F00D         	goto	l450
  3564   001AD2                     l464:
  3565   001AD2  B481               	btfsc	129,2,c	;volatile
  3566   001AD4  EF6E  F00D         	goto	u2861
  3567   001AD8  EF70  F00D         	goto	u2860
  3568   001ADC                     u2861:
  3569   001ADC  EF73  F00D         	goto	l466
  3570   001AE0                     u2860:
  3571   001AE0                     
  3572                           ;matrix_keypad.c: 80:  {;matrix_keypad.c: 81:   return 6;
  3573   001AE0  0E06               	movlw	6
  3574   001AE2  EF88  F00D         	goto	l450
  3575   001AE6                     l466:
  3576   001AE6  B681               	btfsc	129,3,c	;volatile
  3577   001AE8  EF78  F00D         	goto	u2871
  3578   001AEC  EF7A  F00D         	goto	u2870
  3579   001AF0                     u2871:
  3580   001AF0  EF7D  F00D         	goto	l468
  3581   001AF4                     u2870:
  3582   001AF4                     
  3583                           ;matrix_keypad.c: 84:  {;matrix_keypad.c: 85:   return 9;
  3584   001AF4  0E09               	movlw	9
  3585   001AF6  EF88  F00D         	goto	l450
  3586   001AFA                     l468:
  3587   001AFA  B881               	btfsc	129,4,c	;volatile
  3588   001AFC  EF82  F00D         	goto	u2881
  3589   001B00  EF84  F00D         	goto	u2880
  3590   001B04                     u2881:
  3591   001B04  EF87  F00D         	goto	l467
  3592   001B08                     u2880:
  3593   001B08                     
  3594                           ;matrix_keypad.c: 88:  {;matrix_keypad.c: 89:   return 12;
  3595   001B08  0E0C               	movlw	12
  3596   001B0A  EF88  F00D         	goto	l450
  3597   001B0E                     l467:
  3598   001B0E                     
  3599                           ;matrix_keypad.c: 92:  return 0xFF;
  3600   001B0E  0EFF               	movlw	255
  3601   001B10                     l450:
  3602   001B10  0012               	return		;funcret
  3603   001B12                     __end_of_scan_key:
  3604                           	callstack 0
  3605                           
  3606 ;; *************** function _read_adc *****************
  3607 ;; Defined at:
  3608 ;;		line 49 in file "adc.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  channel         1    wreg     unsigned char 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  channel         1   11[COMRAM] unsigned char 
  3613 ;;  reg_val         2    9[COMRAM] unsigned short 
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  2    5[COMRAM] unsigned short 
  3616 ;; Registers used:
  3617 ;;		wreg, status,2, status,0
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3623 ;;      Params:         2       0       0       0       0       0       0
  3624 ;;      Locals:         3       0       0       0       0       0       0
  3625 ;;      Temps:          2       0       0       0       0       0       0
  3626 ;;      Totals:         7       0       0       0       0       0       0
  3627 ;;Total ram usage:        7 bytes
  3628 ;; Hardware stack levels used: 1
  3629 ;; Hardware stack levels required when called: 2
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_main
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text5
  3638   002654                     __ptext5:
  3639                           	callstack 0
  3640   002654                     _read_adc:
  3641                           	callstack 28
  3642                           
  3643                           ;incstack = 0
  3644                           ;read_adc@channel stored from wreg
  3645   002654  6E0C               	movwf	read_adc@channel^0,c
  3646   002656                     
  3647                           ;adc.c: 49: unsigned short read_adc(unsigned char channel);adc.c: 50: {;adc.c: 51:  unsi
      +                          gned short reg_val;;adc.c: 54:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
  3648   002656  C00C  F008         	movff	read_adc@channel,??_read_adc
  3649   00265A  90D8               	bcf	status,0,c
  3650   00265C  3608               	rlcf	??_read_adc^0,f,c
  3651   00265E  90D8               	bcf	status,0,c
  3652   002660  3608               	rlcf	??_read_adc^0,f,c
  3653   002662  50C2               	movf	194,w,c	;volatile
  3654   002664  0BC3               	andlw	195
  3655   002666  1008               	iorwf	??_read_adc^0,w,c
  3656   002668  6EC2               	movwf	194,c	;volatile
  3657   00266A                     
  3658                           ;adc.c: 57:  GO = 1;
  3659   00266A  82C2               	bsf	4034,1,c	;volatile
  3660   00266C                     l956:
  3661   00266C  B2C2               	btfsc	4034,1,c	;volatile
  3662   00266E  EF3B  F013         	goto	u3121
  3663   002672  EF3D  F013         	goto	u3120
  3664   002676                     u3121:
  3665   002676  EF36  F013         	goto	l956
  3666   00267A                     u3120:
  3667   00267A                     
  3668                           ;adc.c: 59:  reg_val = (ADRESH << 8) | ADRESL;
  3669   00267A  50C3               	movf	195,w,c	;volatile
  3670   00267C  CFC4 F008          	movff	4036,??_read_adc	;volatile
  3671   002680  6A09               	clrf	(??_read_adc+1)^0,c
  3672   002682  C008  F009         	movff	??_read_adc,??_read_adc+1
  3673   002686  6A08               	clrf	??_read_adc^0,c
  3674   002688  1008               	iorwf	??_read_adc^0,w,c
  3675   00268A  6E0A               	movwf	read_adc@reg_val^0,c
  3676   00268C  5009               	movf	(??_read_adc+1)^0,w,c
  3677   00268E  6E0B               	movwf	(read_adc@reg_val+1)^0,c
  3678   002690                     
  3679                           ;adc.c: 61:  return reg_val;
  3680   002690  C00A  F006         	movff	read_adc@reg_val,?_read_adc
  3681   002694  C00B  F007         	movff	read_adc@reg_val+1,?_read_adc+1
  3682   002698  0012               	return		;funcret
  3683   00269A                     __end_of_read_adc:
  3684                           	callstack 0
  3685                           
  3686 ;; *************** function _password *****************
  3687 ;; Defined at:
  3688 ;;		line 60 in file "password.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  key             1    wreg     unsigned char 
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;  key             1   70[COMRAM] unsigned char 
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  1    wreg      void 
  3695 ;; Registers used:
  3696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3702 ;;      Params:         0       0       0       0       0       0       0
  3703 ;;      Locals:         1       0       0       0       0       0       0
  3704 ;;      Temps:          0       0       0       0       0       0       0
  3705 ;;      Totals:         1       0       0       0       0       0       0
  3706 ;;Total ram usage:        1 bytes
  3707 ;; Hardware stack levels used: 1
  3708 ;; Hardware stack levels required when called: 10
  3709 ;; This function calls:
  3710 ;;		_addtoarray
  3711 ;;		_check_password
  3712 ;;		_clcd_print
  3713 ;;		_sprintf
  3714 ;; This function is called by:
  3715 ;;		_main
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           	psect	text6
  3720   000E5A                     __ptext6:
  3721                           	callstack 0
  3722   000E5A                     _password:
  3723                           	callstack 20
  3724                           
  3725                           ;incstack = 0
  3726                           ;password@key stored from wreg
  3727   000E5A  6E47               	movwf	password@key^0,c
  3728   000E5C                     
  3729                           ;password.c: 60: void password(char key);password.c: 61: {;password.c: 63:     if(key ==
      +                           33)
  3730   000E5C  0E21               	movlw	33
  3731   000E5E  1847               	xorwf	password@key^0,w,c
  3732   000E60  A4D8               	btfss	status,2,c
  3733   000E62  EF35  F007         	goto	u4771
  3734   000E66  EF37  F007         	goto	u4770
  3735   000E6A                     u4771:
  3736   000E6A  EF3B  F007         	goto	l5993
  3737   000E6E                     u4770:
  3738   000E6E                     l5989:
  3739                           
  3740                           ;password.c: 64:     {;password.c: 65:         ind = 0;
  3741   000E6E  0E00               	movlw	0
  3742   000E70  6E57               	movwf	_ind^0,c
  3743   000E72  EF56  F008         	goto	l643
  3744   000E76                     l5993:
  3745                           
  3746                           ;password.c: 68:     if(attempt <= 3)
  3747   000E76  0E04               	movlw	4
  3748   000E78  0100               	movlb	0	; () banked
  3749   000E7A  61FD               	cpfslt	_attempt& (0+255),b
  3750   000E7C  EF42  F007         	goto	u4781
  3751   000E80  EF44  F007         	goto	u4780
  3752   000E84                     u4781:
  3753   000E84  EF1E  F008         	goto	l6063
  3754   000E88                     u4780:
  3755   000E88                     
  3756                           ; BSR set to: 0
  3757                           ;password.c: 69:     {;password.c: 71:         clcd_print("Enter Password : ", (0x80 + (
      +                          0)));
  3758   000E88  0EF4               	movlw	low STR_111
  3759   000E8A  6E08               	movwf	clcd_print@data^0,c
  3760   000E8C  0E2D               	movlw	high STR_111
  3761   000E8E  6E09               	movwf	(clcd_print@data+1)^0,c
  3762   000E90  0E80               	movlw	128
  3763   000E92  6E0A               	movwf	clcd_print@addr^0,c
  3764   000E94  EC1C  F012         	call	_clcd_print	;wreg free
  3765   000E98                     
  3766                           ;password.c: 73:         if(flag)
  3767   000E98  5059               	movf	_flag^0,w,c
  3768   000E9A  B4D8               	btfsc	status,2,c
  3769   000E9C  EF52  F007         	goto	u4791
  3770   000EA0  EF54  F007         	goto	u4790
  3771   000EA4                     u4791:
  3772   000EA4  EF5F  F007         	goto	l6001
  3773   000EA8                     u4790:
  3774   000EA8                     
  3775                           ;password.c: 74:         {;password.c: 75:             clcd_print("_", (0xC0 + (ind)));
  3776   000EA8  0EFD               	movlw	low STR_12
  3777   000EAA  6E08               	movwf	clcd_print@data^0,c
  3778   000EAC  0E2F               	movlw	high STR_12
  3779   000EAE  6E09               	movwf	(clcd_print@data+1)^0,c
  3780   000EB0  5057               	movf	_ind^0,w,c
  3781   000EB2  0FC0               	addlw	192
  3782   000EB4  6E0A               	movwf	clcd_print@addr^0,c
  3783   000EB6  EC1C  F012         	call	_clcd_print	;wreg free
  3784                           
  3785                           ;password.c: 76:         }
  3786   000EBA  EF68  F007         	goto	l6003
  3787   000EBE                     l6001:
  3788                           
  3789                           ;password.c: 78:         {;password.c: 79:             clcd_print(" ", (0xC0 + (ind)));
  3790   000EBE  0E16               	movlw	low (STR_15+16)
  3791   000EC0  6E08               	movwf	clcd_print@data^0,c
  3792   000EC2  0E2E               	movlw	high (STR_15+16)
  3793   000EC4  6E09               	movwf	(clcd_print@data+1)^0,c
  3794   000EC6  5057               	movf	_ind^0,w,c
  3795   000EC8  0FC0               	addlw	192
  3796   000ECA  6E0A               	movwf	clcd_print@addr^0,c
  3797   000ECC  EC1C  F012         	call	_clcd_print	;wreg free
  3798   000ED0                     l6003:
  3799                           
  3800                           ;password.c: 82:         addtoarray(key);
  3801   000ED0  5047               	movf	password@key^0,w,c
  3802   000ED2  ECB3  F012         	call	_addtoarray
  3803   000ED6                     
  3804                           ;password.c: 85:         if(ind == 4)
  3805   000ED6  0E04               	movlw	4
  3806   000ED8  1857               	xorwf	_ind^0,w,c
  3807   000EDA  A4D8               	btfss	status,2,c
  3808   000EDC  EF72  F007         	goto	u4801
  3809   000EE0  EF74  F007         	goto	u4800
  3810   000EE4                     u4801:
  3811   000EE4  EF56  F008         	goto	l643
  3812   000EE8                     u4800:
  3813   000EE8                     
  3814                           ;password.c: 86:         {;password.c: 88:             if(check_password())
  3815   000EE8  ECDC  F012         	call	_check_password	;wreg free
  3816   000EEC  0900               	iorlw	0
  3817   000EEE  B4D8               	btfsc	status,2,c
  3818   000EF0  EF7C  F007         	goto	u4811
  3819   000EF4  EF7E  F007         	goto	u4810
  3820   000EF8                     u4811:
  3821   000EF8  EFB7  F007         	goto	l6031
  3822   000EFC                     u4810:
  3823   000EFC                     
  3824                           ;password.c: 89:             {;password.c: 91:                 clcd_print("   MAIN MENU 
      +                             ", (0x80 + (0)));
  3825   000EFC  0EB5               	movlw	low STR_114
  3826   000EFE  6E08               	movwf	clcd_print@data^0,c
  3827   000F00  0E2E               	movlw	high STR_114
  3828   000F02  6E09               	movwf	(clcd_print@data+1)^0,c
  3829   000F04  0E80               	movlw	128
  3830   000F06  6E0A               	movwf	clcd_print@addr^0,c
  3831   000F08  EC1C  F012         	call	_clcd_print	;wreg free
  3832                           
  3833                           ;password.c: 92:                 clcd_print("   ---------    ", (0xC0 + (0)));
  3834   000F0C  0E93               	movlw	low STR_115
  3835   000F0E  6E08               	movwf	clcd_print@data^0,c
  3836   000F10  0E2E               	movlw	high STR_115
  3837   000F12  6E09               	movwf	(clcd_print@data+1)^0,c
  3838   000F14  0EC0               	movlw	192
  3839   000F16  6E0A               	movwf	clcd_print@addr^0,c
  3840   000F18  EC1C  F012         	call	_clcd_print	;wreg free
  3841   000F1C                     
  3842                           ;password.c: 94:                 TMR0ON = 0;
  3843   000F1C  9ED5               	bcf	4053,7,c	;volatile
  3844   000F1E                     
  3845                           ;password.c: 95:                 sec_delay = 20000;
  3846   000F1E  0E20               	movlw	32
  3847   000F20  0100               	movlb	0	; () banked
  3848   000F22  6F70               	movwf	_sec_delay& (0+255),b
  3849   000F24  0E4E               	movlw	78
  3850   000F26  6F71               	movwf	(_sec_delay+1)& (0+255),b
  3851   000F28  0E00               	movlw	0
  3852   000F2A  6F72               	movwf	(_sec_delay+2)& (0+255),b
  3853   000F2C  0E00               	movlw	0
  3854   000F2E  6F73               	movwf	(_sec_delay+3)& (0+255),b
  3855   000F30                     
  3856                           ; BSR set to: 0
  3857                           ;password.c: 96:                 TMR0 = 6;
  3858   000F30  0E00               	movlw	0
  3859   000F32  6ED7               	movwf	215,c	;volatile
  3860   000F34  0E06               	movlw	6
  3861   000F36  6ED6               	movwf	214,c	;volatile
  3862   000F38                     
  3863                           ; BSR set to: 0
  3864                           ;password.c: 97:                 TMR0ON = 1;
  3865   000F38  8ED5               	bsf	4053,7,c	;volatile
  3866   000F3A                     l6019:
  3867                           
  3868                           ; BSR set to: 0
  3869   000F3A  5170               	movf	_sec_delay& (0+255),w,b
  3870   000F3C  1171               	iorwf	(_sec_delay+1)& (0+255),w,b
  3871   000F3E  1172               	iorwf	(_sec_delay+2)& (0+255),w,b
  3872   000F40  1173               	iorwf	(_sec_delay+3)& (0+255),w,b
  3873   000F42  A4D8               	btfss	status,2,c
  3874   000F44  EFA6  F007         	goto	u4821
  3875   000F48  EFA8  F007         	goto	u4820
  3876   000F4C                     u4821:
  3877   000F4C  EF9D  F007         	goto	l6019
  3878   000F50                     u4820:
  3879   000F50                     
  3880                           ; BSR set to: 0
  3881                           ;password.c: 100:                 main_f = 2;
  3882   000F50  0E02               	movlw	2
  3883   000F52  6F8B               	movwf	_main_f& (0+255),b
  3884   000F54                     
  3885                           ; BSR set to: 0
  3886                           ;password.c: 102:                 clcd_print("*", (0x80 + (0)));
  3887   000F54  0EFB               	movlw	low STR_10
  3888   000F56  6E08               	movwf	clcd_print@data^0,c
  3889   000F58  0E2F               	movlw	high STR_10
  3890   000F5A  6E09               	movwf	(clcd_print@data+1)^0,c
  3891   000F5C  0E80               	movlw	128
  3892   000F5E  6E0A               	movwf	clcd_print@addr^0,c
  3893   000F60  EC1C  F012         	call	_clcd_print	;wreg free
  3894   000F64                     
  3895                           ;password.c: 104:                 attempt = 1;
  3896   000F64  0E01               	movlw	1
  3897   000F66  0100               	movlb	0	; () banked
  3898   000F68  6FFD               	movwf	_attempt& (0+255),b
  3899   000F6A  EF56  F008         	goto	l643
  3900   000F6E                     l6031:
  3901                           
  3902                           ;password.c: 108:             {;password.c: 112:                 sprintf(str,"%d", 3 - a
      +                          ttempt);
  3903   000F6E  0E95               	movlw	low _str
  3904   000F70  0100               	movlb	0	; () banked
  3905   000F72  6FAF               	movwf	sprintf@s& (0+255),b
  3906   000F74  0EDD               	movlw	low STR_117
  3907   000F76  6FB0               	movwf	sprintf@fmt& (0+255),b
  3908   000F78  0E2F               	movlw	high STR_117
  3909   000F7A  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3910   000F7C  51FD               	movf	_attempt& (0+255),w,b
  3911   000F7E  0803               	sublw	3
  3912   000F80  6FB2               	movwf	(?_sprintf+3)& (0+255),b
  3913   000F82  0E00               	movlw	0
  3914   000F84  A0D8               	btfss	status,0,c
  3915   000F86  2AE8               	incf	wreg,f,c
  3916   000F88  0800               	sublw	0
  3917   000F8A  6FB3               	movwf	(?_sprintf+4)& (0+255),b
  3918   000F8C  ECD1  F013         	call	_sprintf	;wreg free
  3919   000F90                     
  3920                           ;password.c: 113:                 clcd_print("Wrong Password ", (0x80 + (0)));
  3921   000F90  0E4E               	movlw	low STR_118
  3922   000F92  6E08               	movwf	clcd_print@data^0,c
  3923   000F94  0E2F               	movlw	high STR_118
  3924   000F96  6E09               	movwf	(clcd_print@data+1)^0,c
  3925   000F98  0E80               	movlw	128
  3926   000F9A  6E0A               	movwf	clcd_print@addr^0,c
  3927   000F9C  EC1C  F012         	call	_clcd_print	;wreg free
  3928   000FA0                     
  3929                           ;password.c: 114:                 clcd_print(str, (0xC0 + (0)));
  3930   000FA0  0E95               	movlw	low _str
  3931   000FA2  6E08               	movwf	clcd_print@data^0,c
  3932   000FA4  6A09               	clrf	(clcd_print@data+1)^0,c
  3933   000FA6  0EC0               	movlw	192
  3934   000FA8  6E0A               	movwf	clcd_print@addr^0,c
  3935   000FAA  EC1C  F012         	call	_clcd_print	;wreg free
  3936   000FAE                     
  3937                           ;password.c: 115:                 clcd_print(" attempts left ", (0xC0 + (1)));
  3938   000FAE  0E5E               	movlw	low STR_119
  3939   000FB0  6E08               	movwf	clcd_print@data^0,c
  3940   000FB2  0E2F               	movlw	high STR_119
  3941   000FB4  6E09               	movwf	(clcd_print@data+1)^0,c
  3942   000FB6  0EC1               	movlw	193
  3943   000FB8  6E0A               	movwf	clcd_print@addr^0,c
  3944   000FBA  EC1C  F012         	call	_clcd_print	;wreg free
  3945   000FBE                     
  3946                           ;password.c: 118:                 TMR0ON = 0;
  3947   000FBE  9ED5               	bcf	4053,7,c	;volatile
  3948   000FC0                     
  3949                           ;password.c: 119:                 sec_delay = 20000;
  3950   000FC0  0E20               	movlw	32
  3951   000FC2  0100               	movlb	0	; () banked
  3952   000FC4  6F70               	movwf	_sec_delay& (0+255),b
  3953   000FC6  0E4E               	movlw	78
  3954   000FC8  6F71               	movwf	(_sec_delay+1)& (0+255),b
  3955   000FCA  0E00               	movlw	0
  3956   000FCC  6F72               	movwf	(_sec_delay+2)& (0+255),b
  3957   000FCE  0E00               	movlw	0
  3958   000FD0  6F73               	movwf	(_sec_delay+3)& (0+255),b
  3959   000FD2                     
  3960                           ; BSR set to: 0
  3961                           ;password.c: 120:                 TMR0 = 6;
  3962   000FD2  0E00               	movlw	0
  3963   000FD4  6ED7               	movwf	215,c	;volatile
  3964   000FD6  0E06               	movlw	6
  3965   000FD8  6ED6               	movwf	214,c	;volatile
  3966   000FDA                     
  3967                           ; BSR set to: 0
  3968                           ;password.c: 121:                 TMR0ON = 1;
  3969   000FDA  8ED5               	bsf	4053,7,c	;volatile
  3970   000FDC                     l6047:
  3971                           
  3972                           ; BSR set to: 0
  3973   000FDC  5170               	movf	_sec_delay& (0+255),w,b
  3974   000FDE  1171               	iorwf	(_sec_delay+1)& (0+255),w,b
  3975   000FE0  1172               	iorwf	(_sec_delay+2)& (0+255),w,b
  3976   000FE2  1173               	iorwf	(_sec_delay+3)& (0+255),w,b
  3977   000FE4  A4D8               	btfss	status,2,c
  3978   000FE6  EFF7  F007         	goto	u4831
  3979   000FEA  EFF9  F007         	goto	u4830
  3980   000FEE                     u4831:
  3981   000FEE  EFEE  F007         	goto	l6047
  3982   000FF2                     u4830:
  3983   000FF2                     
  3984                           ; BSR set to: 0
  3985                           ;password.c: 125:                 attempt++;
  3986   000FF2  2BFD               	incf	_attempt& (0+255),f,b
  3987   000FF4                     
  3988                           ; BSR set to: 0
  3989                           ;password.c: 126:                 if(attempt > 3)
  3990   000FF4  0E03               	movlw	3
  3991   000FF6  65FD               	cpfsgt	_attempt& (0+255),b
  3992   000FF8  EF00  F008         	goto	u4841
  3993   000FFC  EF02  F008         	goto	u4840
  3994   001000                     u4841:
  3995   001000  EF0C  F008         	goto	l6059
  3996   001004                     u4840:
  3997   001004                     
  3998                           ; BSR set to: 0
  3999                           ;password.c: 127:                 {;password.c: 128:                     TMR0ON = 0;
  4000   001004  9ED5               	bcf	4053,7,c	;volatile
  4001   001006                     
  4002                           ; BSR set to: 0
  4003                           ;password.c: 129:                     TMR0 = 6;
  4004   001006  0E00               	movlw	0
  4005   001008  6ED7               	movwf	215,c	;volatile
  4006   00100A  0E06               	movlw	6
  4007   00100C  6ED6               	movwf	214,c	;volatile
  4008   00100E                     
  4009                           ; BSR set to: 0
  4010                           ;password.c: 130:                     TMR0ON = 1;
  4011   00100E  8ED5               	bsf	4053,7,c	;volatile
  4012                           
  4013                           ;password.c: 131:                     block_time = 120;
  4014   001010  0E00               	movlw	0
  4015   001012  6F84               	movwf	(_block_time+1)& (0+255),b
  4016   001014  0E78               	movlw	120
  4017   001016  6F83               	movwf	_block_time& (0+255),b
  4018   001018                     l6059:
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;password.c: 133:                 clcd_print("                 ", (0xC0 + (0)));
  4022   001018  0E06               	movlw	low STR_15
  4023   00101A  6E08               	movwf	clcd_print@data^0,c
  4024   00101C  0E2E               	movlw	high STR_15
  4025   00101E  6E09               	movwf	(clcd_print@data+1)^0,c
  4026   001020  0EC0               	movlw	192
  4027   001022  6E0A               	movwf	clcd_print@addr^0,c
  4028   001024  EC1C  F012         	call	_clcd_print	;wreg free
  4029   001028                     
  4030                           ;password.c: 135:                 clcd_print("Enter Password : ", (0x80 + (0)));
  4031   001028  0EF4               	movlw	low STR_111
  4032   00102A  6E08               	movwf	clcd_print@data^0,c
  4033   00102C  0E2D               	movlw	high STR_111
  4034   00102E  6E09               	movwf	(clcd_print@data+1)^0,c
  4035   001030  0E80               	movlw	128
  4036   001032  6E0A               	movwf	clcd_print@addr^0,c
  4037   001034  EC1C  F012         	call	_clcd_print	;wreg free
  4038   001038  EF37  F007         	goto	l5989
  4039   00103C                     l6063:
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;password.c: 141:     {;password.c: 145:         clcd_print("USER BLOCKED    ", (0x80 + 
      +                          (0)));
  4043   00103C  0EA4               	movlw	low STR_122
  4044   00103E  6E08               	movwf	clcd_print@data^0,c
  4045   001040  0E2E               	movlw	high STR_122
  4046   001042  6E09               	movwf	(clcd_print@data+1)^0,c
  4047   001044  0E80               	movlw	128
  4048   001046  6E0A               	movwf	clcd_print@addr^0,c
  4049   001048  EC1C  F012         	call	_clcd_print	;wreg free
  4050   00104C                     
  4051                           ;password.c: 146:         sprintf(str,"For %3d seconds ", block_time);
  4052   00104C  0E95               	movlw	low _str
  4053   00104E  0100               	movlb	0	; () banked
  4054   001050  6FAF               	movwf	sprintf@s& (0+255),b
  4055   001052  0EC6               	movlw	low STR_123
  4056   001054  6FB0               	movwf	sprintf@fmt& (0+255),b
  4057   001056  0E2E               	movlw	high STR_123
  4058   001058  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  4059   00105A  C083  F0B2         	movff	_block_time,?_sprintf+3
  4060   00105E  C084  F0B3         	movff	_block_time+1,?_sprintf+4
  4061   001062  ECD1  F013         	call	_sprintf	;wreg free
  4062   001066                     
  4063                           ;password.c: 148:         clcd_print(str, (0xC0 + (0)));
  4064   001066  0E95               	movlw	low _str
  4065   001068  6E08               	movwf	clcd_print@data^0,c
  4066   00106A  6A09               	clrf	(clcd_print@data+1)^0,c
  4067   00106C  0EC0               	movlw	192
  4068   00106E  6E0A               	movwf	clcd_print@addr^0,c
  4069   001070  EC1C  F012         	call	_clcd_print	;wreg free
  4070   001074                     
  4071                           ;password.c: 150:         if(!block_time)
  4072   001074  0100               	movlb	0	; () banked
  4073   001076  5183               	movf	_block_time& (0+255),w,b
  4074   001078  1184               	iorwf	(_block_time+1)& (0+255),w,b
  4075   00107A  A4D8               	btfss	status,2,c
  4076   00107C  EF42  F008         	goto	u4851
  4077   001080  EF44  F008         	goto	u4850
  4078   001084                     u4851:
  4079   001084  EF56  F008         	goto	l643
  4080   001088                     u4850:
  4081   001088                     
  4082                           ; BSR set to: 0
  4083                           ;password.c: 151:         {;password.c: 152:             attempt = 1;
  4084   001088  0E01               	movlw	1
  4085   00108A  6FFD               	movwf	_attempt& (0+255),b
  4086                           
  4087                           ;password.c: 153:             wait = 60000;
  4088   00108C  0E60               	movlw	96
  4089   00108E  6F74               	movwf	_wait& (0+255),b
  4090   001090  0EEA               	movlw	234
  4091   001092  6F75               	movwf	(_wait+1)& (0+255),b
  4092   001094  0E00               	movlw	0
  4093   001096  6F76               	movwf	(_wait+2)& (0+255),b
  4094   001098  0E00               	movlw	0
  4095   00109A  6F77               	movwf	(_wait+3)& (0+255),b
  4096   00109C                     
  4097                           ; BSR set to: 0
  4098                           ;password.c: 154:             clcd_print("               ", (0xC0 + (0)));
  4099   00109C  0E08               	movlw	low (STR_15+2)
  4100   00109E  6E08               	movwf	clcd_print@data^0,c
  4101   0010A0  0E2E               	movlw	high (STR_15+2)
  4102   0010A2  6E09               	movwf	(clcd_print@data+1)^0,c
  4103   0010A4  0EC0               	movlw	192
  4104   0010A6  6E0A               	movwf	clcd_print@addr^0,c
  4105   0010A8  EC1C  F012         	call	_clcd_print	;wreg free
  4106   0010AC                     l643:
  4107   0010AC  0012               	return		;funcret
  4108   0010AE                     __end_of_password:
  4109                           	callstack 0
  4110                           
  4111 ;; *************** function _menu *****************
  4112 ;; Defined at:
  4113 ;;		line 22 in file "menu.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  key             1    wreg     unsigned char 
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  key             1   15[COMRAM] unsigned char 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  1    wreg      void 
  4120 ;; Registers used:
  4121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4127 ;;      Params:         0       0       0       0       0       0       0
  4128 ;;      Locals:         5       0       0       0       0       0       0
  4129 ;;      Temps:          1       0       0       0       0       0       0
  4130 ;;      Totals:         6       0       0       0       0       0       0
  4131 ;;Total ram usage:        6 bytes
  4132 ;; Hardware stack levels used: 1
  4133 ;; Hardware stack levels required when called: 4
  4134 ;; This function calls:
  4135 ;;		_clcd_print
  4136 ;; This function is called by:
  4137 ;;		_main
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           	psect	text7
  4142   0010AE                     __ptext7:
  4143                           	callstack 0
  4144   0010AE                     _menu:
  4145                           	callstack 26
  4146                           
  4147                           ;incstack = 0
  4148                           ;menu@key stored from wreg
  4149   0010AE  6E10               	movwf	menu@key^0,c
  4150   0010B0                     
  4151                           ;menu.c: 22: void menu(char key);menu.c: 23: {;menu.c: 25:     if(key == 11)
  4152   0010B0  0E0B               	movlw	11
  4153   0010B2  1810               	xorwf	menu@key^0,w,c
  4154   0010B4  A4D8               	btfss	status,2,c
  4155   0010B6  EF5F  F008         	goto	u3291
  4156   0010BA  EF61  F008         	goto	u3290
  4157   0010BE                     u3291:
  4158   0010BE  EF84  F008         	goto	l4829
  4159   0010C2                     u3290:
  4160   0010C2                     
  4161                           ;menu.c: 26:     {;menu.c: 28:         if(line == 1)
  4162   0010C2  0100               	movlb	0	; () banked
  4163   0010C4  05FE               	decf	_line& (0+255),w,b
  4164   0010C6  A4D8               	btfss	status,2,c
  4165   0010C8  EF68  F008         	goto	u3301
  4166   0010CC  EF6A  F008         	goto	u3300
  4167   0010D0                     u3301:
  4168   0010D0  EF80  F008         	goto	l545
  4169   0010D4                     u3300:
  4170   0010D4                     
  4171                           ; BSR set to: 0
  4172                           ;menu.c: 29:         {;menu.c: 30:             item_ind = item_ind == 0? 0: (item_ind - 
      +                          1);
  4173   0010D4  5056               	movf	_item_ind^0,w,c
  4174   0010D6  B4D8               	btfsc	status,2,c
  4175   0010D8  EF70  F008         	goto	u3311
  4176   0010DC  EF72  F008         	goto	u3310
  4177   0010E0                     u3311:
  4178   0010E0  EF7A  F008         	goto	l4825
  4179   0010E4                     u3310:
  4180   0010E4                     
  4181                           ; BSR set to: 0
  4182   0010E4  0EFF               	movlw	255
  4183   0010E6  2456               	addwf	_item_ind^0,w,c
  4184   0010E8  6E0C               	movwf	_menu$511^0,c
  4185   0010EA  6A0D               	clrf	(_menu$511+1)^0,c
  4186   0010EC  0EFF               	movlw	255
  4187   0010EE  220D               	addwfc	(_menu$511+1)^0,f,c
  4188   0010F0  EF7E  F008         	goto	l4827
  4189   0010F4                     l4825:
  4190                           
  4191                           ; BSR set to: 0
  4192   0010F4  0E00               	movlw	0
  4193   0010F6  6E0D               	movwf	(_menu$511+1)^0,c
  4194   0010F8  0E00               	movlw	0
  4195   0010FA  6E0C               	movwf	_menu$511^0,c
  4196   0010FC                     l4827:
  4197                           
  4198                           ; BSR set to: 0
  4199   0010FC  C00C  F056         	movff	_menu$511,_item_ind
  4200   001100                     l545:
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;menu.c: 32:         line = 1;
  4204   001100  0E01               	movlw	1
  4205   001102  6FFE               	movwf	_line& (0+255),b
  4206                           
  4207                           ;menu.c: 35:     }
  4208   001104  EF2A  F009         	goto	l4879
  4209   001108                     l4829:
  4210   001108  0E0C               	movlw	12
  4211   00110A  1810               	xorwf	menu@key^0,w,c
  4212   00110C  A4D8               	btfss	status,2,c
  4213   00110E  EF8B  F008         	goto	u3321
  4214   001112  EF8D  F008         	goto	u3320
  4215   001116                     u3321:
  4216   001116  EFB2  F008         	goto	l4841
  4217   00111A                     u3320:
  4218   00111A                     
  4219                           ;menu.c: 37:     {;menu.c: 38:         if(line == 2)
  4220   00111A  0E02               	movlw	2
  4221   00111C  0100               	movlb	0	; () banked
  4222   00111E  19FE               	xorwf	_line& (0+255),w,b
  4223   001120  A4D8               	btfss	status,2,c
  4224   001122  EF95  F008         	goto	u3331
  4225   001126  EF97  F008         	goto	u3330
  4226   00112A                     u3331:
  4227   00112A  EFAE  F008         	goto	l552
  4228   00112E                     u3330:
  4229   00112E                     
  4230                           ; BSR set to: 0
  4231                           ;menu.c: 39:         {;menu.c: 40:             item_ind = item_ind == 3? 3: (item_ind + 
      +                          1);
  4232   00112E  0E03               	movlw	3
  4233   001130  1856               	xorwf	_item_ind^0,w,c
  4234   001132  B4D8               	btfsc	status,2,c
  4235   001134  EF9E  F008         	goto	u3341
  4236   001138  EFA0  F008         	goto	u3340
  4237   00113C                     u3341:
  4238   00113C  EFA8  F008         	goto	l4837
  4239   001140                     u3340:
  4240   001140                     
  4241                           ; BSR set to: 0
  4242   001140  0E01               	movlw	1
  4243   001142  2456               	addwf	_item_ind^0,w,c
  4244   001144  6E0E               	movwf	_menu$512^0,c
  4245   001146  6A0F               	clrf	(_menu$512+1)^0,c
  4246   001148  0E00               	movlw	0
  4247   00114A  220F               	addwfc	(_menu$512+1)^0,f,c
  4248   00114C  EFAC  F008         	goto	l4839
  4249   001150                     l4837:
  4250                           
  4251                           ; BSR set to: 0
  4252   001150  0E00               	movlw	0
  4253   001152  6E0F               	movwf	(_menu$512+1)^0,c
  4254   001154  0E03               	movlw	3
  4255   001156  6E0E               	movwf	_menu$512^0,c
  4256   001158                     l4839:
  4257                           
  4258                           ; BSR set to: 0
  4259   001158  C00E  F056         	movff	_menu$512,_item_ind
  4260   00115C                     l552:
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;menu.c: 42:         line = 2;
  4264   00115C  0E02               	movlw	2
  4265   00115E  6FFE               	movwf	_line& (0+255),b
  4266                           
  4267                           ;menu.c: 44:     }
  4268   001160  EF2A  F009         	goto	l4879
  4269   001164                     l4841:
  4270   001164  0E15               	movlw	21
  4271   001166  1810               	xorwf	menu@key^0,w,c
  4272   001168  A4D8               	btfss	status,2,c
  4273   00116A  EFB9  F008         	goto	u3351
  4274   00116E  EFBB  F008         	goto	u3350
  4275   001172                     u3351:
  4276   001172  EF10  F009         	goto	l4871
  4277   001176                     u3350:
  4278   001176                     
  4279                           ;menu.c: 46:     {;menu.c: 47:         clcd_print("MENU ENTER..    ", (0x80 + (0)));
  4280   001176  0ED7               	movlw	low STR_93
  4281   001178  6E08               	movwf	clcd_print@data^0,c
  4282   00117A  0E2E               	movlw	high STR_93
  4283   00117C  6E09               	movwf	(clcd_print@data+1)^0,c
  4284   00117E  0E80               	movlw	128
  4285   001180  6E0A               	movwf	clcd_print@addr^0,c
  4286   001182  EC1C  F012         	call	_clcd_print	;wreg free
  4287   001186                     
  4288                           ;menu.c: 48:         menu_f = item_ind + line - 1;
  4289   001186  5056               	movf	_item_ind^0,w,c
  4290   001188  0100               	movlb	0	; () banked
  4291   00118A  25FE               	addwf	_line& (0+255),w,b
  4292   00118C  6E0B               	movwf	??_menu^0,c
  4293   00118E  040B               	decf	??_menu^0,w,c
  4294   001190  6F8A               	movwf	_menu_f& (0+255),b
  4295   001192                     
  4296                           ; BSR set to: 0
  4297                           ;menu.c: 49:         clcd_print("                ", (0xC0 + (0)));
  4298   001192  0E07               	movlw	low (STR_15+1)
  4299   001194  6E08               	movwf	clcd_print@data^0,c
  4300   001196  0E2E               	movlw	high (STR_15+1)
  4301   001198  6E09               	movwf	(clcd_print@data+1)^0,c
  4302   00119A  0EC0               	movlw	192
  4303   00119C  6E0A               	movwf	clcd_print@addr^0,c
  4304   00119E  EC1C  F012         	call	_clcd_print	;wreg free
  4305   0011A2                     
  4306                           ;menu.c: 50:         clcd_print(menu_item[menu_f], (0xC0 + (0)));
  4307   0011A2  0100               	movlb	0	; () banked
  4308   0011A4  518A               	movf	_menu_f& (0+255),w,b
  4309   0011A6  0D02               	mullw	2
  4310   0011A8  50F3               	movf	243,w,c
  4311   0011AA  0FF1               	addlw	low _menu_item
  4312   0011AC  6ED9               	movwf	fsr2l,c
  4313   0011AE  6ADA               	clrf	fsr2h,c
  4314   0011B0  CFDE F008          	movff	postinc2,clcd_print@data
  4315   0011B4  CFDD F009          	movff	postdec2,clcd_print@data+1
  4316   0011B8  0EC0               	movlw	192
  4317   0011BA  6E0A               	movwf	clcd_print@addr^0,c
  4318   0011BC  EC1C  F012         	call	_clcd_print	;wreg free
  4319   0011C0                     
  4320                           ;menu.c: 51:         main_f = 3;
  4321   0011C0  0E03               	movlw	3
  4322   0011C2  0100               	movlb	0	; () banked
  4323   0011C4  6F8B               	movwf	_main_f& (0+255),b
  4324   0011C6                     
  4325                           ; BSR set to: 0
  4326                           ;menu.c: 54:         p = s;
  4327   0011C6  C058  F08F         	movff	_s,_p
  4328   0011CA                     
  4329                           ; BSR set to: 0
  4330                           ;menu.c: 57:         TMR0ON = 0;
  4331   0011CA  9ED5               	bcf	4053,7,c	;volatile
  4332   0011CC                     
  4333                           ; BSR set to: 0
  4334                           ;menu.c: 58:         sec_delay = 20000;
  4335   0011CC  0E20               	movlw	32
  4336   0011CE  6F70               	movwf	_sec_delay& (0+255),b
  4337   0011D0  0E4E               	movlw	78
  4338   0011D2  6F71               	movwf	(_sec_delay+1)& (0+255),b
  4339   0011D4  0E00               	movlw	0
  4340   0011D6  6F72               	movwf	(_sec_delay+2)& (0+255),b
  4341   0011D8  0E00               	movlw	0
  4342   0011DA  6F73               	movwf	(_sec_delay+3)& (0+255),b
  4343   0011DC                     
  4344                           ; BSR set to: 0
  4345                           ;menu.c: 59:         TMR0 = 6;
  4346   0011DC  0E00               	movlw	0
  4347   0011DE  6ED7               	movwf	215,c	;volatile
  4348   0011E0  0E06               	movlw	6
  4349   0011E2  6ED6               	movwf	214,c	;volatile
  4350   0011E4                     
  4351                           ; BSR set to: 0
  4352                           ;menu.c: 60:         TMR0ON = 1;
  4353   0011E4  8ED5               	bsf	4053,7,c	;volatile
  4354   0011E6                     l4863:
  4355                           
  4356                           ; BSR set to: 0
  4357   0011E6  5170               	movf	_sec_delay& (0+255),w,b
  4358   0011E8  1171               	iorwf	(_sec_delay+1)& (0+255),w,b
  4359   0011EA  1172               	iorwf	(_sec_delay+2)& (0+255),w,b
  4360   0011EC  1173               	iorwf	(_sec_delay+3)& (0+255),w,b
  4361   0011EE  A4D8               	btfss	status,2,c
  4362   0011F0  EFFC  F008         	goto	u3361
  4363   0011F4  EFFE  F008         	goto	u3360
  4364   0011F8                     u3361:
  4365   0011F8  EFF3  F008         	goto	l4863
  4366   0011FC                     u3360:
  4367   0011FC                     
  4368                           ; BSR set to: 0
  4369                           ;menu.c: 64:         clcd_print("                ", (0x80 + (0)));
  4370   0011FC  0E07               	movlw	low (STR_15+1)
  4371   0011FE  6E08               	movwf	clcd_print@data^0,c
  4372   001200  0E2E               	movlw	high (STR_15+1)
  4373   001202  6E09               	movwf	(clcd_print@data+1)^0,c
  4374   001204  0E80               	movlw	128
  4375   001206  6E0A               	movwf	clcd_print@addr^0,c
  4376   001208  EC1C  F012         	call	_clcd_print	;wreg free
  4377                           
  4378                           ;menu.c: 65:         clcd_print("                ", (0xC0 + (0)));
  4379   00120C  0E07               	movlw	low (STR_15+1)
  4380   00120E  6E08               	movwf	clcd_print@data^0,c
  4381   001210  0E2E               	movlw	high (STR_15+1)
  4382   001212  6E09               	movwf	(clcd_print@data+1)^0,c
  4383   001214  0EC0               	movlw	192
  4384   001216  6E0A               	movwf	clcd_print@addr^0,c
  4385   001218  EC1C  F012         	call	_clcd_print	;wreg free
  4386   00121C  EF7D  F009         	goto	l562
  4387   001220                     l4871:
  4388   001220  0E16               	movlw	22
  4389   001222  1810               	xorwf	menu@key^0,w,c
  4390   001224  A4D8               	btfss	status,2,c
  4391   001226  EF17  F009         	goto	u3371
  4392   00122A  EF19  F009         	goto	u3370
  4393   00122E                     u3371:
  4394   00122E  EF2A  F009         	goto	l557
  4395   001232                     u3370:
  4396   001232  0100               	movlb	0	; () banked
  4397   001234  518C               	movf	_back_f& (0+255),w,b
  4398   001236  A4D8               	btfss	status,2,c
  4399   001238  EF20  F009         	goto	u3381
  4400   00123C  EF22  F009         	goto	u3380
  4401   001240                     u3381:
  4402   001240  EF2A  F009         	goto	l557
  4403   001244                     u3380:
  4404   001244                     
  4405                           ; BSR set to: 0
  4406                           ;menu.c: 71:     {;menu.c: 72:         main_f = 0;
  4407   001244  0E00               	movlw	0
  4408   001246  6F8B               	movwf	_main_f& (0+255),b
  4409                           
  4410                           ;menu.c: 73:         item_ind = 0;
  4411   001248  0E00               	movlw	0
  4412   00124A  6E56               	movwf	_item_ind^0,c
  4413                           
  4414                           ;menu.c: 74:         line = 1;
  4415   00124C  0E01               	movlw	1
  4416   00124E  6FFE               	movwf	_line& (0+255),b
  4417   001250  EF7D  F009         	goto	l562
  4418   001254                     l557:
  4419   001254                     l4879:
  4420                           
  4421                           ;menu.c: 77:     if(key != 22)
  4422   001254  0E16               	movlw	22
  4423   001256  1810               	xorwf	menu@key^0,w,c
  4424   001258  B4D8               	btfsc	status,2,c
  4425   00125A  EF31  F009         	goto	u3391
  4426   00125E  EF33  F009         	goto	u3390
  4427   001262                     u3391:
  4428   001262  EF36  F009         	goto	l4883
  4429   001266                     u3390:
  4430   001266                     
  4431                           ;menu.c: 78:     {;menu.c: 79:         back_f = 0;
  4432   001266  0E00               	movlw	0
  4433   001268  0100               	movlb	0	; () banked
  4434   00126A  6F8C               	movwf	_back_f& (0+255),b
  4435   00126C                     l4883:
  4436                           
  4437                           ;menu.c: 82:     if(line == 1)
  4438   00126C  0100               	movlb	0	; () banked
  4439   00126E  05FE               	decf	_line& (0+255),w,b
  4440   001270  A4D8               	btfss	status,2,c
  4441   001272  EF3D  F009         	goto	u3401
  4442   001276  EF3F  F009         	goto	u3400
  4443   00127A                     u3401:
  4444   00127A  EF51  F009         	goto	l4887
  4445   00127E                     u3400:
  4446   00127E                     
  4447                           ; BSR set to: 0
  4448                           ;menu.c: 83:     {;menu.c: 84:         clcd_print("*",(0x80 + (0)));
  4449   00127E  0EFB               	movlw	low STR_10
  4450   001280  6E08               	movwf	clcd_print@data^0,c
  4451   001282  0E2F               	movlw	high STR_10
  4452   001284  6E09               	movwf	(clcd_print@data+1)^0,c
  4453   001286  0E80               	movlw	128
  4454   001288  6E0A               	movwf	clcd_print@addr^0,c
  4455   00128A  EC1C  F012         	call	_clcd_print	;wreg free
  4456                           
  4457                           ;menu.c: 85:         clcd_print(" ",(0xC0 + (0)));
  4458   00128E  0E16               	movlw	low (STR_15+16)
  4459   001290  6E08               	movwf	clcd_print@data^0,c
  4460   001292  0E2E               	movlw	high (STR_15+16)
  4461   001294  6E09               	movwf	(clcd_print@data+1)^0,c
  4462   001296  0EC0               	movlw	192
  4463   001298  6E0A               	movwf	clcd_print@addr^0,c
  4464   00129A  EC1C  F012         	call	_clcd_print	;wreg free
  4465                           
  4466                           ;menu.c: 86:     }
  4467   00129E  EF61  F009         	goto	l4889
  4468   0012A2                     l4887:
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;menu.c: 88:     {;menu.c: 89:         clcd_print(" ",(0x80 + (0)));
  4472   0012A2  0E16               	movlw	low (STR_15+16)
  4473   0012A4  6E08               	movwf	clcd_print@data^0,c
  4474   0012A6  0E2E               	movlw	high (STR_15+16)
  4475   0012A8  6E09               	movwf	(clcd_print@data+1)^0,c
  4476   0012AA  0E80               	movlw	128
  4477   0012AC  6E0A               	movwf	clcd_print@addr^0,c
  4478   0012AE  EC1C  F012         	call	_clcd_print	;wreg free
  4479                           
  4480                           ;menu.c: 90:         clcd_print("*",(0xC0 + (0)));
  4481   0012B2  0EFB               	movlw	low STR_10
  4482   0012B4  6E08               	movwf	clcd_print@data^0,c
  4483   0012B6  0E2F               	movlw	high STR_10
  4484   0012B8  6E09               	movwf	(clcd_print@data+1)^0,c
  4485   0012BA  0EC0               	movlw	192
  4486   0012BC  6E0A               	movwf	clcd_print@addr^0,c
  4487   0012BE  EC1C  F012         	call	_clcd_print	;wreg free
  4488   0012C2                     l4889:
  4489                           
  4490                           ;menu.c: 92:     clcd_print(menu_item[item_ind], (0x80 + (1)));
  4491   0012C2  5056               	movf	_item_ind^0,w,c
  4492   0012C4  0D02               	mullw	2
  4493   0012C6  50F3               	movf	243,w,c
  4494   0012C8  0FF1               	addlw	low _menu_item
  4495   0012CA  6ED9               	movwf	fsr2l,c
  4496   0012CC  6ADA               	clrf	fsr2h,c
  4497   0012CE  CFDE F008          	movff	postinc2,clcd_print@data
  4498   0012D2  CFDD F009          	movff	postdec2,clcd_print@data+1
  4499   0012D6  0E81               	movlw	129
  4500   0012D8  6E0A               	movwf	clcd_print@addr^0,c
  4501   0012DA  EC1C  F012         	call	_clcd_print	;wreg free
  4502   0012DE                     
  4503                           ;menu.c: 93:     clcd_print(menu_item[item_ind + 1], (0xC0 + (1)));
  4504   0012DE  5056               	movf	_item_ind^0,w,c
  4505   0012E0  0D02               	mullw	2
  4506   0012E2  50F3               	movf	243,w,c
  4507   0012E4  0FF3               	addlw	low (_menu_item+2)
  4508   0012E6  6ED9               	movwf	fsr2l,c
  4509   0012E8  6ADA               	clrf	fsr2h,c
  4510   0012EA  CFDE F008          	movff	postinc2,clcd_print@data
  4511   0012EE  CFDD F009          	movff	postdec2,clcd_print@data+1
  4512   0012F2  0EC1               	movlw	193
  4513   0012F4  6E0A               	movwf	clcd_print@addr^0,c
  4514   0012F6  EC1C  F012         	call	_clcd_print	;wreg free
  4515   0012FA                     l562:
  4516   0012FA  0012               	return		;funcret
  4517   0012FC                     __end_of_menu:
  4518                           	callstack 0
  4519                           
  4520 ;; *************** function _inti_config *****************
  4521 ;; Defined at:
  4522 ;;		line 27 in file "main.c"
  4523 ;; Parameters:    Size  Location     Type
  4524 ;;		None
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;		None
  4527 ;; Return value:  Size  Location     Type
  4528 ;;                  2  398[None  ] int 
  4529 ;; Registers used:
  4530 ;;		wreg, status,2, status,0, cstack
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4536 ;;      Params:         0       0       0       0       0       0       0
  4537 ;;      Locals:         0       0       0       0       0       0       0
  4538 ;;      Temps:          0       0       0       0       0       0       0
  4539 ;;      Totals:         0       0       0       0       0       0       0
  4540 ;;Total ram usage:        0 bytes
  4541 ;; Hardware stack levels used: 1
  4542 ;; Hardware stack levels required when called: 7
  4543 ;; This function calls:
  4544 ;;		_init_adc
  4545 ;;		_init_clcd
  4546 ;;		_init_ds1307
  4547 ;;		_init_i2c
  4548 ;;		_init_matrix_keypad
  4549 ;;		_init_timer0
  4550 ;;		_init_uart
  4551 ;; This function is called by:
  4552 ;;		_main
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           	psect	text8
  4557   0028F8                     __ptext8:
  4558                           	callstack 0
  4559   0028F8                     _inti_config:
  4560                           	callstack 23
  4561   0028F8                     
  4562                           ;main.c: 30:     init_adc();
  4563   0028F8  EC9D  F014         	call	_init_adc	;wreg free
  4564   0028FC                     
  4565                           ;main.c: 31:     init_clcd();
  4566   0028FC  EC90  F010         	call	_init_clcd	;wreg free
  4567   002900                     
  4568                           ;main.c: 32:     init_matrix_keypad();
  4569   002900  ECE7  F014         	call	_init_matrix_keypad	;wreg free
  4570                           
  4571                           ;main.c: 33:     init_i2c();
  4572   002904  ECD3  F014         	call	_init_i2c	;wreg free
  4573   002908                     
  4574                           ;main.c: 34:  init_ds1307();
  4575   002908  EC4D  F013         	call	_init_ds1307	;wreg free
  4576   00290C                     
  4577                           ;main.c: 35:     init_uart();
  4578   00290C  EC8D  F014         	call	_init_uart	;wreg free
  4579   002910                     
  4580                           ;main.c: 37:     PEIE = 1;
  4581   002910  8CF2               	bsf	4082,6,c	;volatile
  4582   002912                     
  4583                           ;main.c: 38:     init_timer0();
  4584   002912  ECC8  F014         	call	_init_timer0	;wreg free
  4585   002916                     
  4586                           ;main.c: 39:     GIE = 1;
  4587   002916  8EF2               	bsf	4082,7,c	;volatile
  4588   002918  0012               	return		;funcret
  4589   00291A                     __end_of_inti_config:
  4590                           	callstack 0
  4591                           
  4592 ;; *************** function _init_uart *****************
  4593 ;; Defined at:
  4594 ;;		line 11 in file "uart.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;		None
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;		None
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		wreg, status,2
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4608 ;;      Params:         0       0       0       0       0       0       0
  4609 ;;      Locals:         0       0       0       0       0       0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0
  4611 ;;      Totals:         0       0       0       0       0       0       0
  4612 ;;Total ram usage:        0 bytes
  4613 ;; Hardware stack levels used: 1
  4614 ;; Hardware stack levels required when called: 2
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_inti_config
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text9
  4623   00291A                     __ptext9:
  4624                           	callstack 0
  4625   00291A                     _init_uart:
  4626                           	callstack 27
  4627   00291A                     
  4628                           ;uart.c: 14:  TRISC7 = 1;
  4629   00291A  8E94               	bsf	3988,7,c	;volatile
  4630                           
  4631                           ;uart.c: 15:  TRISC6 = 0;
  4632   00291C  9C94               	bcf	3988,6,c	;volatile
  4633                           
  4634                           ;uart.c: 19:  TX9 = 0;
  4635   00291E  9CAC               	bcf	4012,6,c	;volatile
  4636                           
  4637                           ;uart.c: 21:  TXEN = 1;
  4638   002920  8AAC               	bsf	4012,5,c	;volatile
  4639                           
  4640                           ;uart.c: 24:  SYNC = 0;
  4641   002922  98AC               	bcf	4012,4,c	;volatile
  4642                           
  4643                           ;uart.c: 26:  SENDB = 0;
  4644   002924  96AC               	bcf	4012,3,c	;volatile
  4645                           
  4646                           ;uart.c: 29:  BRGH = 1;
  4647   002926  84AC               	bsf	4012,2,c	;volatile
  4648                           
  4649                           ;uart.c: 33:  SPEN = 1;
  4650   002928  8EAB               	bsf	4011,7,c	;volatile
  4651                           
  4652                           ;uart.c: 35:  RX9 = 0;
  4653   00292A  9CAB               	bcf	4011,6,c	;volatile
  4654                           
  4655                           ;uart.c: 37:  CREN = 1;
  4656   00292C  88AB               	bsf	4011,4,c	;volatile
  4657                           
  4658                           ;uart.c: 42:  BRG16 = 0;
  4659   00292E  96B8               	bcf	4024,3,c	;volatile
  4660   002930                     
  4661                           ;uart.c: 47:  SPBRG = 129;
  4662   002930  0E81               	movlw	129
  4663   002932  6EAF               	movwf	175,c	;volatile
  4664   002934                     
  4665                           ;uart.c: 51:  TXIF = 0;
  4666   002934  989E               	bcf	3998,4,c	;volatile
  4667   002936                     
  4668                           ;uart.c: 54:  RCIF = 0;
  4669   002936  9A9E               	bcf	3998,5,c	;volatile
  4670   002938  0012               	return		;funcret
  4671   00293A                     __end_of_init_uart:
  4672                           	callstack 0
  4673                           
  4674 ;; *************** function _init_timer0 *****************
  4675 ;; Defined at:
  4676 ;;		line 11 in file "timer0.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;		None
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;		None
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      void 
  4683 ;; Registers used:
  4684 ;;		wreg, status,2
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4690 ;;      Params:         0       0       0       0       0       0       0
  4691 ;;      Locals:         0       0       0       0       0       0       0
  4692 ;;      Temps:          0       0       0       0       0       0       0
  4693 ;;      Totals:         0       0       0       0       0       0       0
  4694 ;;Total ram usage:        0 bytes
  4695 ;; Hardware stack levels used: 1
  4696 ;; Hardware stack levels required when called: 2
  4697 ;; This function calls:
  4698 ;;		Nothing
  4699 ;; This function is called by:
  4700 ;;		_inti_config
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           	psect	text10
  4705   002990                     __ptext10:
  4706                           	callstack 0
  4707   002990                     _init_timer0:
  4708                           	callstack 27
  4709   002990                     
  4710                           ;timer0.c: 19:  T08BIT = 1;
  4711   002990  8CD5               	bsf	4053,6,c	;volatile
  4712                           
  4713                           ;timer0.c: 22:  T0CS = 0;
  4714   002992  9AD5               	bcf	4053,5,c	;volatile
  4715                           
  4716                           ;timer0.c: 25:  TMR0ON = 1;
  4717   002994  8ED5               	bsf	4053,7,c	;volatile
  4718                           
  4719                           ;timer0.c: 28:  PSA = 1;
  4720   002996  86D5               	bsf	4053,3,c	;volatile
  4721   002998                     
  4722                           ;timer0.c: 30:  TMR0 = 6;
  4723   002998  0E00               	movlw	0
  4724   00299A  6ED7               	movwf	215,c	;volatile
  4725   00299C  0E06               	movlw	6
  4726   00299E  6ED6               	movwf	214,c	;volatile
  4727   0029A0                     
  4728                           ;timer0.c: 33:  TMR0IF = 0;
  4729   0029A0  94F2               	bcf	4082,2,c	;volatile
  4730   0029A2                     
  4731                           ;timer0.c: 36:  TMR0IE = 1;
  4732   0029A2  8AF2               	bsf	4082,5,c	;volatile
  4733   0029A4  0012               	return		;funcret
  4734   0029A6                     __end_of_init_timer0:
  4735                           	callstack 0
  4736                           
  4737 ;; *************** function _init_matrix_keypad *****************
  4738 ;; Defined at:
  4739 ;;		line 11 in file "matrix_keypad.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;		None
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;		None
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      void 
  4746 ;; Registers used:
  4747 ;;		wreg, status,2, status,0
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4753 ;;      Params:         0       0       0       0       0       0       0
  4754 ;;      Locals:         0       0       0       0       0       0       0
  4755 ;;      Temps:          0       0       0       0       0       0       0
  4756 ;;      Totals:         0       0       0       0       0       0       0
  4757 ;;Total ram usage:        0 bytes
  4758 ;; Hardware stack levels used: 1
  4759 ;; Hardware stack levels required when called: 2
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_inti_config
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text11
  4768   0029CE                     __ptext11:
  4769                           	callstack 0
  4770   0029CE                     _init_matrix_keypad:
  4771                           	callstack 27
  4772   0029CE                     
  4773                           ;matrix_keypad.c: 14:  ADCON1 = 0x0F;
  4774   0029CE  0E0F               	movlw	15
  4775   0029D0  6EC1               	movwf	193,c	;volatile
  4776                           
  4777                           ;matrix_keypad.c: 17:  TRISB = 0x1E;
  4778   0029D2  0E1E               	movlw	30
  4779   0029D4  6E93               	movwf	147,c	;volatile
  4780   0029D6                     
  4781                           ;matrix_keypad.c: 20:  RBPU = 0;
  4782   0029D6  9EF1               	bcf	4081,7,c	;volatile
  4783   0029D8                     
  4784                           ;matrix_keypad.c: 22:  PORTB = PORTB | 0xE0;
  4785   0029D8  5081               	movf	129,w,c	;volatile
  4786   0029DA  09E0               	iorlw	224
  4787   0029DC  6E81               	movwf	129,c	;volatile
  4788   0029DE  0012               	return		;funcret
  4789   0029E0                     __end_of_init_matrix_keypad:
  4790                           	callstack 0
  4791                           
  4792 ;; *************** function _init_i2c *****************
  4793 ;; Defined at:
  4794 ;;		line 10 in file "i2c.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;		None
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;		None
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  1    wreg      void 
  4801 ;; Registers used:
  4802 ;;		wreg, status,2
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/0
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4808 ;;      Params:         0       0       0       0       0       0       0
  4809 ;;      Locals:         0       0       0       0       0       0       0
  4810 ;;      Temps:          0       0       0       0       0       0       0
  4811 ;;      Totals:         0       0       0       0       0       0       0
  4812 ;;Total ram usage:        0 bytes
  4813 ;; Hardware stack levels used: 1
  4814 ;; Hardware stack levels required when called: 2
  4815 ;; This function calls:
  4816 ;;		Nothing
  4817 ;; This function is called by:
  4818 ;;		_inti_config
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822                           	psect	text12
  4823   0029A6                     __ptext12:
  4824                           	callstack 0
  4825   0029A6                     _init_i2c:
  4826                           	callstack 27
  4827   0029A6                     
  4828                           ;i2c.c: 13:  TRISC3 = 1;
  4829   0029A6  8694               	bsf	3988,3,c	;volatile
  4830                           
  4831                           ;i2c.c: 14:  TRISC4 = 1;
  4832   0029A8  8894               	bsf	3988,4,c	;volatile
  4833   0029AA                     
  4834                           ;i2c.c: 16:  SSPCON1 = 0x28;
  4835   0029AA  0E28               	movlw	40
  4836   0029AC  6EC6               	movwf	198,c	;volatile
  4837                           
  4838                           ;i2c.c: 18:  SSPADD = 0x31;
  4839   0029AE  0E31               	movlw	49
  4840   0029B0  6EC8               	movwf	200,c	;volatile
  4841   0029B2                     
  4842                           ;i2c.c: 20:  CKE = 0;
  4843   0029B2  9CC7               	bcf	4039,6,c	;volatile
  4844   0029B4                     
  4845                           ;i2c.c: 22:  SMP = 1;
  4846   0029B4  8EC7               	bsf	4039,7,c	;volatile
  4847   0029B6                     
  4848                           ;i2c.c: 24:  SSPIF = 0;
  4849   0029B6  969E               	bcf	3998,3,c	;volatile
  4850   0029B8                     
  4851                           ;i2c.c: 26:  BCLIF = 0;
  4852   0029B8  96A1               	bcf	4001,3,c	;volatile
  4853   0029BA  0012               	return		;funcret
  4854   0029BC                     __end_of_init_i2c:
  4855                           	callstack 0
  4856                           
  4857 ;; *************** function _init_ds1307 *****************
  4858 ;; Defined at:
  4859 ;;		line 20 in file "ds1307.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;		None
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;  dummy           1    8[COMRAM] unsigned char 
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  1    wreg      void 
  4866 ;; Registers used:
  4867 ;;		wreg, status,2, status,0, cstack
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4873 ;;      Params:         0       0       0       0       0       0       0
  4874 ;;      Locals:         1       0       0       0       0       0       0
  4875 ;;      Temps:          0       0       0       0       0       0       0
  4876 ;;      Totals:         1       0       0       0       0       0       0
  4877 ;;Total ram usage:        1 bytes
  4878 ;; Hardware stack levels used: 1
  4879 ;; Hardware stack levels required when called: 6
  4880 ;; This function calls:
  4881 ;;		_read_ds1307
  4882 ;;		_write_ds1307
  4883 ;; This function is called by:
  4884 ;;		_inti_config
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           	psect	text13
  4889   00269A                     __ptext13:
  4890                           	callstack 0
  4891   00269A                     _init_ds1307:
  4892                           	callstack 23
  4893   00269A                     
  4894                           ;ds1307.c: 22:  unsigned char dummy;;ds1307.c: 25:  dummy = read_ds1307(0x00);
  4895   00269A  0E00               	movlw	0
  4896   00269C  EC54  F014         	call	_read_ds1307
  4897   0026A0  6E09               	movwf	init_ds1307@dummy^0,c
  4898   0026A2                     
  4899                           ;ds1307.c: 26:  write_ds1307(0x00, dummy | 0x80);
  4900   0026A2  5009               	movf	init_ds1307@dummy^0,w,c
  4901   0026A4  0980               	iorlw	128
  4902   0026A6  6E07               	movwf	write_ds1307@data^0,c
  4903   0026A8  0E00               	movlw	0
  4904   0026AA  ECAD  F014         	call	_write_ds1307
  4905   0026AE                     
  4906                           ;ds1307.c: 29:  dummy = read_ds1307(0x02);
  4907   0026AE  0E02               	movlw	2
  4908   0026B0  EC54  F014         	call	_read_ds1307
  4909   0026B4  6E09               	movwf	init_ds1307@dummy^0,c
  4910   0026B6                     
  4911                           ;ds1307.c: 30:  write_ds1307(0x02, dummy | 0x00);
  4912   0026B6  C009  F007         	movff	init_ds1307@dummy,write_ds1307@data
  4913   0026BA  0E02               	movlw	2
  4914   0026BC  ECAD  F014         	call	_write_ds1307
  4915   0026C0                     
  4916                           ;ds1307.c: 45:  write_ds1307(0x07, 0x93);
  4917   0026C0  0E93               	movlw	147
  4918   0026C2  6E07               	movwf	write_ds1307@data^0,c
  4919   0026C4  0E07               	movlw	7
  4920   0026C6  ECAD  F014         	call	_write_ds1307
  4921   0026CA                     
  4922                           ;ds1307.c: 48:  dummy = read_ds1307(0x00);
  4923   0026CA  0E00               	movlw	0
  4924   0026CC  EC54  F014         	call	_read_ds1307
  4925   0026D0  6E09               	movwf	init_ds1307@dummy^0,c
  4926   0026D2                     
  4927                           ;ds1307.c: 49:  write_ds1307(0x00, dummy & 0x7F);
  4928   0026D2  5009               	movf	init_ds1307@dummy^0,w,c
  4929   0026D4  0B7F               	andlw	127
  4930   0026D6  6E07               	movwf	write_ds1307@data^0,c
  4931   0026D8  0E00               	movlw	0
  4932   0026DA  ECAD  F014         	call	_write_ds1307
  4933   0026DE  0012               	return		;funcret
  4934   0026E0                     __end_of_init_ds1307:
  4935                           	callstack 0
  4936                           
  4937 ;; *************** function _write_ds1307 *****************
  4938 ;; Defined at:
  4939 ;;		line 53 in file "ds1307.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;  address         1    wreg     unsigned char 
  4942 ;;  data            1    6[COMRAM] unsigned char 
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;  address         1    7[COMRAM] unsigned char 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  1    wreg      void 
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4954 ;;      Params:         1       0       0       0       0       0       0
  4955 ;;      Locals:         1       0       0       0       0       0       0
  4956 ;;      Temps:          0       0       0       0       0       0       0
  4957 ;;      Totals:         2       0       0       0       0       0       0
  4958 ;;Total ram usage:        2 bytes
  4959 ;; Hardware stack levels used: 1
  4960 ;; Hardware stack levels required when called: 4
  4961 ;; This function calls:
  4962 ;;		_i2c_start
  4963 ;;		_i2c_stop
  4964 ;;		_i2c_write
  4965 ;; This function is called by:
  4966 ;;		_settime
  4967 ;;		_init_ds1307
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           	psect	text14
  4972   00295A                     __ptext14:
  4973                           	callstack 0
  4974   00295A                     _write_ds1307:
  4975                           	callstack 25
  4976                           
  4977                           ;incstack = 0
  4978                           ;write_ds1307@address stored from wreg
  4979   00295A  6E08               	movwf	write_ds1307@address^0,c
  4980   00295C                     
  4981                           ;ds1307.c: 53: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 54
      +                          : {;ds1307.c: 55:  i2c_start();
  4982   00295C  EC18  F015         	call	_i2c_start	;wreg free
  4983   002960                     
  4984                           ;ds1307.c: 56:  i2c_write(0xD0);
  4985   002960  0ED0               	movlw	208
  4986   002962  EC06  F015         	call	_i2c_write
  4987   002966                     
  4988                           ;ds1307.c: 57:  i2c_write(address);
  4989   002966  5008               	movf	write_ds1307@address^0,w,c
  4990   002968  EC06  F015         	call	_i2c_write
  4991   00296C                     
  4992                           ;ds1307.c: 58:  i2c_write(data);
  4993   00296C  5007               	movf	write_ds1307@data^0,w,c
  4994   00296E  EC06  F015         	call	_i2c_write
  4995   002972                     
  4996                           ;ds1307.c: 59:  i2c_stop();
  4997   002972  EC14  F015         	call	_i2c_stop	;wreg free
  4998   002976  0012               	return		;funcret
  4999   002978                     __end_of_write_ds1307:
  5000                           	callstack 0
  5001                           
  5002 ;; *************** function _init_clcd *****************
  5003 ;; Defined at:
  5004 ;;		line 34 in file "clcd.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;		None
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;		None
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      void 
  5011 ;; Registers used:
  5012 ;;		wreg, status,2, status,0, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5018 ;;      Params:         0       0       0       0       0       0       0
  5019 ;;      Locals:         0       0       0       0       0       0       0
  5020 ;;      Temps:          1       0       0       0       0       0       0
  5021 ;;      Totals:         1       0       0       0       0       0       0
  5022 ;;Total ram usage:        1 bytes
  5023 ;; Hardware stack levels used: 1
  5024 ;; Hardware stack levels required when called: 3
  5025 ;; This function calls:
  5026 ;;		_clcd_write
  5027 ;; This function is called by:
  5028 ;;		_inti_config
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text15
  5033   002120                     __ptext15:
  5034                           	callstack 0
  5035   002120                     _init_clcd:
  5036                           	callstack 26
  5037   002120                     
  5038                           ;clcd.c: 37:  TRISD = 0x00;
  5039   002120  0E00               	movlw	0
  5040   002122  6E95               	movwf	149,c	;volatile
  5041   002124                     
  5042                           ;clcd.c: 39:  TRISC = TRISC & 0xF8;
  5043   002124  5094               	movf	148,w,c	;volatile
  5044   002126  0BF8               	andlw	248
  5045   002128  6E94               	movwf	148,c	;volatile
  5046   00212A                     
  5047                           ;clcd.c: 41:  RC0 = 0;
  5048   00212A  9082               	bcf	3970,0,c	;volatile
  5049   00212C                     
  5050                           ;clcd.c: 45:     _delay((unsigned long)((30)*(20000000/4000.0)));
  5051   00212C  0EC3               	movlw	195
  5052   00212E  6E08               	movwf	??_init_clcd^0,c
  5053   002130  0ECD               	movlw	205
  5054   002132                     u5217:
  5055   002132  2EE8               	decfsz	wreg,f,c
  5056   002134  D7FE               	bra	u5217
  5057   002136  2E08               	decfsz	??_init_clcd^0,f,c
  5058   002138  D7FC               	bra	u5217
  5059   00213A  0000               	nop	
  5060   00213C                     
  5061                           ;clcd.c: 48:     clcd_write(0x33, 0 );
  5062   00213C  0E00               	movlw	0
  5063   00213E  6E06               	movwf	clcd_write@control_bit^0,c
  5064   002140  0E33               	movlw	51
  5065   002142  ECEE  F013         	call	_clcd_write
  5066   002146                     
  5067                           ;clcd.c: 49:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  5068   002146  0E1B               	movlw	27
  5069   002148  6E08               	movwf	??_init_clcd^0,c
  5070   00214A  0E9E               	movlw	158
  5071   00214C                     u5227:
  5072   00214C  2EE8               	decfsz	wreg,f,c
  5073   00214E  D7FE               	bra	u5227
  5074   002150  2E08               	decfsz	??_init_clcd^0,f,c
  5075   002152  D7FC               	bra	u5227
  5076   002154  D000               	nop2	
  5077   002156                     
  5078                           ;clcd.c: 50:     clcd_write(0x33, 0 );
  5079   002156  0E00               	movlw	0
  5080   002158  6E06               	movwf	clcd_write@control_bit^0,c
  5081   00215A  0E33               	movlw	51
  5082   00215C  ECEE  F013         	call	_clcd_write
  5083   002160                     
  5084                           ;clcd.c: 51:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5085   002160  0EA6               	movlw	166
  5086   002162                     u5237:
  5087   002162  2EE8               	decfsz	wreg,f,c
  5088   002164  D7FE               	bra	u5237
  5089   002166  D000               	nop2	
  5090   002168                     
  5091                           ;clcd.c: 52:     clcd_write(0x33, 0 );
  5092   002168  0E00               	movlw	0
  5093   00216A  6E06               	movwf	clcd_write@control_bit^0,c
  5094   00216C  0E33               	movlw	51
  5095   00216E  ECEE  F013         	call	_clcd_write
  5096   002172                     
  5097                           ;clcd.c: 53:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  5098   002172  D000               	nop2		;2 cycle nop
  5099   002174  D000               	nop2		;2 cycle nop
  5100   002176  0000               	nop	
  5101   002178                     
  5102                           ;clcd.c: 55:     clcd_write(0x02, 0);
  5103   002178  0E00               	movlw	0
  5104   00217A  6E06               	movwf	clcd_write@control_bit^0,c
  5105   00217C  0E02               	movlw	2
  5106   00217E  ECEE  F013         	call	_clcd_write
  5107   002182                     
  5108                           ;clcd.c: 56:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5109   002182  0EA6               	movlw	166
  5110   002184                     u5247:
  5111   002184  2EE8               	decfsz	wreg,f,c
  5112   002186  D7FE               	bra	u5247
  5113   002188  D000               	nop2	
  5114   00218A                     
  5115                           ;clcd.c: 57:     clcd_write(0x38, 0);
  5116   00218A  0E00               	movlw	0
  5117   00218C  6E06               	movwf	clcd_write@control_bit^0,c
  5118   00218E  0E38               	movlw	56
  5119   002190  ECEE  F013         	call	_clcd_write
  5120   002194                     
  5121                           ;clcd.c: 58:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5122   002194  0EA6               	movlw	166
  5123   002196                     u5257:
  5124   002196  2EE8               	decfsz	wreg,f,c
  5125   002198  D7FE               	bra	u5257
  5126   00219A  D000               	nop2	
  5127   00219C                     
  5128                           ;clcd.c: 59:     clcd_write(0x01, 0);
  5129   00219C  0E00               	movlw	0
  5130   00219E  6E06               	movwf	clcd_write@control_bit^0,c
  5131   0021A0  0E01               	movlw	1
  5132   0021A2  ECEE  F013         	call	_clcd_write
  5133   0021A6                     
  5134                           ;clcd.c: 60:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  5135   0021A6  0E04               	movlw	4
  5136   0021A8  6E08               	movwf	??_init_clcd^0,c
  5137   0021AA  0E3E               	movlw	62
  5138   0021AC                     u5267:
  5139   0021AC  2EE8               	decfsz	wreg,f,c
  5140   0021AE  D7FE               	bra	u5267
  5141   0021B0  2E08               	decfsz	??_init_clcd^0,f,c
  5142   0021B2  D7FC               	bra	u5267
  5143   0021B4                     
  5144                           ;clcd.c: 61:     clcd_write(0x0C, 0);
  5145   0021B4  0E00               	movlw	0
  5146   0021B6  6E06               	movwf	clcd_write@control_bit^0,c
  5147   0021B8  0E0C               	movlw	12
  5148   0021BA  ECEE  F013         	call	_clcd_write
  5149   0021BE                     
  5150                           ;clcd.c: 62:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5151   0021BE  0EA6               	movlw	166
  5152   0021C0                     u5277:
  5153   0021C0  2EE8               	decfsz	wreg,f,c
  5154   0021C2  D7FE               	bra	u5277
  5155   0021C4  D000               	nop2	
  5156   0021C6  0012               	return		;funcret
  5157   0021C8                     __end_of_init_clcd:
  5158                           	callstack 0
  5159                           
  5160 ;; *************** function _init_adc *****************
  5161 ;; Defined at:
  5162 ;;		line 10 in file "adc.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;		None
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;		None
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  1    wreg      void 
  5169 ;; Registers used:
  5170 ;;		wreg, status,2
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5176 ;;      Params:         0       0       0       0       0       0       0
  5177 ;;      Locals:         0       0       0       0       0       0       0
  5178 ;;      Temps:          0       0       0       0       0       0       0
  5179 ;;      Totals:         0       0       0       0       0       0       0
  5180 ;;Total ram usage:        0 bytes
  5181 ;; Hardware stack levels used: 1
  5182 ;; Hardware stack levels required when called: 2
  5183 ;; This function calls:
  5184 ;;		Nothing
  5185 ;; This function is called by:
  5186 ;;		_inti_config
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           	psect	text16
  5191   00293A                     __ptext16:
  5192                           	callstack 0
  5193   00293A                     _init_adc:
  5194                           	callstack 27
  5195   00293A                     
  5196                           ;adc.c: 13:  ADFM = 1;
  5197   00293A  8EC0               	bsf	4032,7,c	;volatile
  5198                           
  5199                           ;adc.c: 19:  ACQT2 = 0;
  5200   00293C  9AC0               	bcf	4032,5,c	;volatile
  5201                           
  5202                           ;adc.c: 20:  ACQT1 = 1;
  5203   00293E  88C0               	bsf	4032,4,c	;volatile
  5204                           
  5205                           ;adc.c: 21:  ACQT0 = 0;
  5206   002940  96C0               	bcf	4032,3,c	;volatile
  5207                           
  5208                           ;adc.c: 27:  ADCS0 = 0;
  5209   002942  90C0               	bcf	4032,0,c	;volatile
  5210                           
  5211                           ;adc.c: 28:  ADCS1 = 1;
  5212   002944  82C0               	bsf	4032,1,c	;volatile
  5213                           
  5214                           ;adc.c: 29:  ADCS2 = 0;
  5215   002946  94C0               	bcf	4032,2,c	;volatile
  5216                           
  5217                           ;adc.c: 32:  GODONE = 0;
  5218   002948  92C2               	bcf	4034,1,c	;volatile
  5219                           
  5220                           ;adc.c: 37:  VCFG1 = 0;
  5221   00294A  9AC1               	bcf	4033,5,c	;volatile
  5222                           
  5223                           ;adc.c: 39:  VCFG0 = 0;
  5224   00294C  98C1               	bcf	4033,4,c	;volatile
  5225   00294E                     
  5226                           ;adc.c: 42:  ADRESH = 0;
  5227   00294E  0E00               	movlw	0
  5228   002950  6EC4               	movwf	196,c	;volatile
  5229                           
  5230                           ;adc.c: 43:  ADRESL = 0;
  5231   002952  0E00               	movlw	0
  5232   002954  6EC3               	movwf	195,c	;volatile
  5233   002956                     
  5234                           ;adc.c: 46:  ADON = 1;
  5235   002956  80C2               	bsf	4034,0,c	;volatile
  5236   002958  0012               	return		;funcret
  5237   00295A                     __end_of_init_adc:
  5238                           	callstack 0
  5239                           
  5240 ;; *************** function _download_log *****************
  5241 ;; Defined at:
  5242 ;;		line 18 in file "download_log.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;		None
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;  str            30   25[BANK0 ] unsigned char [30]
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  1    wreg      void 
  5249 ;; Registers used:
  5250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5256 ;;      Params:         0       0       0       0       0       0       0
  5257 ;;      Locals:         0      34       0       0       0       0       0
  5258 ;;      Temps:         10       0       0       0       0       0       0
  5259 ;;      Totals:        10      34       0       0       0       0       0
  5260 ;;Total ram usage:       44 bytes
  5261 ;; Hardware stack levels used: 1
  5262 ;; Hardware stack levels required when called: 10
  5263 ;; This function calls:
  5264 ;;		___awmod
  5265 ;;		_clcd_print
  5266 ;;		_read_external_eeprom
  5267 ;;		_sprintf
  5268 ;;		_uart_puts
  5269 ;; This function is called by:
  5270 ;;		_main
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text17
  5275   000BFC                     __ptext17:
  5276                           	callstack 0
  5277   000BFC                     _download_log:
  5278                           	callstack 20
  5279   000BFC                     
  5280                           ;download_log.c: 21:     clcd_print(" DOWNLOADING..  ",(0x80 + (0)));
  5281   000BFC  0EF9               	movlw	low STR_57
  5282   000BFE  6E08               	movwf	clcd_print@data^0,c
  5283   000C00  0E2E               	movlw	high STR_57
  5284   000C02  6E09               	movwf	(clcd_print@data+1)^0,c
  5285   000C04  0E80               	movlw	128
  5286   000C06  6E0A               	movwf	clcd_print@addr^0,c
  5287   000C08  EC1C  F012         	call	_clcd_print	;wreg free
  5288                           
  5289                           ;download_log.c: 22:     clcd_print("                ",(0xC0 + (0)));
  5290   000C0C  0E07               	movlw	low (STR_15+1)
  5291   000C0E  6E08               	movwf	clcd_print@data^0,c
  5292   000C10  0E2E               	movlw	high (STR_15+1)
  5293   000C12  6E09               	movwf	(clcd_print@data+1)^0,c
  5294   000C14  0EC0               	movlw	192
  5295   000C16  6E0A               	movwf	clcd_print@addr^0,c
  5296   000C18  EC1C  F012         	call	_clcd_print	;wreg free
  5297   000C1C                     
  5298                           ;download_log.c: 24:     if (e >= 0 && e < 10)
  5299   000C1C  0E0A               	movlw	10
  5300   000C1E  0100               	movlb	0	; () banked
  5301   000C20  618D               	cpfslt	_e& (0+255),b
  5302   000C22  EF15  F006         	goto	u4731
  5303   000C26  EF17  F006         	goto	u4730
  5304   000C2A                     u4731:
  5305   000C2A  EFFC  F006         	goto	l5957
  5306   000C2E                     u4730:
  5307   000C2E                     
  5308                           ; BSR set to: 0
  5309                           ;download_log.c: 25:     {;download_log.c: 28:         uart_puts("\n\r");
  5310   000C2E  0E85               	movlw	low (STR_62+44)
  5311   000C30  6E07               	movwf	uart_puts@s^0,c
  5312   000C32  0E2D               	movlw	high (STR_62+44)
  5313   000C34  6E08               	movwf	(uart_puts@s+1)^0,c
  5314   000C36  EC84  F012         	call	_uart_puts	;wreg free
  5315                           
  5316                           ;download_log.c: 29:         uart_puts("SL NO   DATE       GEAR   SPEED\n\r");
  5317   000C3A  0EAA               	movlw	low STR_60
  5318   000C3C  6E07               	movwf	uart_puts@s^0,c
  5319   000C3E  0E2D               	movlw	high STR_60
  5320   000C40  6E08               	movwf	(uart_puts@s+1)^0,c
  5321   000C42  EC84  F012         	call	_uart_puts	;wreg free
  5322                           
  5323                           ;download_log.c: 30:         uart_puts("-----   ----       ----   -----\n\r");
  5324   000C46  0E88               	movlw	low STR_61
  5325   000C48  6E07               	movwf	uart_puts@s^0,c
  5326   000C4A  0E2D               	movlw	high STR_61
  5327   000C4C  6E08               	movwf	(uart_puts@s+1)^0,c
  5328   000C4E  EC84  F012         	call	_uart_puts	;wreg free
  5329   000C52                     l5937:
  5330                           
  5331                           ;download_log.c: 32:         {;download_log.c: 33:           char str[30];;download_log.
      +                          c: 34:       sprintf(str,"    %c   %c%c:%c%c:%c%c     %c%c      %c%c  \n\r",
  5332   000C52  5058               	movf	_s^0,w,c
  5333   000C54  C08F  F047         	movff	_p,??_download_log
  5334   000C58  6A48               	clrf	(??_download_log+1)^0,c
  5335   000C5A  5E47               	subwf	??_download_log^0,f,c
  5336   000C5C  0E00               	movlw	0
  5337   000C5E  5A48               	subwfb	(??_download_log+1)^0,f,c
  5338   000C60  0E0A               	movlw	10
  5339   000C62  2447               	addwf	??_download_log^0,w,c
  5340   000C64  6E06               	movwf	___awmod@dividend^0,c
  5341   000C66  0E00               	movlw	0
  5342   000C68  2048               	addwfc	(??_download_log+1)^0,w,c
  5343   000C6A  6E07               	movwf	(___awmod@dividend+1)^0,c
  5344   000C6C  0E00               	movlw	0
  5345   000C6E  6E09               	movwf	(___awmod@divisor+1)^0,c
  5346   000C70  0E0A               	movlw	10
  5347   000C72  6E08               	movwf	___awmod@divisor^0,c
  5348   000C74  EC8C  F00F         	call	___awmod	;wreg free
  5349   000C78  0E30               	movlw	48
  5350   000C7A  2406               	addwf	?___awmod^0,w,c
  5351   000C7C  0100               	movlb	0	; () banked
  5352   000C7E  6FE6               	movwf	_download_log$1800& (0+255),b
  5353   000C80  0E00               	movlw	0
  5354   000C82  2007               	addwfc	(?___awmod+1)^0,w,c
  5355   000C84  6FE7               	movwf	(_download_log$1800+1)& (0+255),b
  5356   000C86                     
  5357                           ; BSR set to: 0
  5358                           ;download_log.c: 32:         {;download_log.c: 33:           char str[30];;download_log.
      +                          c: 34:       sprintf(str,"    %c   %c%c:%c%c:%c%c     %c%c      %c%c  \n\r",
  5359   000C86  0EC8               	movlw	low download_log@str
  5360   000C88  6FAF               	movwf	sprintf@s& (0+255),b
  5361   000C8A  0E59               	movlw	low STR_62
  5362   000C8C  6FB0               	movwf	sprintf@fmt& (0+255),b
  5363   000C8E  0E2D               	movlw	high STR_62
  5364   000C90  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  5365   000C92  C0E6  F0B2         	movff	_download_log$1800,?_sprintf+3
  5366   000C96  C0E7  F0B3         	movff	_download_log$1800+1,?_sprintf+4
  5367   000C9A  518F               	movf	_p& (0+255),w,b
  5368   000C9C  0D0A               	mullw	10
  5369   000C9E  50F3               	movf	243,w,c
  5370   000CA0  EC3F  F014         	call	_read_external_eeprom
  5371   000CA4  6E47               	movwf	??_download_log^0,c
  5372   000CA6  5047               	movf	??_download_log^0,w,c
  5373   000CA8  0100               	movlb	0	; () banked
  5374   000CAA  6FB4               	movwf	(?_sprintf+5)& (0+255),b
  5375   000CAC  6BB5               	clrf	(?_sprintf+6)& (0+255),b
  5376   000CAE  518F               	movf	_p& (0+255),w,b
  5377   000CB0  0D0A               	mullw	10
  5378   000CB2  28F3               	incf	243,w,c
  5379   000CB4  EC3F  F014         	call	_read_external_eeprom
  5380   000CB8  6E48               	movwf	(??_download_log+1)^0,c
  5381   000CBA  5048               	movf	(??_download_log+1)^0,w,c
  5382   000CBC  0100               	movlb	0	; () banked
  5383   000CBE  6FB6               	movwf	(?_sprintf+7)& (0+255),b
  5384   000CC0  6BB7               	clrf	(?_sprintf+8)& (0+255),b
  5385   000CC2  518F               	movf	_p& (0+255),w,b
  5386   000CC4  0D0A               	mullw	10
  5387   000CC6  50F3               	movf	243,w,c
  5388   000CC8  0F02               	addlw	2
  5389   000CCA  EC3F  F014         	call	_read_external_eeprom
  5390   000CCE  6E49               	movwf	(??_download_log+2)^0,c
  5391   000CD0  5049               	movf	(??_download_log+2)^0,w,c
  5392   000CD2  0100               	movlb	0	; () banked
  5393   000CD4  6FB8               	movwf	(?_sprintf+9)& (0+255),b
  5394   000CD6  6BB9               	clrf	(?_sprintf+10)& (0+255),b
  5395   000CD8  518F               	movf	_p& (0+255),w,b
  5396   000CDA  0D0A               	mullw	10
  5397   000CDC  50F3               	movf	243,w,c
  5398   000CDE  0F03               	addlw	3
  5399   000CE0  EC3F  F014         	call	_read_external_eeprom
  5400   000CE4  6E4A               	movwf	(??_download_log+3)^0,c
  5401   000CE6  504A               	movf	(??_download_log+3)^0,w,c
  5402   000CE8  0100               	movlb	0	; () banked
  5403   000CEA  6FBA               	movwf	(?_sprintf+11)& (0+255),b
  5404   000CEC  6BBB               	clrf	(?_sprintf+12)& (0+255),b
  5405   000CEE  518F               	movf	_p& (0+255),w,b
  5406   000CF0  0D0A               	mullw	10
  5407   000CF2  50F3               	movf	243,w,c
  5408   000CF4  0F04               	addlw	4
  5409   000CF6  EC3F  F014         	call	_read_external_eeprom
  5410   000CFA  6E4B               	movwf	(??_download_log+4)^0,c
  5411   000CFC  504B               	movf	(??_download_log+4)^0,w,c
  5412   000CFE  0100               	movlb	0	; () banked
  5413   000D00  6FBC               	movwf	(?_sprintf+13)& (0+255),b
  5414   000D02  6BBD               	clrf	(?_sprintf+14)& (0+255),b
  5415   000D04  518F               	movf	_p& (0+255),w,b
  5416   000D06  0D0A               	mullw	10
  5417   000D08  50F3               	movf	243,w,c
  5418   000D0A  0F05               	addlw	5
  5419   000D0C  EC3F  F014         	call	_read_external_eeprom
  5420   000D10  6E4C               	movwf	(??_download_log+5)^0,c
  5421   000D12  504C               	movf	(??_download_log+5)^0,w,c
  5422   000D14  0100               	movlb	0	; () banked
  5423   000D16  6FBE               	movwf	(?_sprintf+15)& (0+255),b
  5424   000D18  6BBF               	clrf	(?_sprintf+16)& (0+255),b
  5425   000D1A  518F               	movf	_p& (0+255),w,b
  5426   000D1C  0D0A               	mullw	10
  5427   000D1E  50F3               	movf	243,w,c
  5428   000D20  0F06               	addlw	6
  5429   000D22  EC3F  F014         	call	_read_external_eeprom
  5430   000D26  6E4D               	movwf	(??_download_log+6)^0,c
  5431   000D28  504D               	movf	(??_download_log+6)^0,w,c
  5432   000D2A  0100               	movlb	0	; () banked
  5433   000D2C  6FC0               	movwf	(?_sprintf+17)& (0+255),b
  5434   000D2E  6BC1               	clrf	(?_sprintf+18)& (0+255),b
  5435   000D30  518F               	movf	_p& (0+255),w,b
  5436   000D32  0D0A               	mullw	10
  5437   000D34  50F3               	movf	243,w,c
  5438   000D36  0F07               	addlw	7
  5439   000D38  EC3F  F014         	call	_read_external_eeprom
  5440   000D3C  6E4E               	movwf	(??_download_log+7)^0,c
  5441   000D3E  504E               	movf	(??_download_log+7)^0,w,c
  5442   000D40  0100               	movlb	0	; () banked
  5443   000D42  6FC2               	movwf	(?_sprintf+19)& (0+255),b
  5444   000D44  6BC3               	clrf	(?_sprintf+20)& (0+255),b
  5445   000D46  518F               	movf	_p& (0+255),w,b
  5446   000D48  0D0A               	mullw	10
  5447   000D4A  50F3               	movf	243,w,c
  5448   000D4C  0F08               	addlw	8
  5449   000D4E  EC3F  F014         	call	_read_external_eeprom
  5450   000D52  6E4F               	movwf	(??_download_log+8)^0,c
  5451   000D54  504F               	movf	(??_download_log+8)^0,w,c
  5452   000D56  0100               	movlb	0	; () banked
  5453   000D58  6FC4               	movwf	(?_sprintf+21)& (0+255),b
  5454   000D5A  6BC5               	clrf	(?_sprintf+22)& (0+255),b
  5455   000D5C  518F               	movf	_p& (0+255),w,b
  5456   000D5E  0D0A               	mullw	10
  5457   000D60  50F3               	movf	243,w,c
  5458   000D62  0F09               	addlw	9
  5459   000D64  EC3F  F014         	call	_read_external_eeprom
  5460   000D68  6E50               	movwf	(??_download_log+9)^0,c
  5461   000D6A  5050               	movf	(??_download_log+9)^0,w,c
  5462   000D6C  0100               	movlb	0	; () banked
  5463   000D6E  6FC6               	movwf	(?_sprintf+23)& (0+255),b
  5464   000D70  6BC7               	clrf	(?_sprintf+24)& (0+255),b
  5465   000D72  ECD1  F013         	call	_sprintf	;wreg free
  5466   000D76                     
  5467                           ;download_log.c: 49:             uart_puts(str);
  5468   000D76  0EC8               	movlw	low download_log@str
  5469   000D78  6E07               	movwf	uart_puts@s^0,c
  5470   000D7A  6A08               	clrf	(uart_puts@s+1)^0,c
  5471   000D7C  EC84  F012         	call	_uart_puts	;wreg free
  5472   000D80                     
  5473                           ;download_log.c: 50:             uart_puts("\n\r");
  5474   000D80  0E85               	movlw	low (STR_62+44)
  5475   000D82  6E07               	movwf	uart_puts@s^0,c
  5476   000D84  0E2D               	movlw	high (STR_62+44)
  5477   000D86  6E08               	movwf	(uart_puts@s+1)^0,c
  5478   000D88  EC84  F012         	call	_uart_puts	;wreg free
  5479   000D8C                     
  5480                           ;download_log.c: 52:             p = p == 9? 0: p + 1;
  5481   000D8C  0E09               	movlw	9
  5482   000D8E  0100               	movlb	0	; () banked
  5483   000D90  198F               	xorwf	_p& (0+255),w,b
  5484   000D92  B4D8               	btfsc	status,2,c
  5485   000D94  EFCE  F006         	goto	u4741
  5486   000D98  EFD0  F006         	goto	u4740
  5487   000D9C                     u4741:
  5488   000D9C  EFD8  F006         	goto	l5949
  5489   000DA0                     u4740:
  5490   000DA0                     
  5491                           ; BSR set to: 0
  5492   000DA0  0E01               	movlw	1
  5493   000DA2  258F               	addwf	_p& (0+255),w,b
  5494   000DA4  6FE8               	movwf	_download_log$253& (0+255),b
  5495   000DA6  6BE9               	clrf	(_download_log$253+1)& (0+255),b
  5496   000DA8  0E00               	movlw	0
  5497   000DAA  23E9               	addwfc	(_download_log$253+1)& (0+255),f,b
  5498   000DAC  EFDC  F006         	goto	l5951
  5499   000DB0                     l5949:
  5500                           
  5501                           ; BSR set to: 0
  5502   000DB0  0E00               	movlw	0
  5503   000DB2  6FE9               	movwf	(_download_log$253+1)& (0+255),b
  5504   000DB4  0E00               	movlw	0
  5505   000DB6  6FE8               	movwf	_download_log$253& (0+255),b
  5506   000DB8                     l5951:
  5507                           
  5508                           ; BSR set to: 0
  5509   000DB8  C0E8  F08F         	movff	_download_log$253,_p
  5510   000DBC                     
  5511                           ; BSR set to: 0
  5512                           ;download_log.c: 53:         }while(p != e+1);
  5513   000DBC  518F               	movf	_p& (0+255),w,b
  5514   000DBE  6E47               	movwf	??_download_log^0,c
  5515   000DC0  6A48               	clrf	(??_download_log+1)^0,c
  5516   000DC2  518D               	movf	_e& (0+255),w,b
  5517   000DC4  6E49               	movwf	(??_download_log+2)^0,c
  5518   000DC6  6A4A               	clrf	(??_download_log+3)^0,c
  5519   000DC8  0E01               	movlw	1
  5520   000DCA  2649               	addwf	(??_download_log+2)^0,f,c
  5521   000DCC  0E00               	movlw	0
  5522   000DCE  224A               	addwfc	(??_download_log+3)^0,f,c
  5523   000DD0  5047               	movf	??_download_log^0,w,c
  5524   000DD2  1849               	xorwf	(??_download_log+2)^0,w,c
  5525   000DD4  E107               	bnz	u4751
  5526   000DD6  5048               	movf	(??_download_log+1)^0,w,c
  5527   000DD8  184A               	xorwf	(??_download_log+3)^0,w,c
  5528   000DDA  A4D8               	btfss	status,2,c
  5529   000DDC  EFF2  F006         	goto	u4751
  5530   000DE0  EFF4  F006         	goto	u4750
  5531   000DE4                     u4751:
  5532   000DE4  EF29  F006         	goto	l5937
  5533   000DE8                     u4750:
  5534   000DE8                     
  5535                           ; BSR set to: 0
  5536                           ;download_log.c: 54:         uart_puts("\n\r");
  5537   000DE8  0E85               	movlw	low (STR_62+44)
  5538   000DEA  6E07               	movwf	uart_puts@s^0,c
  5539   000DEC  0E2D               	movlw	high (STR_62+44)
  5540   000DEE  6E08               	movwf	(uart_puts@s+1)^0,c
  5541   000DF0  EC84  F012         	call	_uart_puts	;wreg free
  5542                           
  5543                           ;download_log.c: 55:     }
  5544   000DF4  EF0E  F007         	goto	l5959
  5545   000DF8                     l5957:
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;download_log.c: 57:     {;download_log.c: 59:         uart_puts("\n\r");
  5549   000DF8  0E85               	movlw	low (STR_62+44)
  5550   000DFA  6E07               	movwf	uart_puts@s^0,c
  5551   000DFC  0E2D               	movlw	high (STR_62+44)
  5552   000DFE  6E08               	movwf	(uart_puts@s+1)^0,c
  5553   000E00  EC84  F012         	call	_uart_puts	;wreg free
  5554                           
  5555                           ;download_log.c: 60:         uart_puts("LOGS ARE EMPTY\n\r");
  5556   000E04  0EE8               	movlw	low STR_66
  5557   000E06  6E07               	movwf	uart_puts@s^0,c
  5558   000E08  0E2E               	movlw	high STR_66
  5559   000E0A  6E08               	movwf	(uart_puts@s+1)^0,c
  5560   000E0C  EC84  F012         	call	_uart_puts	;wreg free
  5561                           
  5562                           ;download_log.c: 61:         uart_puts("\n\r");
  5563   000E10  0E85               	movlw	low (STR_62+44)
  5564   000E12  6E07               	movwf	uart_puts@s^0,c
  5565   000E14  0E2D               	movlw	high (STR_62+44)
  5566   000E16  6E08               	movwf	(uart_puts@s+1)^0,c
  5567   000E18  EC84  F012         	call	_uart_puts	;wreg free
  5568   000E1C                     l5959:
  5569                           
  5570                           ;download_log.c: 64:     TMR0ON = 0;
  5571   000E1C  9ED5               	bcf	4053,7,c	;volatile
  5572   000E1E                     
  5573                           ;download_log.c: 65:     sec_delay = 20000;
  5574   000E1E  0E20               	movlw	32
  5575   000E20  0100               	movlb	0	; () banked
  5576   000E22  6F70               	movwf	_sec_delay& (0+255),b
  5577   000E24  0E4E               	movlw	78
  5578   000E26  6F71               	movwf	(_sec_delay+1)& (0+255),b
  5579   000E28  0E00               	movlw	0
  5580   000E2A  6F72               	movwf	(_sec_delay+2)& (0+255),b
  5581   000E2C  0E00               	movlw	0
  5582   000E2E  6F73               	movwf	(_sec_delay+3)& (0+255),b
  5583   000E30                     
  5584                           ; BSR set to: 0
  5585                           ;download_log.c: 66:     TMR0 = 6;
  5586   000E30  0E00               	movlw	0
  5587   000E32  6ED7               	movwf	215,c	;volatile
  5588   000E34  0E06               	movlw	6
  5589   000E36  6ED6               	movwf	214,c	;volatile
  5590   000E38                     
  5591                           ; BSR set to: 0
  5592                           ;download_log.c: 67:     TMR0ON = 1;
  5593   000E38  8ED5               	bsf	4053,7,c	;volatile
  5594   000E3A                     l5967:
  5595                           
  5596                           ; BSR set to: 0
  5597   000E3A  5170               	movf	_sec_delay& (0+255),w,b
  5598   000E3C  1171               	iorwf	(_sec_delay+1)& (0+255),w,b
  5599   000E3E  1172               	iorwf	(_sec_delay+2)& (0+255),w,b
  5600   000E40  1173               	iorwf	(_sec_delay+3)& (0+255),w,b
  5601   000E42  A4D8               	btfss	status,2,c
  5602   000E44  EF26  F007         	goto	u4761
  5603   000E48  EF28  F007         	goto	u4760
  5604   000E4C                     u4761:
  5605   000E4C  EF1D  F007         	goto	l5967
  5606   000E50                     u4760:
  5607   000E50                     
  5608                           ; BSR set to: 0
  5609                           ;download_log.c: 71:     back_f = 1;
  5610   000E50  0E01               	movlw	1
  5611   000E52  6F8C               	movwf	_back_f& (0+255),b
  5612                           
  5613                           ;download_log.c: 72:     main_f = 2;
  5614   000E54  0E02               	movlw	2
  5615   000E56  6F8B               	movwf	_main_f& (0+255),b
  5616   000E58                     
  5617                           ; BSR set to: 0
  5618   000E58  0012               	return		;funcret
  5619   000E5A                     __end_of_download_log:
  5620                           	callstack 0
  5621                           
  5622 ;; *************** function _uart_puts *****************
  5623 ;; Defined at:
  5624 ;;		line 69 in file "uart.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5627 ;;		 -> STR_67(3), STR_66(17), STR_65(3), STR_64(3), 
  5628 ;;		 -> STR_63(3), download_log@str(30), STR_61(34), STR_60(34), 
  5629 ;;		 -> STR_59(3), 
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;		None
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  2    6[COMRAM] int 
  5634 ;; Registers used:
  5635 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5641 ;;      Params:         2       0       0       0       0       0       0
  5642 ;;      Locals:         0       0       0       0       0       0       0
  5643 ;;      Temps:          0       0       0       0       0       0       0
  5644 ;;      Totals:         2       0       0       0       0       0       0
  5645 ;;Total ram usage:        2 bytes
  5646 ;; Hardware stack levels used: 1
  5647 ;; Hardware stack levels required when called: 3
  5648 ;; This function calls:
  5649 ;;		_uart_putch
  5650 ;; This function is called by:
  5651 ;;		_download_log
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text18
  5656   002508                     __ptext18:
  5657                           	callstack 0
  5658   002508                     _uart_puts:
  5659                           	callstack 26
  5660   002508                     
  5661                           ;uart.c: 69: int uart_puts(const char *s);uart.c: 70: {;uart.c: 71:  while(*s)
  5662   002508  EF9A  F012         	goto	l4271
  5663   00250C                     l4267:
  5664                           
  5665                           ;uart.c: 72:  {;uart.c: 73:   uart_putch(*s++);
  5666   00250C  C007  FFF6         	movff	uart_puts@s,tblptrl
  5667   002510  C008  FFF7         	movff	uart_puts@s+1,tblptrh
  5668   002514  6AF8               	clrf	tblptru,c
  5669   002516  0E05               	movlw	(high __ramtop+-1)
  5670   002518  64F7               	cpfsgt	tblptrh,c
  5671   00251A  D003               	bra	u2747
  5672   00251C  0008               	tblrd		*
  5673   00251E  50F5               	movf	tablat,w,c
  5674   002520  D005               	bra	u2740
  5675   002522                     u2747:
  5676   002522  CFF6 FFE1          	movff	tblptrl,fsr1l
  5677   002526  CFF7 FFE2          	movff	tblptrh,fsr1h
  5678   00252A  50E7               	movf	indf1,w,c
  5679   00252C                     u2740:
  5680   00252C  ECBC  F014         	call	_uart_putch
  5681   002530  4A07               	infsnz	uart_puts@s^0,f,c
  5682   002532  2A08               	incf	(uart_puts@s+1)^0,f,c
  5683   002534                     l4271:
  5684                           
  5685                           ;uart.c: 71:  while(*s)
  5686   002534  C007  FFF6         	movff	uart_puts@s,tblptrl
  5687   002538  C008  FFF7         	movff	uart_puts@s+1,tblptrh
  5688   00253C  6AF8               	clrf	tblptru,c
  5689   00253E  0E05               	movlw	(high __ramtop+-1)
  5690   002540  64F7               	cpfsgt	tblptrh,c
  5691   002542  D003               	bra	u2757
  5692   002544  0008               	tblrd		*
  5693   002546  50F5               	movf	tablat,w,c
  5694   002548  D005               	bra	u2750
  5695   00254A                     u2757:
  5696   00254A  CFF6 FFE1          	movff	tblptrl,fsr1l
  5697   00254E  CFF7 FFE2          	movff	tblptrh,fsr1h
  5698   002552  50E7               	movf	indf1,w,c
  5699   002554                     u2750:
  5700   002554  0900               	iorlw	0
  5701   002556  A4D8               	btfss	status,2,c
  5702   002558  EFB0  F012         	goto	u2761
  5703   00255C  EFB2  F012         	goto	u2760
  5704   002560                     u2761:
  5705   002560  EF86  F012         	goto	l4267
  5706   002564                     u2760:
  5707   002564  0012               	return		;funcret
  5708   002566                     __end_of_uart_puts:
  5709                           	callstack 0
  5710                           
  5711 ;; *************** function _uart_putch *****************
  5712 ;; Defined at:
  5713 ;;		line 57 in file "uart.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;  byte            1    wreg     unsigned char 
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;  byte            1    5[COMRAM] unsigned char 
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      void 
  5720 ;; Registers used:
  5721 ;;		wreg
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5727 ;;      Params:         0       0       0       0       0       0       0
  5728 ;;      Locals:         1       0       0       0       0       0       0
  5729 ;;      Temps:          0       0       0       0       0       0       0
  5730 ;;      Totals:         1       0       0       0       0       0       0
  5731 ;;Total ram usage:        1 bytes
  5732 ;; Hardware stack levels used: 1
  5733 ;; Hardware stack levels required when called: 2
  5734 ;; This function calls:
  5735 ;;		Nothing
  5736 ;; This function is called by:
  5737 ;;		_uart_puts
  5738 ;;		_uart_getche
  5739 ;; This function uses a non-reentrant model
  5740 ;;
  5741                           
  5742                           	psect	text19
  5743   002978                     __ptext19:
  5744                           	callstack 0
  5745   002978                     _uart_putch:
  5746                           	callstack 26
  5747                           
  5748                           ;incstack = 0
  5749                           ;uart_putch@byte stored from wreg
  5750   002978  6E06               	movwf	uart_putch@byte^0,c
  5751   00297A                     l1269:
  5752                           
  5753                           ;uart.c: 61:  while(!TXIF)
  5754   00297A  A89E               	btfss	3998,4,c	;volatile
  5755   00297C  EFC2  F014         	goto	u2611
  5756   002980  EFC4  F014         	goto	u2610
  5757   002984                     u2611:
  5758   002984  EFBD  F014         	goto	l1269
  5759   002988                     u2610:
  5760   002988                     
  5761                           ;uart.c: 65:  TXIF = 0;
  5762   002988  989E               	bcf	3998,4,c	;volatile
  5763   00298A                     
  5764                           ;uart.c: 66:  TXREG = byte;
  5765   00298A  C006  FFAD         	movff	uart_putch@byte,4013	;volatile
  5766   00298E  0012               	return		;funcret
  5767   002990                     __end_of_uart_putch:
  5768                           	callstack 0
  5769                           
  5770 ;; *************** function _read_external_eeprom *****************
  5771 ;; Defined at:
  5772 ;;		line 24 in file "extern_eeprom.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;  address         1    wreg     unsigned char 
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;  address         1    6[COMRAM] unsigned char 
  5777 ;;  data            1    7[COMRAM] unsigned char 
  5778 ;; Return value:  Size  Location     Type
  5779 ;;                  1    wreg      unsigned char 
  5780 ;; Registers used:
  5781 ;;		wreg, status,2, cstack
  5782 ;; Tracked objects:
  5783 ;;		On entry : 0/0
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5787 ;;      Params:         0       0       0       0       0       0       0
  5788 ;;      Locals:         2       0       0       0       0       0       0
  5789 ;;      Temps:          0       0       0       0       0       0       0
  5790 ;;      Totals:         2       0       0       0       0       0       0
  5791 ;;Total ram usage:        2 bytes
  5792 ;; Hardware stack levels used: 1
  5793 ;; Hardware stack levels required when called: 5
  5794 ;; This function calls:
  5795 ;;		_i2c_read
  5796 ;;		_i2c_rep_start
  5797 ;;		_i2c_start
  5798 ;;		_i2c_stop
  5799 ;;		_i2c_write
  5800 ;; This function is called by:
  5801 ;;		_download_log
  5802 ;;		_main
  5803 ;;		_view_log
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text20
  5808   00287E                     __ptext20:
  5809                           	callstack 0
  5810   00287E                     _read_external_eeprom:
  5811                           	callstack 24
  5812                           
  5813                           ;incstack = 0
  5814                           ;read_external_eeprom@address stored from wreg
  5815   00287E  6E07               	movwf	read_external_eeprom@address^0,c
  5816   002880                     
  5817                           ;extern_eeprom.c: 24: unsigned char read_external_eeprom(unsigned char address);extern_e
      +                          eprom.c: 25: {;extern_eeprom.c: 26:     unsigned char data;;extern_eeprom.c: 28:     i2c
      +                          _start();
  5818   002880  EC18  F015         	call	_i2c_start	;wreg free
  5819   002884                     
  5820                           ;extern_eeprom.c: 29:     i2c_write(0xA0);
  5821   002884  0EA0               	movlw	160
  5822   002886  EC06  F015         	call	_i2c_write
  5823   00288A                     
  5824                           ;extern_eeprom.c: 30:     i2c_write(address);
  5825   00288A  5007               	movf	read_external_eeprom@address^0,w,c
  5826   00288C  EC06  F015         	call	_i2c_write
  5827   002890                     
  5828                           ;extern_eeprom.c: 31:     i2c_rep_start();
  5829   002890  EC0C  F015         	call	_i2c_rep_start	;wreg free
  5830   002894                     
  5831                           ;extern_eeprom.c: 32:     i2c_write(0xA1);
  5832   002894  0EA1               	movlw	161
  5833   002896  EC06  F015         	call	_i2c_write
  5834                           
  5835                           ;extern_eeprom.c: 33:     data = i2c_read();
  5836   00289A  EC00  F015         	call	_i2c_read	;wreg free
  5837   00289E  6E08               	movwf	read_external_eeprom@data^0,c
  5838   0028A0                     
  5839                           ;extern_eeprom.c: 34:     i2c_stop();
  5840   0028A0  EC14  F015         	call	_i2c_stop	;wreg free
  5841                           
  5842                           ;extern_eeprom.c: 36:     return data;
  5843   0028A4  5008               	movf	read_external_eeprom@data^0,w,c
  5844   0028A6  0012               	return		;funcret
  5845   0028A8                     __end_of_read_external_eeprom:
  5846                           	callstack 0
  5847                           
  5848 ;; *************** function _dashboard *****************
  5849 ;; Defined at:
  5850 ;;		line 49 in file "dashboard.c"
  5851 ;; Parameters:    Size  Location     Type
  5852 ;;  key             1    wreg     unsigned char 
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;  key             1   39[BANK0 ] unsigned char 
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  1    wreg      void 
  5857 ;; Registers used:
  5858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5864 ;;      Params:         0       0       0       0       0       0       0
  5865 ;;      Locals:         0       9       0       0       0       0       0
  5866 ;;      Temps:          0       0       0       0       0       0       0
  5867 ;;      Totals:         0       9       0       0       0       0       0
  5868 ;;Total ram usage:        9 bytes
  5869 ;; Hardware stack levels used: 1
  5870 ;; Hardware stack levels required when called: 12
  5871 ;; This function calls:
  5872 ;;		_clcd_print
  5873 ;;		_get_time
  5874 ;;		_sprintf
  5875 ;;		_store_event
  5876 ;; This function is called by:
  5877 ;;		_main
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           	psect	text21
  5882   00164E                     __ptext21:
  5883                           	callstack 0
  5884   00164E                     _dashboard:
  5885                           	callstack 18
  5886                           
  5887                           ;incstack = 0
  5888                           ;dashboard@key stored from wreg
  5889   00164E  0100               	movlb	0	; () banked
  5890   001650  6FD6               	movwf	dashboard@key& (0+255),b
  5891   001652                     
  5892                           ;dashboard.c: 49: void dashboard(char key);dashboard.c: 50: {;dashboard.c: 52:     switc
      +                          h(key)
  5893   001652  EF8E  F00B         	goto	l5919
  5894   001656                     l5883:
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;dashboard.c: 55:             index = 8;
  5898   001656  0E08               	movlw	8
  5899   001658  6F94               	movwf	_index& (0+255),b
  5900   00165A                     l5885:
  5901                           
  5902                           ; BSR set to: 0
  5903                           ;dashboard.c: 56:             store_event(time,index,speed);
  5904   00165A  0EA6               	movlw	low _time
  5905   00165C  6FCD               	movwf	store_event@time& (0+255),b
  5906   00165E  C094  F0CE         	movff	_index,store_event@index
  5907   001662  C090  F0CF         	movff	_speed,store_event@speed
  5908   001666  ECF8  F00D         	call	_store_event	;wreg free
  5909                           
  5910                           ;dashboard.c: 57:             break;
  5911   00166A  EF9E  F00B         	goto	l5921
  5912   00166E                     l5887:
  5913                           
  5914                           ; BSR set to: 0
  5915                           ;dashboard.c: 60:             index = index == 8 ? 1 : (index == 7 ? 7: index + 1);
  5916   00166E  0E08               	movlw	8
  5917   001670  1994               	xorwf	_index& (0+255),w,b
  5918   001672  B4D8               	btfsc	status,2,c
  5919   001674  EF3E  F00B         	goto	u4691
  5920   001678  EF40  F00B         	goto	u4690
  5921   00167C                     u4691:
  5922   00167C  EF5B  F00B         	goto	l5897
  5923   001680                     u4690:
  5924   001680                     
  5925                           ; BSR set to: 0
  5926   001680  0E07               	movlw	7
  5927   001682  1994               	xorwf	_index& (0+255),w,b
  5928   001684  B4D8               	btfsc	status,2,c
  5929   001686  EF47  F00B         	goto	u4701
  5930   00168A  EF49  F00B         	goto	u4700
  5931   00168E                     u4701:
  5932   00168E  EF51  F00B         	goto	l5893
  5933   001692                     u4700:
  5934   001692                     
  5935                           ; BSR set to: 0
  5936   001692  0E01               	movlw	1
  5937   001694  2594               	addwf	_index& (0+255),w,b
  5938   001696  6FD9               	movwf	_dashboard$194& (0+255),b
  5939   001698  6BDA               	clrf	(_dashboard$194+1)& (0+255),b
  5940   00169A  0E00               	movlw	0
  5941   00169C  23DA               	addwfc	(_dashboard$194+1)& (0+255),f,b
  5942   00169E  EF55  F00B         	goto	l5895
  5943   0016A2                     l5893:
  5944                           
  5945                           ; BSR set to: 0
  5946   0016A2  0E00               	movlw	0
  5947   0016A4  6FDA               	movwf	(_dashboard$194+1)& (0+255),b
  5948   0016A6  0E07               	movlw	7
  5949   0016A8  6FD9               	movwf	_dashboard$194& (0+255),b
  5950   0016AA                     l5895:
  5951                           
  5952                           ; BSR set to: 0
  5953   0016AA  C0D9  F0D7         	movff	_dashboard$194,_dashboard$193
  5954   0016AE  C0DA  F0D8         	movff	_dashboard$194+1,_dashboard$193+1
  5955   0016B2  EF5F  F00B         	goto	l5899
  5956   0016B6                     l5897:
  5957                           
  5958                           ; BSR set to: 0
  5959   0016B6  0E00               	movlw	0
  5960   0016B8  6FD8               	movwf	(_dashboard$193+1)& (0+255),b
  5961   0016BA  0E01               	movlw	1
  5962   0016BC  6FD7               	movwf	_dashboard$193& (0+255),b
  5963   0016BE                     l5899:
  5964                           
  5965                           ; BSR set to: 0
  5966   0016BE  C0D7  F094         	movff	_dashboard$193,_index
  5967   0016C2  EF2D  F00B         	goto	l5885
  5968   0016C6                     l5903:
  5969                           
  5970                           ; BSR set to: 0
  5971                           ;dashboard.c: 64:             index = index == 8 ? 1 : (index < 2 ? 1 : index - 1);
  5972   0016C6  0E08               	movlw	8
  5973   0016C8  1994               	xorwf	_index& (0+255),w,b
  5974   0016CA  B4D8               	btfsc	status,2,c
  5975   0016CC  EF6A  F00B         	goto	u4711
  5976   0016D0  EF6C  F00B         	goto	u4710
  5977   0016D4                     u4711:
  5978   0016D4  EF86  F00B         	goto	l5913
  5979   0016D8                     u4710:
  5980   0016D8                     
  5981                           ; BSR set to: 0
  5982   0016D8  0E01               	movlw	1
  5983   0016DA  6594               	cpfsgt	_index& (0+255),b
  5984   0016DC  EF72  F00B         	goto	u4721
  5985   0016E0  EF74  F00B         	goto	u4720
  5986   0016E4                     u4721:
  5987   0016E4  EF7C  F00B         	goto	l5909
  5988   0016E8                     u4720:
  5989   0016E8                     
  5990                           ; BSR set to: 0
  5991   0016E8  0EFF               	movlw	255
  5992   0016EA  2594               	addwf	_index& (0+255),w,b
  5993   0016EC  6FDD               	movwf	_dashboard$196& (0+255),b
  5994   0016EE  6BDE               	clrf	(_dashboard$196+1)& (0+255),b
  5995   0016F0  0EFF               	movlw	255
  5996   0016F2  23DE               	addwfc	(_dashboard$196+1)& (0+255),f,b
  5997   0016F4  EF80  F00B         	goto	l5911
  5998   0016F8                     l5909:
  5999                           
  6000                           ; BSR set to: 0
  6001   0016F8  0E00               	movlw	0
  6002   0016FA  6FDE               	movwf	(_dashboard$196+1)& (0+255),b
  6003   0016FC  0E01               	movlw	1
  6004   0016FE  6FDD               	movwf	_dashboard$196& (0+255),b
  6005   001700                     l5911:
  6006                           
  6007                           ; BSR set to: 0
  6008   001700  C0DD  F0DB         	movff	_dashboard$196,_dashboard$195
  6009   001704  C0DE  F0DC         	movff	_dashboard$196+1,_dashboard$195+1
  6010   001708  EF8A  F00B         	goto	l5915
  6011   00170C                     l5913:
  6012                           
  6013                           ; BSR set to: 0
  6014   00170C  0E00               	movlw	0
  6015   00170E  6FDC               	movwf	(_dashboard$195+1)& (0+255),b
  6016   001710  0E01               	movlw	1
  6017   001712  6FDB               	movwf	_dashboard$195& (0+255),b
  6018   001714                     l5915:
  6019                           
  6020                           ; BSR set to: 0
  6021   001714  C0DB  F094         	movff	_dashboard$195,_index
  6022   001718  EF2D  F00B         	goto	l5885
  6023   00171C                     l5919:
  6024   00171C  0100               	movlb	0	; () banked
  6025   00171E  51D6               	movf	dashboard@key& (0+255),w,b
  6026                           
  6027                           ; Switch size 1, requested type "simple"
  6028                           ; Number of cases is 3, Range of values is 1 to 3
  6029                           ; switch strategies available:
  6030                           ; Name         Instructions Cycles
  6031                           ; simple_byte           10     6 (average)
  6032                           ;	Chosen strategy is simple_byte
  6033   001720  0A01               	xorlw	1	; case 1
  6034   001722  B4D8               	btfsc	status,2,c
  6035   001724  EF2B  F00B         	goto	l5883
  6036   001728  0A03               	xorlw	3	; case 2
  6037   00172A  B4D8               	btfsc	status,2,c
  6038   00172C  EF37  F00B         	goto	l5887
  6039   001730  0A01               	xorlw	1	; case 3
  6040   001732  B4D8               	btfsc	status,2,c
  6041   001734  EF63  F00B         	goto	l5903
  6042   001738  EF9E  F00B         	goto	l5921
  6043   00173C                     l5921:
  6044                           
  6045                           ;dashboard.c: 71:     sprintf(str, "  %s  %2d",gear[index],speed);
  6046   00173C  0E95               	movlw	low _str
  6047   00173E  0100               	movlb	0	; () banked
  6048   001740  6FAF               	movwf	sprintf@s& (0+255),b
  6049   001742  0ECC               	movlw	low STR_46
  6050   001744  6FB0               	movwf	sprintf@fmt& (0+255),b
  6051   001746  0E2F               	movlw	high STR_46
  6052   001748  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  6053   00174A  5194               	movf	_index& (0+255),w,b
  6054   00174C  0D02               	mullw	2
  6055   00174E  0E20               	movlw	low _gear
  6056   001750  24F3               	addwf	243,w,c
  6057   001752  6ED9               	movwf	fsr2l,c
  6058   001754  0E01               	movlw	high _gear
  6059   001756  20F4               	addwfc	prodh,w,c
  6060   001758  6EDA               	movwf	fsr2h,c
  6061   00175A  CFDE F0B2          	movff	postinc2,?_sprintf+3
  6062   00175E  CFDD F0B3          	movff	postdec2,?_sprintf+4
  6063   001762  C090  F0B4         	movff	_speed,?_sprintf+5
  6064   001766  6BB5               	clrf	(?_sprintf+6)& (0+255),b
  6065   001768  ECD1  F013         	call	_sprintf	;wreg free
  6066   00176C                     
  6067                           ;dashboard.c: 72:     clcd_print("TIME     GEAR SP", (0x80 + (0)));
  6068   00176C  0E0A               	movlw	low STR_47
  6069   00176E  6E08               	movwf	clcd_print@data^0,c
  6070   001770  0E2F               	movlw	high STR_47
  6071   001772  6E09               	movwf	(clcd_print@data+1)^0,c
  6072   001774  0E80               	movlw	128
  6073   001776  6E0A               	movwf	clcd_print@addr^0,c
  6074   001778  EC1C  F012         	call	_clcd_print	;wreg free
  6075   00177C                     
  6076                           ;dashboard.c: 73:     get_time();
  6077   00177C  EC2F  F011         	call	_get_time	;wreg free
  6078   001780                     
  6079                           ;dashboard.c: 74:  clcd_print(time, (0xC0 + (0)));
  6080   001780  0EA6               	movlw	low _time
  6081   001782  6E08               	movwf	clcd_print@data^0,c
  6082   001784  6A09               	clrf	(clcd_print@data+1)^0,c
  6083   001786  0EC0               	movlw	192
  6084   001788  6E0A               	movwf	clcd_print@addr^0,c
  6085   00178A  EC1C  F012         	call	_clcd_print	;wreg free
  6086   00178E                     
  6087                           ;dashboard.c: 75:     clcd_print(str, (0xC0 + (8)));
  6088   00178E  0E95               	movlw	low _str
  6089   001790  6E08               	movwf	clcd_print@data^0,c
  6090   001792  6A09               	clrf	(clcd_print@data+1)^0,c
  6091   001794  0EC8               	movlw	200
  6092   001796  6E0A               	movwf	clcd_print@addr^0,c
  6093   001798  EC1C  F012         	call	_clcd_print	;wreg free
  6094   00179C  0012               	return		;funcret
  6095   00179E                     __end_of_dashboard:
  6096                           	callstack 0
  6097                           
  6098 ;; *************** function _store_event *****************
  6099 ;; Defined at:
  6100 ;;		line 37 in file "store_event.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;  time            1   30[BANK0 ] PTR unsigned char 
  6103 ;;		 -> time(9), 
  6104 ;;  index           1   31[BANK0 ] unsigned char 
  6105 ;;  speed           1   32[BANK0 ] unsigned char 
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;		None
  6108 ;; Return value:  Size  Location     Type
  6109 ;;                  1    wreg      void 
  6110 ;; Registers used:
  6111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/0
  6114 ;;		On exit  : 0/0
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6117 ;;      Params:         0       3       0       0       0       0       0
  6118 ;;      Locals:         0       6       0       0       0       0       0
  6119 ;;      Temps:          0       0       0       0       0       0       0
  6120 ;;      Totals:         0       9       0       0       0       0       0
  6121 ;;Total ram usage:        9 bytes
  6122 ;; Hardware stack levels used: 1
  6123 ;; Hardware stack levels required when called: 11
  6124 ;; This function calls:
  6125 ;;		___wmul
  6126 ;;		_write_10_bytes
  6127 ;; This function is called by:
  6128 ;;		_dashboard
  6129 ;;		_main
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           	psect	text22
  6134   001BF0                     __ptext22:
  6135                           	callstack 0
  6136   001BF0                     _store_event:
  6137                           	callstack 19
  6138   001BF0                     
  6139                           ;store_event.c: 37: void store_event(char *time,unsigned char index,unsigned char speed)
      +                          ;store_event.c: 38: {;store_event.c: 40:     if(full_f == 0)
  6140   001BF0  0100               	movlb	0	; () banked
  6141   001BF2  518E               	movf	_full_f& (0+255),w,b
  6142   001BF4  A4D8               	btfss	status,2,c
  6143   001BF6  EFFF  F00D         	goto	u4501
  6144   001BFA  EF01  F00E         	goto	u4500
  6145   001BFE                     u4501:
  6146   001BFE  EF2E  F00E         	goto	l5723
  6147   001C02                     u4500:
  6148   001C02                     
  6149                           ; BSR set to: 0
  6150                           ;store_event.c: 41:     {;store_event.c: 42:         s=0;
  6151   001C02  0E00               	movlw	0
  6152   001C04  6E58               	movwf	_s^0,c
  6153   001C06                     
  6154                           ; BSR set to: 0
  6155                           ;store_event.c: 43:         e++;
  6156   001C06  2B8D               	incf	_e& (0+255),f,b
  6157   001C08                     
  6158                           ; BSR set to: 0
  6159                           ;store_event.c: 44:         if(e == 10)
  6160   001C08  0E0A               	movlw	10
  6161   001C0A  198D               	xorwf	_e& (0+255),w,b
  6162   001C0C  A4D8               	btfss	status,2,c
  6163   001C0E  EF0B  F00E         	goto	u4511
  6164   001C12  EF0D  F00E         	goto	u4510
  6165   001C16                     u4511:
  6166   001C16  EF13  F00E         	goto	l5719
  6167   001C1A                     u4510:
  6168   001C1A                     
  6169                           ; BSR set to: 0
  6170                           ;store_event.c: 45:         {;store_event.c: 46:             s = 1;
  6171   001C1A  0E01               	movlw	1
  6172   001C1C  6E58               	movwf	_s^0,c
  6173                           
  6174                           ;store_event.c: 47:             e = 0;
  6175   001C1E  0E00               	movlw	0
  6176   001C20  6F8D               	movwf	_e& (0+255),b
  6177                           
  6178                           ;store_event.c: 48:             full_f = 1;
  6179   001C22  0E01               	movlw	1
  6180   001C24  6F8E               	movwf	_full_f& (0+255),b
  6181   001C26                     l5719:
  6182                           
  6183                           ; BSR set to: 0
  6184                           ;store_event.c: 51:         write_10_bytes(e * 10, time, index, speed);
  6185   001C26  C08D  F006         	movff	_e,___wmul@multiplier
  6186   001C2A  6A07               	clrf	(___wmul@multiplier+1)^0,c
  6187   001C2C  0E00               	movlw	0
  6188   001C2E  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  6189   001C30  0E0A               	movlw	10
  6190   001C32  6E08               	movwf	___wmul@multiplicand^0,c
  6191   001C34  EC69  F014         	call	___wmul	;wreg free
  6192   001C38  C006  F0D4         	movff	?___wmul,_store_event$1801
  6193   001C3C  C007  F0D5         	movff	?___wmul+1,_store_event$1801+1
  6194   001C40                     
  6195                           ;store_event.c: 51:         write_10_bytes(e * 10, time, index, speed);
  6196   001C40  C0D4  F0C8         	movff	_store_event$1801,write_10_bytes@ptr
  6197   001C44  C0D5  F0C9         	movff	_store_event$1801+1,write_10_bytes@ptr+1
  6198   001C48  C0CD  F0CA         	movff	store_event@time,write_10_bytes@time
  6199   001C4C  C0CE  F0CB         	movff	store_event@index,write_10_bytes@index
  6200   001C50  C0CF  F0CC         	movff	store_event@speed,write_10_bytes@speed
  6201   001C54  EC76  F00C         	call	_write_10_bytes	;wreg free
  6202                           
  6203                           ;store_event.c: 53:     }
  6204   001C58  EF62  F00E         	goto	l820
  6205   001C5C                     l5723:
  6206                           
  6207                           ; BSR set to: 0
  6208   001C5C  058E               	decf	_full_f& (0+255),w,b
  6209   001C5E  A4D8               	btfss	status,2,c
  6210   001C60  EF34  F00E         	goto	u4521
  6211   001C64  EF36  F00E         	goto	u4520
  6212   001C68                     u4521:
  6213   001C68  EF62  F00E         	goto	l820
  6214   001C6C                     u4520:
  6215   001C6C                     
  6216                           ; BSR set to: 0
  6217                           ;store_event.c: 55:     {;store_event.c: 56:         s++;
  6218   001C6C  2A58               	incf	_s^0,f,c
  6219                           
  6220                           ;store_event.c: 57:         e++;
  6221   001C6E  2B8D               	incf	_e& (0+255),f,b
  6222   001C70                     
  6223                           ; BSR set to: 0
  6224                           ;store_event.c: 58:         s = s==10? 0: s;
  6225   001C70  0E0A               	movlw	10
  6226   001C72  1858               	xorwf	_s^0,w,c
  6227   001C74  B4D8               	btfsc	status,2,c
  6228   001C76  EF3F  F00E         	goto	u4531
  6229   001C7A  EF41  F00E         	goto	u4530
  6230   001C7E                     u4531:
  6231   001C7E  EF46  F00E         	goto	l5731
  6232   001C82                     u4530:
  6233   001C82                     
  6234                           ; BSR set to: 0
  6235   001C82  C058  F0D0         	movff	_s,_store_event$678
  6236   001C86  6BD1               	clrf	(_store_event$678+1)& (0+255),b
  6237   001C88  EF4A  F00E         	goto	l5733
  6238   001C8C                     l5731:
  6239                           
  6240                           ; BSR set to: 0
  6241   001C8C  0E00               	movlw	0
  6242   001C8E  6FD1               	movwf	(_store_event$678+1)& (0+255),b
  6243   001C90  0E00               	movlw	0
  6244   001C92  6FD0               	movwf	_store_event$678& (0+255),b
  6245   001C94                     l5733:
  6246                           
  6247                           ; BSR set to: 0
  6248   001C94  C0D0  F058         	movff	_store_event$678,_s
  6249   001C98                     
  6250                           ; BSR set to: 0
  6251                           ;store_event.c: 59:         e = e==10? 0: e;
  6252   001C98  0E0A               	movlw	10
  6253   001C9A  198D               	xorwf	_e& (0+255),w,b
  6254   001C9C  B4D8               	btfsc	status,2,c
  6255   001C9E  EF53  F00E         	goto	u4541
  6256   001CA2  EF55  F00E         	goto	u4540
  6257   001CA6                     u4541:
  6258   001CA6  EF5A  F00E         	goto	l5739
  6259   001CAA                     u4540:
  6260   001CAA                     
  6261                           ; BSR set to: 0
  6262   001CAA  C08D  F0D2         	movff	_e,_store_event$679
  6263   001CAE  6BD3               	clrf	(_store_event$679+1)& (0+255),b
  6264   001CB0  EF5E  F00E         	goto	l5741
  6265   001CB4                     l5739:
  6266                           
  6267                           ; BSR set to: 0
  6268   001CB4  0E00               	movlw	0
  6269   001CB6  6FD3               	movwf	(_store_event$679+1)& (0+255),b
  6270   001CB8  0E00               	movlw	0
  6271   001CBA  6FD2               	movwf	_store_event$679& (0+255),b
  6272   001CBC                     l5741:
  6273                           
  6274                           ; BSR set to: 0
  6275   001CBC  C0D2  F08D         	movff	_store_event$679,_e
  6276   001CC0  EF13  F00E         	goto	l5719
  6277   001CC4                     l820:
  6278   001CC4  0012               	return		;funcret
  6279   001CC6                     __end_of_store_event:
  6280                           	callstack 0
  6281                           
  6282 ;; *************** function _write_10_bytes *****************
  6283 ;; Defined at:
  6284 ;;		line 18 in file "store_event.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;  ptr             2   25[BANK0 ] PTR unsigned char 
  6287 ;;		 -> RAM(1535), 
  6288 ;;  time            1   27[BANK0 ] PTR unsigned char 
  6289 ;;		 -> time(9), 
  6290 ;;  index           1   28[BANK0 ] unsigned char 
  6291 ;;  speed           1   29[BANK0 ] unsigned char 
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;  tm              3   72[COMRAM] unsigned char [3]
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  1    wreg      void 
  6296 ;; Registers used:
  6297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6303 ;;      Params:         0       5       0       0       0       0       0
  6304 ;;      Locals:         3       0       0       0       0       0       0
  6305 ;;      Temps:          2       0       0       0       0       0       0
  6306 ;;      Totals:         5       5       0       0       0       0       0
  6307 ;;Total ram usage:       10 bytes
  6308 ;; Hardware stack levels used: 1
  6309 ;; Hardware stack levels required when called: 10
  6310 ;; This function calls:
  6311 ;;		_sprintf
  6312 ;;		_write_external_eeprom
  6313 ;; This function is called by:
  6314 ;;		_store_event
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           
  6318                           	psect	text23
  6319   0018EC                     __ptext23:
  6320                           	callstack 0
  6321   0018EC                     _write_10_bytes:
  6322                           	callstack 19
  6323   0018EC                     
  6324                           ;store_event.c: 18: void write_10_bytes(char *ptr, char *time,unsigned char index,unsign
      +                          ed char speed);store_event.c: 19: {;store_event.c: 21:     write_external_eeprom(ptr , t
      +                          ime[0]);
  6325   0018EC  0100               	movlb	0	; () banked
  6326   0018EE  51CA               	movf	write_10_bytes@time& (0+255),w,b
  6327   0018F0  6ED9               	movwf	fsr2l,c
  6328   0018F2  6ADA               	clrf	fsr2h,c
  6329   0018F4  50DF               	movf	indf2,w,c
  6330   0018F6  6E07               	movwf	write_external_eeprom@data^0,c
  6331   0018F8  51C8               	movf	write_10_bytes@ptr& (0+255),w,b
  6332   0018FA  ECB1  F013         	call	_write_external_eeprom
  6333                           
  6334                           ;store_event.c: 22:     write_external_eeprom(ptr+1, time[1]);
  6335   0018FE  0100               	movlb	0	; () banked
  6336   001900  51CA               	movf	write_10_bytes@time& (0+255),w,b
  6337   001902  6ED9               	movwf	fsr2l,c
  6338   001904  6ADA               	clrf	fsr2h,c
  6339   001906  0E01               	movlw	1
  6340   001908  26D9               	addwf	fsr2l,f,c
  6341   00190A  50DF               	movf	indf2,w,c
  6342   00190C  6E07               	movwf	write_external_eeprom@data^0,c
  6343   00190E  29C8               	incf	write_10_bytes@ptr& (0+255),w,b
  6344   001910  ECB1  F013         	call	_write_external_eeprom
  6345                           
  6346                           ;store_event.c: 23:     write_external_eeprom(ptr+2, time[3]);
  6347   001914  0100               	movlb	0	; () banked
  6348   001916  51CA               	movf	write_10_bytes@time& (0+255),w,b
  6349   001918  6ED9               	movwf	fsr2l,c
  6350   00191A  6ADA               	clrf	fsr2h,c
  6351   00191C  0E03               	movlw	3
  6352   00191E  26D9               	addwf	fsr2l,f,c
  6353   001920  50DF               	movf	indf2,w,c
  6354   001922  6E07               	movwf	write_external_eeprom@data^0,c
  6355   001924  51C8               	movf	write_10_bytes@ptr& (0+255),w,b
  6356   001926  0F02               	addlw	2
  6357   001928  ECB1  F013         	call	_write_external_eeprom
  6358                           
  6359                           ;store_event.c: 24:     write_external_eeprom(ptr+3, time[4]);
  6360   00192C  0100               	movlb	0	; () banked
  6361   00192E  51CA               	movf	write_10_bytes@time& (0+255),w,b
  6362   001930  6ED9               	movwf	fsr2l,c
  6363   001932  6ADA               	clrf	fsr2h,c
  6364   001934  0E04               	movlw	4
  6365   001936  26D9               	addwf	fsr2l,f,c
  6366   001938  50DF               	movf	indf2,w,c
  6367   00193A  6E07               	movwf	write_external_eeprom@data^0,c
  6368   00193C  51C8               	movf	write_10_bytes@ptr& (0+255),w,b
  6369   00193E  0F03               	addlw	3
  6370   001940  ECB1  F013         	call	_write_external_eeprom
  6371                           
  6372                           ;store_event.c: 25:     write_external_eeprom(ptr+4, time[6]);
  6373   001944  0100               	movlb	0	; () banked
  6374   001946  51CA               	movf	write_10_bytes@time& (0+255),w,b
  6375   001948  6ED9               	movwf	fsr2l,c
  6376   00194A  6ADA               	clrf	fsr2h,c
  6377   00194C  0E06               	movlw	6
  6378   00194E  26D9               	addwf	fsr2l,f,c
  6379   001950  50DF               	movf	indf2,w,c
  6380   001952  6E07               	movwf	write_external_eeprom@data^0,c
  6381   001954  51C8               	movf	write_10_bytes@ptr& (0+255),w,b
  6382   001956  0F04               	addlw	4
  6383   001958  ECB1  F013         	call	_write_external_eeprom
  6384                           
  6385                           ;store_event.c: 26:     write_external_eeprom(ptr+5, time[7]);
  6386   00195C  0100               	movlb	0	; () banked
  6387   00195E  51CA               	movf	write_10_bytes@time& (0+255),w,b
  6388   001960  6ED9               	movwf	fsr2l,c
  6389   001962  6ADA               	clrf	fsr2h,c
  6390   001964  0E07               	movlw	7
  6391   001966  26D9               	addwf	fsr2l,f,c
  6392   001968  50DF               	movf	indf2,w,c
  6393   00196A  6E07               	movwf	write_external_eeprom@data^0,c
  6394   00196C  51C8               	movf	write_10_bytes@ptr& (0+255),w,b
  6395   00196E  0F05               	addlw	5
  6396   001970  ECB1  F013         	call	_write_external_eeprom
  6397   001974                     
  6398                           ;store_event.c: 28:     write_external_eeprom(ptr+6, gear[index][0]);
  6399   001974  0100               	movlb	0	; () banked
  6400   001976  51CB               	movf	write_10_bytes@index& (0+255),w,b
  6401   001978  0D02               	mullw	2
  6402   00197A  0E20               	movlw	low _gear
  6403   00197C  24F3               	addwf	243,w,c
  6404   00197E  6ED9               	movwf	fsr2l,c
  6405   001980  0E01               	movlw	high _gear
  6406   001982  20F4               	addwfc	prodh,w,c
  6407   001984  6EDA               	movwf	fsr2h,c
  6408   001986  CFDE FFF6          	movff	postinc2,tblptrl
  6409   00198A  CFDD FFF7          	movff	postdec2,tblptrh
  6410   00198E                     	if	0	;tblptru may be non-zero
  6411   00198E                     	endif
  6412   00198E                     	if	0	;tblptru may be non-zero
  6413   00198E                     	endif
  6414   00198E  0008               	tblrd		*
  6415   001990  CFF5 F007          	movff	tablat,write_external_eeprom@data
  6416   001994  51C8               	movf	write_10_bytes@ptr& (0+255),w,b
  6417   001996  0F06               	addlw	6
  6418   001998  ECB1  F013         	call	_write_external_eeprom
  6419   00199C                     
  6420                           ;store_event.c: 29:     write_external_eeprom(ptr+7, gear[index][1]);
  6421   00199C  0100               	movlb	0	; () banked
  6422   00199E  51CB               	movf	write_10_bytes@index& (0+255),w,b
  6423   0019A0  0D02               	mullw	2
  6424   0019A2  0E20               	movlw	low _gear
  6425   0019A4  24F3               	addwf	243,w,c
  6426   0019A6  6ED9               	movwf	fsr2l,c
  6427   0019A8  0E01               	movlw	high _gear
  6428   0019AA  20F4               	addwfc	prodh,w,c
  6429   0019AC  6EDA               	movwf	fsr2h,c
  6430   0019AE  CFDE F047          	movff	postinc2,??_write_10_bytes
  6431   0019B2  CFDD F048          	movff	postdec2,??_write_10_bytes+1
  6432   0019B6  0E01               	movlw	1
  6433   0019B8  2647               	addwf	??_write_10_bytes^0,f,c
  6434   0019BA  0E00               	movlw	0
  6435   0019BC  2248               	addwfc	(??_write_10_bytes+1)^0,f,c
  6436   0019BE  C047  FFF6         	movff	??_write_10_bytes,tblptrl
  6437   0019C2  C048  FFF7         	movff	??_write_10_bytes+1,tblptrh
  6438   0019C6                     	if	0	;tblptru may be non-zero
  6439   0019C6                     	endif
  6440   0019C6                     	if	0	;tblptru may be non-zero
  6441   0019C6                     	endif
  6442   0019C6  0008               	tblrd		*
  6443   0019C8  CFF5 F007          	movff	tablat,write_external_eeprom@data
  6444   0019CC  51C8               	movf	write_10_bytes@ptr& (0+255),w,b
  6445   0019CE  0F07               	addlw	7
  6446   0019D0  ECB1  F013         	call	_write_external_eeprom
  6447   0019D4                     
  6448                           ;store_event.c: 31:     char tm[3];;store_event.c: 32:     sprintf(tm,"%d",speed);
  6449   0019D4  0E49               	movlw	low write_10_bytes@tm
  6450   0019D6  0100               	movlb	0	; () banked
  6451   0019D8  6FAF               	movwf	sprintf@s& (0+255),b
  6452   0019DA  0EDD               	movlw	low STR_117
  6453   0019DC  6FB0               	movwf	sprintf@fmt& (0+255),b
  6454   0019DE  0E2F               	movlw	high STR_117
  6455   0019E0  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  6456   0019E2  C0CC  F0B2         	movff	write_10_bytes@speed,?_sprintf+3
  6457   0019E6  6BB3               	clrf	(?_sprintf+4)& (0+255),b
  6458   0019E8  ECD1  F013         	call	_sprintf	;wreg free
  6459   0019EC                     
  6460                           ;store_event.c: 33:     write_external_eeprom(ptr+8, tm[0]);
  6461   0019EC  C049  F007         	movff	write_10_bytes@tm,write_external_eeprom@data
  6462   0019F0  0100               	movlb	0	; () banked
  6463   0019F2  51C8               	movf	write_10_bytes@ptr& (0+255),w,b
  6464   0019F4  0F08               	addlw	8
  6465   0019F6  ECB1  F013         	call	_write_external_eeprom
  6466   0019FA                     
  6467                           ;store_event.c: 34:     write_external_eeprom(ptr+9, tm[1]);
  6468   0019FA  C04A  F007         	movff	write_10_bytes@tm+1,write_external_eeprom@data
  6469   0019FE  0100               	movlb	0	; () banked
  6470   001A00  51C8               	movf	write_10_bytes@ptr& (0+255),w,b
  6471   001A02  0F09               	addlw	9
  6472   001A04  ECB1  F013         	call	_write_external_eeprom
  6473   001A08  0012               	return		;funcret
  6474   001A0A                     __end_of_write_10_bytes:
  6475                           	callstack 0
  6476                           
  6477 ;; *************** function _sprintf *****************
  6478 ;; Defined at:
  6479 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;  s               1    0[BANK0 ] PTR unsigned char 
  6482 ;;		 -> write_10_bytes@tm(3), download_log@str(30), str(17), 
  6483 ;;  fmt             2    1[BANK0 ] PTR const unsigned char 
  6484 ;;		 -> STR_144(3), STR_123(17), STR_117(3), STR_62(47), 
  6485 ;;		 -> STR_46(10), 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;  f              12   58[COMRAM] struct _IO_FILE
  6488 ;;  ret             2    0        int 
  6489 ;;  ap              1   57[COMRAM] PTR void [1]
  6490 ;;		 -> ?_sprintf(2), 
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  2    0[BANK0 ] int 
  6493 ;; Registers used:
  6494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6500 ;;      Params:         0      25       0       0       0       0       0
  6501 ;;      Locals:        13       0       0       0       0       0       0
  6502 ;;      Temps:          0       0       0       0       0       0       0
  6503 ;;      Totals:        13      25       0       0       0       0       0
  6504 ;;Total ram usage:       38 bytes
  6505 ;; Hardware stack levels used: 1
  6506 ;; Hardware stack levels required when called: 9
  6507 ;; This function calls:
  6508 ;;		_vfprintf
  6509 ;; This function is called by:
  6510 ;;		_dashboard
  6511 ;;		_download_log
  6512 ;;		_password
  6513 ;;		_write_10_bytes
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           	psect	text24
  6518   0027A2                     __ptext24:
  6519                           	callstack 0
  6520   0027A2                     _sprintf:
  6521                           	callstack 19
  6522   0027A2  0EB2               	movlw	low (?_sprintf+3)
  6523   0027A4  6E3A               	movwf	sprintf@ap^0,c
  6524   0027A6  C0AF  F03B         	movff	sprintf@s,sprintf@f
  6525   0027AA  0E00               	movlw	0
  6526   0027AC  6E3F               	movwf	(sprintf@f+4)^0,c
  6527   0027AE  0E00               	movlw	0
  6528   0027B0  6E3E               	movwf	(sprintf@f+3)^0,c
  6529   0027B2  0E00               	movlw	0
  6530   0027B4  6E46               	movwf	(sprintf@f+11)^0,c
  6531   0027B6  0E00               	movlw	0
  6532   0027B8  6E45               	movwf	(sprintf@f+10)^0,c
  6533   0027BA  0E3B               	movlw	low sprintf@f
  6534   0027BC  6E34               	movwf	vfprintf@fp^0,c
  6535   0027BE  C0B0  F035         	movff	sprintf@fmt,vfprintf@fmt
  6536   0027C2  C0B1  F036         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6537   0027C6  0E3A               	movlw	low sprintf@ap
  6538   0027C8  6E37               	movwf	vfprintf@ap^0,c
  6539   0027CA  EC70  F013         	call	_vfprintf	;wreg free
  6540   0027CE  0100               	movlb	0	; () banked
  6541   0027D0  51AF               	movf	sprintf@s& (0+255),w,b
  6542   0027D2  243E               	addwf	(sprintf@f+3)^0,w,c
  6543   0027D4  6ED9               	movwf	fsr2l,c
  6544   0027D6  6ADA               	clrf	fsr2h,c
  6545   0027D8  6ADF               	clrf	indf2,c
  6546   0027DA                     
  6547                           ; BSR set to: 0
  6548   0027DA  0012               	return		;funcret
  6549   0027DC                     __end_of_sprintf:
  6550                           	callstack 0
  6551                           
  6552 ;; *************** function _vfprintf *****************
  6553 ;; Defined at:
  6554 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;  fp              1   51[COMRAM] PTR struct _IO_FILE
  6557 ;;		 -> sprintf@f(12), 
  6558 ;;  fmt             2   52[COMRAM] PTR const unsigned char 
  6559 ;;		 -> STR_144(3), STR_123(17), STR_117(3), STR_62(47), 
  6560 ;;		 -> STR_46(10), 
  6561 ;;  ap              1   54[COMRAM] PTR PTR void 
  6562 ;;		 -> sprintf@ap(1), 
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;  cfmt            2   55[COMRAM] PTR unsigned char 
  6565 ;;		 -> STR_144(3), STR_123(17), STR_117(3), STR_62(47), 
  6566 ;;		 -> STR_46(10), 
  6567 ;; Return value:  Size  Location     Type
  6568 ;;                  2   51[COMRAM] int 
  6569 ;; Registers used:
  6570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6571 ;; Tracked objects:
  6572 ;;		On entry : 0/0
  6573 ;;		On exit  : 0/0
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6576 ;;      Params:         4       0       0       0       0       0       0
  6577 ;;      Locals:         2       0       0       0       0       0       0
  6578 ;;      Temps:          0       0       0       0       0       0       0
  6579 ;;      Totals:         6       0       0       0       0       0       0
  6580 ;;Total ram usage:        6 bytes
  6581 ;; Hardware stack levels used: 1
  6582 ;; Hardware stack levels required when called: 8
  6583 ;; This function calls:
  6584 ;;		_vfpfcnvrt
  6585 ;; This function is called by:
  6586 ;;		_sprintf
  6587 ;; This function uses a non-reentrant model
  6588 ;;
  6589                           
  6590                           	psect	text25
  6591   0026E0                     __ptext25:
  6592                           	callstack 0
  6593   0026E0                     _vfprintf:
  6594                           	callstack 19
  6595   0026E0                     
  6596                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6597   0026E0  C035  F038         	movff	vfprintf@fmt,vfprintf@cfmt
  6598   0026E4  C036  F039         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6599                           
  6600                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6601   0026E8  EF7E  F013         	goto	l5613
  6602   0026EC                     l5611:
  6603                           
  6604                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6605   0026EC  C034  F027         	movff	vfprintf@fp,vfpfcnvrt@fp
  6606   0026F0  0E38               	movlw	low vfprintf@cfmt
  6607   0026F2  6E28               	movwf	vfpfcnvrt@fmt^0,c
  6608   0026F4  C037  F029         	movff	vfprintf@ap,vfpfcnvrt@ap
  6609   0026F8  ECBB  F004         	call	_vfpfcnvrt	;wreg free
  6610   0026FC                     l5613:
  6611                           
  6612                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6613   0026FC  C038  FFF6         	movff	vfprintf@cfmt,tblptrl
  6614   002700  C039  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6615   002704                     	if	0	;tblptru may be non-zero
  6616   002704                     	endif
  6617   002704                     	if	0	;tblptru may be non-zero
  6618   002704                     	endif
  6619   002704  0008               	tblrd		*
  6620   002706  50F5               	movf	tablat,w,c
  6621   002708  0900               	iorlw	0
  6622   00270A  A4D8               	btfss	status,2,c
  6623   00270C  EF8A  F013         	goto	u4471
  6624   002710  EF8C  F013         	goto	u4470
  6625   002714                     u4471:
  6626   002714  EF76  F013         	goto	l5611
  6627   002718                     u4470:
  6628   002718                     
  6629                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6630   002718  0E00               	movlw	0
  6631   00271A  6E35               	movwf	(?_vfprintf+1)^0,c
  6632   00271C  0E00               	movlw	0
  6633   00271E  6E34               	movwf	?_vfprintf^0,c
  6634   002720  0012               	return		;funcret
  6635   002722                     __end_of_vfprintf:
  6636                           	callstack 0
  6637                           
  6638 ;; *************** function _vfpfcnvrt *****************
  6639 ;; Defined at:
  6640 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;  fp              1   38[COMRAM] PTR struct _IO_FILE
  6643 ;;		 -> sprintf@f(12), 
  6644 ;;  fmt             1   39[COMRAM] PTR PTR unsigned char 
  6645 ;;		 -> vfprintf@cfmt(2), 
  6646 ;;  ap              1   40[COMRAM] PTR PTR void 
  6647 ;;		 -> sprintf@ap(1), 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;  convarg         4   43[COMRAM] struct .
  6650 ;;  cp              2   49[COMRAM] PTR unsigned char 
  6651 ;;		 -> STR_144(3), STR_123(17), STR_117(3), STR_62(47), 
  6652 ;;		 -> STR_46(10), 
  6653 ;;  done            1   48[COMRAM] _Bool 
  6654 ;;  c               1   47[COMRAM] unsigned char 
  6655 ;; Return value:  Size  Location     Type
  6656 ;;                  1    wreg      void 
  6657 ;; Registers used:
  6658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6659 ;; Tracked objects:
  6660 ;;		On entry : 0/0
  6661 ;;		On exit  : 0/0
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6664 ;;      Params:         3       0       0       0       0       0       0
  6665 ;;      Locals:         8       0       0       0       0       0       0
  6666 ;;      Temps:          2       0       0       0       0       0       0
  6667 ;;      Totals:        13       0       0       0       0       0       0
  6668 ;;Total ram usage:       13 bytes
  6669 ;; Hardware stack levels used: 1
  6670 ;; Hardware stack levels required when called: 7
  6671 ;; This function calls:
  6672 ;;		_ctoa
  6673 ;;		_dtoa
  6674 ;;		_fputc
  6675 ;;		_read_prec_or_width
  6676 ;;		_stoa
  6677 ;; This function is called by:
  6678 ;;		_vfprintf
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           	psect	text26
  6683   000976                     __ptext26:
  6684                           	callstack 0
  6685   000976                     _vfpfcnvrt:
  6686                           	callstack 19
  6687   000976                     
  6688                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  6689   000976  5028               	movf	vfpfcnvrt@fmt^0,w,c
  6690   000978  6ED9               	movwf	fsr2l,c
  6691   00097A  6ADA               	clrf	fsr2h,c
  6692   00097C  CFDE FFF6          	movff	postinc2,tblptrl
  6693   000980  CFDD FFF7          	movff	postdec2,tblptrh
  6694   000984                     	if	0	;tblptru may be non-zero
  6695   000984                     	endif
  6696   000984                     	if	0	;tblptru may be non-zero
  6697   000984                     	endif
  6698   000984  0008               	tblrd		*
  6699   000986  50F5               	movf	tablat,w,c
  6700   000988  0A25               	xorlw	37
  6701   00098A  A4D8               	btfss	status,2,c
  6702   00098C  EFCA  F004         	goto	u4371
  6703   000990  EFCC  F004         	goto	u4370
  6704   000994                     u4371:
  6705   000994  EFEC  F005         	goto	l5587
  6706   000998                     u4370:
  6707   000998                     
  6708                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  6709   000998  5028               	movf	vfpfcnvrt@fmt^0,w,c
  6710   00099A  6ED9               	movwf	fsr2l,c
  6711   00099C  6ADA               	clrf	fsr2h,c
  6712   00099E  2ADE               	incf	postinc2,f,c
  6713   0009A0  0E00               	movlw	0
  6714   0009A2  22DD               	addwfc	postdec2,f,c
  6715   0009A4                     
  6716                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  6717   0009A4  0E00               	movlw	0
  6718   0009A6  0100               	movlb	0	; () banked
  6719   0009A8  6F7C               	movwf	(_width+1)& (0+255),b
  6720   0009AA  0E00               	movlw	0
  6721   0009AC  6F7B               	movwf	_width& (0+255),b
  6722   0009AE  C07B  F085         	movff	_width,_flags
  6723   0009B2                     
  6724                           ; BSR set to: 0
  6725                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  6726   0009B2  697D               	setf	_prec& (0+255),b
  6727   0009B4  697E               	setf	(_prec+1)& (0+255),b
  6728   0009B6                     
  6729                           ; BSR set to: 0
  6730                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  6731   0009B6  C028  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6732   0009BA  C029  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6733   0009BE  ECE4  F00F         	call	_read_prec_or_width	;wreg free
  6734   0009C2  C00C  F07B         	movff	?_read_prec_or_width,_width
  6735   0009C6  C00D  F07C         	movff	?_read_prec_or_width+1,_width+1
  6736   0009CA                     
  6737                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  6738   0009CA  0100               	movlb	0	; () banked
  6739   0009CC  BF7C               	btfsc	(_width+1)& (0+255),7,b
  6740   0009CE  EFED  F004         	goto	u4380
  6741   0009D2  EFEB  F004         	goto	u4381
  6742   0009D6                     u4381:
  6743   0009D6  EFF2  F004         	goto	l5535
  6744   0009DA                     u4380:
  6745   0009DA                     
  6746                           ; BSR set to: 0
  6747                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  6748   0009DA  8185               	bsf	_flags& (0+255),0,b
  6749                           
  6750                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  6751   0009DC  6D7B               	negf	_width& (0+255),b
  6752   0009DE  1F7C               	comf	(_width+1)& (0+255),f,b
  6753   0009E0  B0D8               	btfsc	status,0,c
  6754   0009E2  2B7C               	incf	(_width+1)& (0+255),f,b
  6755   0009E4                     l5535:
  6756                           
  6757                           ; BSR set to: 0
  6758                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1273:         if 
      +                          ((*fmt)[0] == 'c') {
  6759   0009E4  5028               	movf	vfpfcnvrt@fmt^0,w,c
  6760   0009E6  6ED9               	movwf	fsr2l,c
  6761   0009E8  6ADA               	clrf	fsr2h,c
  6762   0009EA  CFDE FFF6          	movff	postinc2,tblptrl
  6763   0009EE  CFDD FFF7          	movff	postdec2,tblptrh
  6764   0009F2                     	if	0	;tblptru may be non-zero
  6765   0009F2                     	endif
  6766   0009F2                     	if	0	;tblptru may be non-zero
  6767   0009F2                     	endif
  6768   0009F2  0008               	tblrd		*
  6769   0009F4  50F5               	movf	tablat,w,c
  6770   0009F6  0A63               	xorlw	99
  6771   0009F8  A4D8               	btfss	status,2,c
  6772   0009FA  EF01  F005         	goto	u4391
  6773   0009FE  EF03  F005         	goto	u4390
  6774   000A02                     u4391:
  6775   000A02  EF1B  F005         	goto	l5545
  6776   000A06                     u4390:
  6777   000A06                     
  6778                           ; BSR set to: 0
  6779                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1274:            
      +                           ++*fmt;
  6780   000A06  5028               	movf	vfpfcnvrt@fmt^0,w,c
  6781   000A08  6ED9               	movwf	fsr2l,c
  6782   000A0A  6ADA               	clrf	fsr2h,c
  6783   000A0C  2ADE               	incf	postinc2,f,c
  6784   000A0E  0E00               	movlw	0
  6785   000A10  22DD               	addwfc	postdec2,f,c
  6786   000A12                     
  6787                           ; BSR set to: 0
  6788                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1275:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6789   000A12  5029               	movf	vfpfcnvrt@ap^0,w,c
  6790   000A14  6ED9               	movwf	fsr2l,c
  6791   000A16  6ADA               	clrf	fsr2h,c
  6792   000A18  50DF               	movf	indf2,w,c
  6793   000A1A  2ADF               	incf	indf2,f,c
  6794   000A1C  2ADF               	incf	indf2,f,c
  6795   000A1E  6ED9               	movwf	fsr2l,c
  6796   000A20  6ADA               	clrf	fsr2h,c
  6797   000A22  50DF               	movf	indf2,w,c
  6798   000A24  6E30               	movwf	vfpfcnvrt@c^0,c
  6799   000A26                     
  6800                           ; BSR set to: 0
  6801                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1284:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  6802   000A26  C027  F00E         	movff	vfpfcnvrt@fp,ctoa@fp
  6803   000A2A  C030  F00F         	movff	vfpfcnvrt@c,ctoa@c
  6804   000A2E  EC2C  F00F         	call	_ctoa	;wreg free
  6805   000A32  EFFD  F005         	goto	l2056
  6806   000A36                     l5545:
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  6810   000A36  5028               	movf	vfpfcnvrt@fmt^0,w,c
  6811   000A38  6ED9               	movwf	fsr2l,c
  6812   000A3A  6ADA               	clrf	fsr2h,c
  6813   000A3C  CFDE F032          	movff	postinc2,vfpfcnvrt@cp
  6814   000A40  CFDD F033          	movff	postdec2,vfpfcnvrt@cp+1
  6815   000A44                     
  6816                           ; BSR set to: 0
  6817                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6818   000A44  C032  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6819   000A48  C033  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6820   000A4C                     	if	0	;tblptru may be non-zero
  6821   000A4C                     	endif
  6822   000A4C                     	if	0	;tblptru may be non-zero
  6823   000A4C                     	endif
  6824   000A4C  0008               	tblrd		*
  6825   000A4E  50F5               	movf	tablat,w,c
  6826   000A50  0A64               	xorlw	100
  6827   000A52  B4D8               	btfsc	status,2,c
  6828   000A54  EF2E  F005         	goto	u4401
  6829   000A58  EF30  F005         	goto	u4400
  6830   000A5C                     u4401:
  6831   000A5C  EF3E  F005         	goto	l5551
  6832   000A60                     u4400:
  6833   000A60                     
  6834                           ; BSR set to: 0
  6835   000A60  C032  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6836   000A64  C033  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6837   000A68                     	if	0	;tblptru may be non-zero
  6838   000A68                     	endif
  6839   000A68                     	if	0	;tblptru may be non-zero
  6840   000A68                     	endif
  6841   000A68  0008               	tblrd		*
  6842   000A6A  50F5               	movf	tablat,w,c
  6843   000A6C  0A69               	xorlw	105
  6844   000A6E  A4D8               	btfss	status,2,c
  6845   000A70  EF3C  F005         	goto	u4411
  6846   000A74  EF3E  F005         	goto	u4410
  6847   000A78                     u4411:
  6848   000A78  EF61  F005         	goto	l5559
  6849   000A7C                     u4410:
  6850   000A7C                     l5551:
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6854   000A7C  5029               	movf	vfpfcnvrt@ap^0,w,c
  6855   000A7E  6ED9               	movwf	fsr2l,c
  6856   000A80  6ADA               	clrf	fsr2h,c
  6857   000A82  0E02               	movlw	2
  6858   000A84  26DF               	addwf	indf2,f,c
  6859   000A86  5CDF               	subwf	indf2,w,c
  6860   000A88  6ED9               	movwf	fsr2l,c
  6861   000A8A  6ADA               	clrf	fsr2h,c
  6862   000A8C  CFDE F02C          	movff	postinc2,vfpfcnvrt@convarg
  6863   000A90  CFDE F02D          	movff	postinc2,vfpfcnvrt@convarg+1
  6864   000A94                     
  6865                           ; BSR set to: 0
  6866                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  6867   000A94  0E01               	movlw	1
  6868   000A96  2432               	addwf	vfpfcnvrt@cp^0,w,c
  6869   000A98  6E2A               	movwf	??_vfpfcnvrt^0,c
  6870   000A9A  0E00               	movlw	0
  6871   000A9C  2033               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  6872   000A9E  6E2B               	movwf	(??_vfpfcnvrt+1)^0,c
  6873   000AA0  5028               	movf	vfpfcnvrt@fmt^0,w,c
  6874   000AA2  6ED9               	movwf	fsr2l,c
  6875   000AA4  6ADA               	clrf	fsr2h,c
  6876   000AA6  C02A  FFDE         	movff	??_vfpfcnvrt,postinc2
  6877   000AAA  C02B  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6878   000AAE                     
  6879                           ; BSR set to: 0
  6880                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  6881   000AAE  C027  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6882   000AB2  C02C  F01D         	movff	vfpfcnvrt@convarg,dtoa@d
  6883   000AB6  C02D  F01E         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6884   000ABA  ECCF  F00B         	call	_dtoa	;wreg free
  6885   000ABE  EFFD  F005         	goto	l2056
  6886   000AC2                     l5559:
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  6890   000AC2  0E00               	movlw	0
  6891   000AC4  6E31               	movwf	vfpfcnvrt@done^0,c
  6892   000AC6                     
  6893                           ; BSR set to: 0
  6894                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  6895   000AC6  5028               	movf	vfpfcnvrt@fmt^0,w,c
  6896   000AC8  6ED9               	movwf	fsr2l,c
  6897   000ACA  6ADA               	clrf	fsr2h,c
  6898   000ACC  CFDE FFF6          	movff	postinc2,tblptrl
  6899   000AD0  CFDD FFF7          	movff	postdec2,tblptrh
  6900   000AD4                     	if	0	;tblptru may be non-zero
  6901   000AD4                     	endif
  6902   000AD4                     	if	0	;tblptru may be non-zero
  6903   000AD4                     	endif
  6904   000AD4  0008               	tblrd		*
  6905   000AD6  50F5               	movf	tablat,w,c
  6906   000AD8  0A73               	xorlw	115
  6907   000ADA  A4D8               	btfss	status,2,c
  6908   000ADC  EF72  F005         	goto	u4421
  6909   000AE0  EF74  F005         	goto	u4420
  6910   000AE4                     u4421:
  6911   000AE4  EF7E  F005         	goto	l5567
  6912   000AE8                     u4420:
  6913   000AE8                     
  6914                           ; BSR set to: 0
  6915                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  6916   000AE8  5028               	movf	vfpfcnvrt@fmt^0,w,c
  6917   000AEA  6ED9               	movwf	fsr2l,c
  6918   000AEC  6ADA               	clrf	fsr2h,c
  6919   000AEE  2ADE               	incf	postinc2,f,c
  6920   000AF0  0E00               	movlw	0
  6921   000AF2  22DD               	addwfc	postdec2,f,c
  6922   000AF4                     l5565:
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  6926   000AF4  0E01               	movlw	1
  6927   000AF6  6E31               	movwf	vfpfcnvrt@done^0,c
  6928                           
  6929                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1660:   }
  6930   000AF8  EFCA  F005         	goto	l5577
  6931   000AFC                     l5567:
  6932                           
  6933                           ; BSR set to: 0
  6934   000AFC  5028               	movf	vfpfcnvrt@fmt^0,w,c
  6935   000AFE  6ED9               	movwf	fsr2l,c
  6936   000B00  6ADA               	clrf	fsr2h,c
  6937   000B02  CFDE FFF6          	movff	postinc2,tblptrl
  6938   000B06  CFDD FFF7          	movff	postdec2,tblptrh
  6939   000B0A                     	if	0	;tblptru may be non-zero
  6940   000B0A                     	endif
  6941   000B0A                     	if	0	;tblptru may be non-zero
  6942   000B0A                     	endif
  6943   000B0A  0008               	tblrd		*
  6944   000B0C  50F5               	movf	tablat,w,c
  6945   000B0E  0A6C               	xorlw	108
  6946   000B10  A4D8               	btfss	status,2,c
  6947   000B12  EF8D  F005         	goto	u4431
  6948   000B16  EF8F  F005         	goto	u4430
  6949   000B1A                     u4431:
  6950   000B1A  EFCA  F005         	goto	l5577
  6951   000B1E                     u4430:
  6952   000B1E                     
  6953                           ; BSR set to: 0
  6954   000B1E  5028               	movf	vfpfcnvrt@fmt^0,w,c
  6955   000B20  6ED9               	movwf	fsr2l,c
  6956   000B22  6ADA               	clrf	fsr2h,c
  6957   000B24  CFDE F02A          	movff	postinc2,??_vfpfcnvrt
  6958   000B28  CFDD F02B          	movff	postdec2,??_vfpfcnvrt+1
  6959   000B2C  0E01               	movlw	1
  6960   000B2E  262A               	addwf	??_vfpfcnvrt^0,f,c
  6961   000B30  0E00               	movlw	0
  6962   000B32  222B               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  6963   000B34  C02A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6964   000B38  C02B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6965   000B3C                     	if	0	;tblptru may be non-zero
  6966   000B3C                     	endif
  6967   000B3C                     	if	0	;tblptru may be non-zero
  6968   000B3C                     	endif
  6969   000B3C  0008               	tblrd		*
  6970   000B3E  50F5               	movf	tablat,w,c
  6971   000B40  0A6C               	xorlw	108
  6972   000B42  A4D8               	btfss	status,2,c
  6973   000B44  EFA6  F005         	goto	u4441
  6974   000B48  EFA8  F005         	goto	u4440
  6975   000B4C                     u4441:
  6976   000B4C  EFCA  F005         	goto	l5577
  6977   000B50                     u4440:
  6978   000B50                     
  6979                           ; BSR set to: 0
  6980   000B50  5028               	movf	vfpfcnvrt@fmt^0,w,c
  6981   000B52  6ED9               	movwf	fsr2l,c
  6982   000B54  6ADA               	clrf	fsr2h,c
  6983   000B56  CFDE F02A          	movff	postinc2,??_vfpfcnvrt
  6984   000B5A  CFDD F02B          	movff	postdec2,??_vfpfcnvrt+1
  6985   000B5E  0E02               	movlw	2
  6986   000B60  262A               	addwf	??_vfpfcnvrt^0,f,c
  6987   000B62  0E00               	movlw	0
  6988   000B64  222B               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  6989   000B66  C02A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6990   000B6A  C02B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6991   000B6E                     	if	0	;tblptru may be non-zero
  6992   000B6E                     	endif
  6993   000B6E                     	if	0	;tblptru may be non-zero
  6994   000B6E                     	endif
  6995   000B6E  0008               	tblrd		*
  6996   000B70  50F5               	movf	tablat,w,c
  6997   000B72  0A73               	xorlw	115
  6998   000B74  A4D8               	btfss	status,2,c
  6999   000B76  EFBF  F005         	goto	u4451
  7000   000B7A  EFC1  F005         	goto	u4450
  7001   000B7E                     u4451:
  7002   000B7E  EFCA  F005         	goto	l5577
  7003   000B82                     u4450:
  7004   000B82                     
  7005                           ; BSR set to: 0
  7006                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  7007   000B82  5028               	movf	vfpfcnvrt@fmt^0,w,c
  7008   000B84  6ED9               	movwf	fsr2l,c
  7009   000B86  6ADA               	clrf	fsr2h,c
  7010   000B88  0E03               	movlw	3
  7011   000B8A  26DE               	addwf	postinc2,f,c
  7012   000B8C  0E00               	movlw	0
  7013   000B8E  22DD               	addwfc	postdec2,f,c
  7014   000B90  EF7A  F005         	goto	l5565
  7015   000B94                     l5577:
  7016                           
  7017                           ; BSR set to: 0
  7018                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  7019   000B94  5031               	movf	vfpfcnvrt@done^0,w,c
  7020   000B96  B4D8               	btfsc	status,2,c
  7021   000B98  EFD0  F005         	goto	u4461
  7022   000B9C  EFD2  F005         	goto	u4460
  7023   000BA0                     u4461:
  7024   000BA0  EFE4  F005         	goto	l5583
  7025   000BA4                     u4460:
  7026   000BA4                     
  7027                           ; BSR set to: 0
  7028                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
  7029   000BA4  C027  F00E         	movff	vfpfcnvrt@fp,stoa@fp
  7030   000BA8  5029               	movf	vfpfcnvrt@ap^0,w,c
  7031   000BAA  6ED9               	movwf	fsr2l,c
  7032   000BAC  6ADA               	clrf	fsr2h,c
  7033   000BAE  0E02               	movlw	2
  7034   000BB0  26DF               	addwf	indf2,f,c
  7035   000BB2  5CDF               	subwf	indf2,w,c
  7036   000BB4  6ED9               	movwf	fsr2l,c
  7037   000BB6  6ADA               	clrf	fsr2h,c
  7038   000BB8  CFDE F00F          	movff	postinc2,stoa@s
  7039   000BBC  CFDE F010          	movff	postinc2,stoa@s+1
  7040   000BC0  EC78  F00A         	call	_stoa	;wreg free
  7041   000BC4  EFFD  F005         	goto	l2056
  7042   000BC8                     l5583:
  7043                           
  7044                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  7045   000BC8  5028               	movf	vfpfcnvrt@fmt^0,w,c
  7046   000BCA  6ED9               	movwf	fsr2l,c
  7047   000BCC  6ADA               	clrf	fsr2h,c
  7048   000BCE  2ADE               	incf	postinc2,f,c
  7049   000BD0  0E00               	movlw	0
  7050   000BD2  22DD               	addwfc	postdec2,f,c
  7051   000BD4  EFFD  F005         	goto	l2056
  7052   000BD8                     l5587:
  7053                           
  7054                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  7055   000BD8  5028               	movf	vfpfcnvrt@fmt^0,w,c
  7056   000BDA  6ED9               	movwf	fsr2l,c
  7057   000BDC  6ADA               	clrf	fsr2h,c
  7058   000BDE  CFDE FFF6          	movff	postinc2,tblptrl
  7059   000BE2  CFDD FFF7          	movff	postdec2,tblptrh
  7060   000BE6                     	if	0	;tblptru may be non-zero
  7061   000BE6                     	endif
  7062   000BE6                     	if	0	;tblptru may be non-zero
  7063   000BE6                     	endif
  7064   000BE6  0008               	tblrd		*
  7065   000BE8  50F5               	movf	tablat,w,c
  7066   000BEA  6E06               	movwf	fputc@c^0,c
  7067   000BEC  6A07               	clrf	(fputc@c+1)^0,c
  7068   000BEE  C027  F008         	movff	vfpfcnvrt@fp,fputc@fp
  7069   000BF2  EC3B  F010         	call	_fputc	;wreg free
  7070   000BF6  EFE4  F005         	goto	l5583
  7071   000BFA                     l2056:
  7072   000BFA  0012               	return		;funcret
  7073   000BFC                     __end_of_vfpfcnvrt:
  7074                           	callstack 0
  7075                           
  7076 ;; *************** function _stoa *****************
  7077 ;; Defined at:
  7078 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7079 ;; Parameters:    Size  Location     Type
  7080 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  7081 ;;		 -> sprintf@f(12), 
  7082 ;;  s               2   14[COMRAM] PTR unsigned char 
  7083 ;;		 -> ?_sprintf(2), STR_183(3), STR_182(3), STR_181(3), 
  7084 ;;		 -> STR_180(3), STR_179(3), STR_178(3), STR_177(3), 
  7085 ;;		 -> STR_176(3), STR_175(3), STR_174(3), STR_173(3), 
  7086 ;;		 -> STR_172(3), STR_171(3), STR_170(3), STR_169(3), 
  7087 ;;		 -> STR_168(3), STR_167(3), STR_166(3), STR_165(3), 
  7088 ;;		 -> STR_164(3), STR_163(3), STR_162(3), STR_161(3), 
  7089 ;;		 -> STR_160(3), STR_159(3), STR_158(3), STR_157(3), 
  7090 ;;		 -> STR_153(3), STR_152(3), STR_151(3), STR_150(3), 
  7091 ;;		 -> STR_149(3), STR_148(3), STR_147(3), STR_146(3), 
  7092 ;;		 -> STR_145(3), STR_143(3), STR_142(3), STR_141(3), 
  7093 ;;		 -> STR_140(3), STR_139(3), STR_138(3), STR_137(3), 
  7094 ;;		 -> STR_136(3), STR_135(3), STR_133(3), STR_132(3), 
  7095 ;;		 -> STR_131(3), STR_130(3), STR_129(3), STR_128(3), 
  7096 ;;		 -> STR_127(3), STR_126(3), STR_125(3), STR_109(3), 
  7097 ;;		 -> STR_108(3), STR_107(3), STR_106(3), STR_105(3), 
  7098 ;;		 -> STR_104(3), STR_103(3), STR_102(3), STR_101(3), 
  7099 ;;		 -> STR_87(3), STR_86(3), STR_85(3), STR_84(3), 
  7100 ;;		 -> STR_83(3), STR_82(3), STR_81(3), STR_80(3), 
  7101 ;;		 -> STR_79(3), STR_76(3), STR_75(3), STR_74(3), 
  7102 ;;		 -> STR_73(3), STR_72(3), STR_71(3), STR_70(3), 
  7103 ;;		 -> STR_69(3), STR_68(3), STR_56(3), STR_55(3), 
  7104 ;;		 -> STR_54(3), STR_53(3), STR_52(3), STR_51(3), 
  7105 ;;		 -> STR_50(3), STR_49(3), STR_48(3), STR_45(3), 
  7106 ;;		 -> STR_44(3), STR_43(3), STR_42(3), STR_41(3), 
  7107 ;;		 -> STR_40(3), STR_39(3), STR_38(3), STR_37(3), 
  7108 ;;		 -> STR_34(3), STR_33(3), STR_32(3), STR_31(3), 
  7109 ;;		 -> STR_30(3), STR_29(3), STR_28(3), STR_27(3), 
  7110 ;;		 -> STR_26(3), STR_9(3), STR_8(3), STR_7(3), 
  7111 ;;		 -> STR_6(3), STR_5(3), STR_4(3), STR_3(3), 
  7112 ;;		 -> STR_2(3), STR_1(3), 
  7113 ;; Auto vars:     Size  Location     Type
  7114 ;;  l               2   24[COMRAM] int 
  7115 ;;  cp              2   22[COMRAM] PTR unsigned char 
  7116 ;;		 -> STR_184(7), ?_sprintf(2), STR_183(3), STR_182(3), 
  7117 ;;		 -> STR_181(3), STR_180(3), STR_179(3), STR_178(3), 
  7118 ;;		 -> STR_177(3), STR_176(3), STR_175(3), STR_174(3), 
  7119 ;;		 -> STR_173(3), STR_172(3), STR_171(3), STR_170(3), 
  7120 ;;		 -> STR_169(3), STR_168(3), STR_167(3), STR_166(3), 
  7121 ;;		 -> STR_165(3), STR_164(3), STR_163(3), STR_162(3), 
  7122 ;;		 -> STR_161(3), STR_160(3), STR_159(3), STR_158(3), 
  7123 ;;		 -> STR_157(3), STR_153(3), STR_152(3), STR_151(3), 
  7124 ;;		 -> STR_150(3), STR_149(3), STR_148(3), STR_147(3), 
  7125 ;;		 -> STR_146(3), STR_145(3), STR_143(3), STR_142(3), 
  7126 ;;		 -> STR_141(3), STR_140(3), STR_139(3), STR_138(3), 
  7127 ;;		 -> STR_137(3), STR_136(3), STR_135(3), STR_133(3), 
  7128 ;;		 -> STR_132(3), STR_131(3), STR_130(3), STR_129(3), 
  7129 ;;		 -> STR_128(3), STR_127(3), STR_126(3), STR_125(3), 
  7130 ;;		 -> STR_109(3), STR_108(3), STR_107(3), STR_106(3), 
  7131 ;;		 -> STR_105(3), STR_104(3), STR_103(3), STR_102(3), 
  7132 ;;		 -> STR_101(3), STR_87(3), STR_86(3), STR_85(3), 
  7133 ;;		 -> STR_84(3), STR_83(3), STR_82(3), STR_81(3), 
  7134 ;;		 -> STR_80(3), STR_79(3), STR_76(3), STR_75(3), 
  7135 ;;		 -> STR_74(3), STR_73(3), STR_72(3), STR_71(3), 
  7136 ;;		 -> STR_70(3), STR_69(3), STR_68(3), STR_56(3), 
  7137 ;;		 -> STR_55(3), STR_54(3), STR_53(3), STR_52(3), 
  7138 ;;		 -> STR_51(3), STR_50(3), STR_49(3), STR_48(3), 
  7139 ;;		 -> STR_45(3), STR_44(3), STR_43(3), STR_42(3), 
  7140 ;;		 -> STR_41(3), STR_40(3), STR_39(3), STR_38(3), 
  7141 ;;		 -> STR_37(3), STR_34(3), STR_33(3), STR_32(3), 
  7142 ;;		 -> STR_31(3), STR_30(3), STR_29(3), STR_28(3), 
  7143 ;;		 -> STR_27(3), STR_26(3), STR_9(3), STR_8(3), 
  7144 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_4(3), 
  7145 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  7146 ;;  w               2   20[COMRAM] int 
  7147 ;;  p               2   18[COMRAM] int 
  7148 ;; Return value:  Size  Location     Type
  7149 ;;                  1    wreg      void 
  7150 ;; Registers used:
  7151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7152 ;; Tracked objects:
  7153 ;;		On entry : 0/0
  7154 ;;		On exit  : 0/0
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7157 ;;      Params:         3       0       0       0       0       0       0
  7158 ;;      Locals:         8       0       0       0       0       0       0
  7159 ;;      Temps:          2       0       0       0       0       0       0
  7160 ;;      Totals:        13       0       0       0       0       0       0
  7161 ;;Total ram usage:       13 bytes
  7162 ;; Hardware stack levels used: 1
  7163 ;; Hardware stack levels required when called: 4
  7164 ;; This function calls:
  7165 ;;		_fputc
  7166 ;; This function is called by:
  7167 ;;		_vfpfcnvrt
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171                           	psect	text27
  7172   0014F0                     __ptext27:
  7173                           	callstack 0
  7174   0014F0                     _stoa:
  7175                           	callstack 21
  7176   0014F0                     
  7177                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
  7178   0014F0  C00F  F017         	movff	stoa@s,stoa@cp
  7179   0014F4  C010  F018         	movff	stoa@s+1,stoa@cp+1
  7180                           
  7181                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
  7182   0014F8  5017               	movf	stoa@cp^0,w,c
  7183   0014FA  1018               	iorwf	(stoa@cp+1)^0,w,c
  7184   0014FC  A4D8               	btfss	status,2,c
  7185   0014FE  EF83  F00A         	goto	u4251
  7186   001502  EF85  F00A         	goto	u4250
  7187   001506                     u4251:
  7188   001506  EF89  F00A         	goto	l5477
  7189   00150A                     u4250:
  7190   00150A                     
  7191                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
  7192   00150A  0ED6               	movlw	low STR_184
  7193   00150C  6E17               	movwf	stoa@cp^0,c
  7194   00150E  0E2F               	movlw	high STR_184
  7195   001510  6E18               	movwf	(stoa@cp+1)^0,c
  7196   001512                     l5477:
  7197                           
  7198                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
  7199   001512  0E00               	movlw	0
  7200   001514  6E1A               	movwf	(stoa@l+1)^0,c
  7201   001516  0E00               	movlw	0
  7202   001518  6E19               	movwf	stoa@l^0,c
  7203   00151A  EF91  F00A         	goto	l5481
  7204   00151E                     l5479:
  7205   00151E  4A19               	infsnz	stoa@l^0,f,c
  7206   001520  2A1A               	incf	(stoa@l+1)^0,f,c
  7207   001522                     l5481:
  7208   001522  5019               	movf	stoa@l^0,w,c
  7209   001524  2417               	addwf	stoa@cp^0,w,c
  7210   001526  6E11               	movwf	??_stoa^0,c
  7211   001528  501A               	movf	(stoa@l+1)^0,w,c
  7212   00152A  2018               	addwfc	(stoa@cp+1)^0,w,c
  7213   00152C  6E12               	movwf	(??_stoa+1)^0,c
  7214   00152E  C011  FFF6         	movff	??_stoa,tblptrl
  7215   001532  C012  FFF7         	movff	??_stoa+1,tblptrh
  7216   001536  6AF8               	clrf	tblptru,c
  7217   001538  0E05               	movlw	(high __ramtop+-1)
  7218   00153A  64F7               	cpfsgt	tblptrh,c
  7219   00153C  D003               	bra	u4267
  7220   00153E  0008               	tblrd		*
  7221   001540  50F5               	movf	tablat,w,c
  7222   001542  D005               	bra	u4260
  7223   001544                     u4267:
  7224   001544  CFF6 FFE1          	movff	tblptrl,fsr1l
  7225   001548  CFF7 FFE2          	movff	tblptrh,fsr1h
  7226   00154C  50E7               	movf	indf1,w,c
  7227   00154E                     u4260:
  7228   00154E  0900               	iorlw	0
  7229   001550  A4D8               	btfss	status,2,c
  7230   001552  EFAD  F00A         	goto	u4271
  7231   001556  EFAF  F00A         	goto	u4270
  7232   00155A                     u4271:
  7233   00155A  EF8F  F00A         	goto	l5479
  7234   00155E                     u4270:
  7235   00155E                     
  7236                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 965:     p = l;
  7237   00155E  C019  F013         	movff	stoa@l,stoa@p
  7238   001562  C01A  F014         	movff	stoa@l+1,stoa@p+1
  7239                           
  7240                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
  7241   001566  C07B  F015         	movff	_width,stoa@w
  7242   00156A  C07C  F016         	movff	_width+1,stoa@w+1
  7243                           
  7244                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
  7245   00156E  0100               	movlb	0	; () banked
  7246   001570  B185               	btfsc	_flags& (0+255),0,b
  7247   001572  EFBD  F00A         	goto	u4281
  7248   001576  EFBF  F00A         	goto	u4280
  7249   00157A                     u4281:
  7250   00157A  EFF6  F00A         	goto	l5495
  7251   00157E                     u4280:
  7252   00157E  EFCB  F00A         	goto	l5489
  7253   001582                     l5485:
  7254                           
  7255                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
  7256   001582  0E00               	movlw	0
  7257   001584  6E07               	movwf	(fputc@c+1)^0,c
  7258   001586  0E20               	movlw	32
  7259   001588  6E06               	movwf	fputc@c^0,c
  7260   00158A  C00E  F008         	movff	stoa@fp,fputc@fp
  7261   00158E  EC3B  F010         	call	_fputc	;wreg free
  7262   001592                     
  7263                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
  7264   001592  4A19               	infsnz	stoa@l^0,f,c
  7265   001594  2A1A               	incf	(stoa@l+1)^0,f,c
  7266   001596                     l5489:
  7267                           
  7268                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
  7269   001596  5015               	movf	stoa@w^0,w,c
  7270   001598  5C19               	subwf	stoa@l^0,w,c
  7271   00159A  501A               	movf	(stoa@l+1)^0,w,c
  7272   00159C  0A80               	xorlw	128
  7273   00159E  6E11               	movwf	??_stoa^0,c
  7274   0015A0  5016               	movf	(stoa@w+1)^0,w,c
  7275   0015A2  0A80               	xorlw	128
  7276   0015A4  5811               	subwfb	??_stoa^0,w,c
  7277   0015A6  A0D8               	btfss	status,0,c
  7278   0015A8  EFD8  F00A         	goto	u4291
  7279   0015AC  EFDA  F00A         	goto	u4290
  7280   0015B0                     u4291:
  7281   0015B0  EFC1  F00A         	goto	l5485
  7282   0015B4                     u4290:
  7283   0015B4  EFF6  F00A         	goto	l5495
  7284   0015B8                     l5491:
  7285                           
  7286                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
  7287   0015B8  C017  FFF6         	movff	stoa@cp,tblptrl
  7288   0015BC  C018  FFF7         	movff	stoa@cp+1,tblptrh
  7289   0015C0  6AF8               	clrf	tblptru,c
  7290   0015C2  0E05               	movlw	(high __ramtop+-1)
  7291   0015C4  64F7               	cpfsgt	tblptrh,c
  7292   0015C6  D003               	bra	u4307
  7293   0015C8  0008               	tblrd		*
  7294   0015CA  50F5               	movf	tablat,w,c
  7295   0015CC  D005               	bra	u4300
  7296   0015CE                     u4307:
  7297   0015CE  CFF6 FFE1          	movff	tblptrl,fsr1l
  7298   0015D2  CFF7 FFE2          	movff	tblptrh,fsr1h
  7299   0015D6  50E7               	movf	indf1,w,c
  7300   0015D8                     u4300:
  7301   0015D8  6E11               	movwf	??_stoa^0,c
  7302   0015DA  5011               	movf	??_stoa^0,w,c
  7303   0015DC  6E06               	movwf	fputc@c^0,c
  7304   0015DE  6A07               	clrf	(fputc@c+1)^0,c
  7305   0015E0  C00E  F008         	movff	stoa@fp,fputc@fp
  7306   0015E4  EC3B  F010         	call	_fputc	;wreg free
  7307   0015E8                     
  7308                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
  7309   0015E8  4A17               	infsnz	stoa@cp^0,f,c
  7310   0015EA  2A18               	incf	(stoa@cp+1)^0,f,c
  7311   0015EC                     l5495:
  7312                           
  7313                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
  7314   0015EC  0613               	decf	stoa@p^0,f,c
  7315   0015EE  A0D8               	btfss	status,0,c
  7316   0015F0  0614               	decf	(stoa@p+1)^0,f,c
  7317   0015F2  2813               	incf	stoa@p^0,w,c
  7318   0015F4  E106               	bnz	u4311
  7319   0015F6  2814               	incf	(stoa@p+1)^0,w,c
  7320   0015F8  A4D8               	btfss	status,2,c
  7321   0015FA  EF01  F00B         	goto	u4311
  7322   0015FE  EF03  F00B         	goto	u4310
  7323   001602                     u4311:
  7324   001602  EFDC  F00A         	goto	l5491
  7325   001606                     u4310:
  7326   001606                     
  7327                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
  7328   001606  0100               	movlb	0	; () banked
  7329   001608  A185               	btfss	_flags& (0+255),0,b
  7330   00160A  EF09  F00B         	goto	u4321
  7331   00160E  EF0B  F00B         	goto	u4320
  7332   001612                     u4321:
  7333   001612  EF26  F00B         	goto	l2042
  7334   001616                     u4320:
  7335   001616  EF17  F00B         	goto	l5503
  7336   00161A                     l5499:
  7337                           
  7338                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
  7339   00161A  0E00               	movlw	0
  7340   00161C  6E07               	movwf	(fputc@c+1)^0,c
  7341   00161E  0E20               	movlw	32
  7342   001620  6E06               	movwf	fputc@c^0,c
  7343   001622  C00E  F008         	movff	stoa@fp,fputc@fp
  7344   001626  EC3B  F010         	call	_fputc	;wreg free
  7345   00162A                     
  7346                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
  7347   00162A  4A19               	infsnz	stoa@l^0,f,c
  7348   00162C  2A1A               	incf	(stoa@l+1)^0,f,c
  7349   00162E                     l5503:
  7350                           
  7351                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
  7352   00162E  5015               	movf	stoa@w^0,w,c
  7353   001630  5C19               	subwf	stoa@l^0,w,c
  7354   001632  501A               	movf	(stoa@l+1)^0,w,c
  7355   001634  0A80               	xorlw	128
  7356   001636  6E11               	movwf	??_stoa^0,c
  7357   001638  5016               	movf	(stoa@w+1)^0,w,c
  7358   00163A  0A80               	xorlw	128
  7359   00163C  5811               	subwfb	??_stoa^0,w,c
  7360   00163E  A0D8               	btfss	status,0,c
  7361   001640  EF24  F00B         	goto	u4331
  7362   001644  EF26  F00B         	goto	u4330
  7363   001648                     u4331:
  7364   001648  EF0D  F00B         	goto	l5499
  7365   00164C                     u4330:
  7366   00164C                     l2042:
  7367   00164C  0012               	return		;funcret
  7368   00164E                     __end_of_stoa:
  7369                           	callstack 0
  7370                           
  7371 ;; *************** function _read_prec_or_width *****************
  7372 ;; Defined at:
  7373 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;  fmt             1   11[COMRAM] PTR PTR const unsigned c
  7376 ;;		 -> vfprintf@cfmt(2), 
  7377 ;;  ap              1   12[COMRAM] PTR PTR void [1]
  7378 ;;		 -> sprintf@ap(1), 
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;  c               1   13[COMRAM] unsigned char 
  7381 ;;  n               2   14[COMRAM] int 
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  2   11[COMRAM] int 
  7384 ;; Registers used:
  7385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7386 ;; Tracked objects:
  7387 ;;		On entry : 0/0
  7388 ;;		On exit  : 0/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7391 ;;      Params:         2       0       0       0       0       0       0
  7392 ;;      Locals:         3       0       0       0       0       0       0
  7393 ;;      Temps:          0       0       0       0       0       0       0
  7394 ;;      Totals:         5       0       0       0       0       0       0
  7395 ;;Total ram usage:        5 bytes
  7396 ;; Hardware stack levels used: 1
  7397 ;; Hardware stack levels required when called: 3
  7398 ;; This function calls:
  7399 ;;		___wmul
  7400 ;; This function is called by:
  7401 ;;		_vfpfcnvrt
  7402 ;; This function uses a non-reentrant model
  7403 ;;
  7404                           
  7405                           	psect	text28
  7406   001FC8                     __ptext28:
  7407                           	callstack 0
  7408   001FC8                     _read_prec_or_width:
  7409                           	callstack 22
  7410   001FC8                     
  7411                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  7412   001FC8  0E00               	movlw	0
  7413   001FCA  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  7414   001FCC  0E00               	movlw	0
  7415   001FCE  6E0F               	movwf	read_prec_or_width@n^0,c
  7416   001FD0                     
  7417                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  7418   001FD0  500C               	movf	read_prec_or_width@fmt^0,w,c
  7419   001FD2  6ED9               	movwf	fsr2l,c
  7420   001FD4  6ADA               	clrf	fsr2h,c
  7421   001FD6  CFDE FFF6          	movff	postinc2,tblptrl
  7422   001FDA  CFDD FFF7          	movff	postdec2,tblptrh
  7423   001FDE                     	if	0	;tblptru may be non-zero
  7424   001FDE                     	endif
  7425   001FDE                     	if	0	;tblptru may be non-zero
  7426   001FDE                     	endif
  7427   001FDE  0008               	tblrd		*
  7428   001FE0  50F5               	movf	tablat,w,c
  7429   001FE2  0A2A               	xorlw	42
  7430   001FE4  A4D8               	btfss	status,2,c
  7431   001FE6  EFF7  F00F         	goto	u4341
  7432   001FEA  EFF9  F00F         	goto	u4340
  7433   001FEE                     u4341:
  7434   001FEE  EF23  F010         	goto	l5517
  7435   001FF2                     u4340:
  7436   001FF2                     
  7437                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  7438   001FF2  500C               	movf	read_prec_or_width@fmt^0,w,c
  7439   001FF4  6ED9               	movwf	fsr2l,c
  7440   001FF6  6ADA               	clrf	fsr2h,c
  7441   001FF8  2ADE               	incf	postinc2,f,c
  7442   001FFA  0E00               	movlw	0
  7443   001FFC  22DD               	addwfc	postdec2,f,c
  7444   001FFE                     
  7445                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  7446   001FFE  500D               	movf	read_prec_or_width@ap^0,w,c
  7447   002000  6ED9               	movwf	fsr2l,c
  7448   002002  6ADA               	clrf	fsr2h,c
  7449   002004  0E02               	movlw	2
  7450   002006  26DF               	addwf	indf2,f,c
  7451   002008  5CDF               	subwf	indf2,w,c
  7452   00200A  6ED9               	movwf	fsr2l,c
  7453   00200C  6ADA               	clrf	fsr2h,c
  7454   00200E  CFDE F00F          	movff	postinc2,read_prec_or_width@n
  7455   002012  CFDE F010          	movff	postinc2,read_prec_or_width@n+1
  7456                           
  7457                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  7458   002016  EF36  F010         	goto	l2046
  7459   00201A                     l5513:
  7460                           
  7461                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  7462   00201A  C00F  F006         	movff	read_prec_or_width@n,___wmul@multiplier
  7463   00201E  C010  F007         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  7464   002022  0E00               	movlw	0
  7465   002024  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  7466   002026  0E0A               	movlw	10
  7467   002028  6E08               	movwf	___wmul@multiplicand^0,c
  7468   00202A  EC69  F014         	call	___wmul	;wreg free
  7469   00202E  500E               	movf	read_prec_or_width@c^0,w,c
  7470   002030  2406               	addwf	?___wmul^0,w,c
  7471   002032  6E0F               	movwf	read_prec_or_width@n^0,c
  7472   002034  0E00               	movlw	0
  7473   002036  2007               	addwfc	(?___wmul+1)^0,w,c
  7474   002038  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  7475   00203A                     
  7476                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  7477   00203A  500C               	movf	read_prec_or_width@fmt^0,w,c
  7478   00203C  6ED9               	movwf	fsr2l,c
  7479   00203E  6ADA               	clrf	fsr2h,c
  7480   002040  2ADE               	incf	postinc2,f,c
  7481   002042  0E00               	movlw	0
  7482   002044  22DD               	addwfc	postdec2,f,c
  7483   002046                     l5517:
  7484                           
  7485                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  7486   002046  500C               	movf	read_prec_or_width@fmt^0,w,c
  7487   002048  6ED9               	movwf	fsr2l,c
  7488   00204A  6ADA               	clrf	fsr2h,c
  7489   00204C  CFDE FFF6          	movff	postinc2,tblptrl
  7490   002050  CFDD FFF7          	movff	postdec2,tblptrh
  7491   002054                     	if	0	;tblptru may be non-zero
  7492   002054                     	endif
  7493   002054                     	if	0	;tblptru may be non-zero
  7494   002054                     	endif
  7495   002054  0008               	tblrd		*
  7496   002056  50F5               	movf	tablat,w,c
  7497   002058  0FD0               	addlw	208
  7498   00205A  6E0E               	movwf	read_prec_or_width@c^0,c
  7499   00205C  0E09               	movlw	9
  7500   00205E  640E               	cpfsgt	read_prec_or_width@c^0,c
  7501   002060  EF34  F010         	goto	u4351
  7502   002064  EF36  F010         	goto	u4350
  7503   002068                     u4351:
  7504   002068  EF0D  F010         	goto	l5513
  7505   00206C                     u4350:
  7506   00206C                     l2046:
  7507                           
  7508                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  7509   00206C  C00F  F00C         	movff	read_prec_or_width@n,?_read_prec_or_width
  7510   002070  C010  F00D         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  7511   002074  0012               	return		;funcret
  7512   002076                     __end_of_read_prec_or_width:
  7513                           	callstack 0
  7514                           
  7515 ;; *************** function ___wmul *****************
  7516 ;; Defined at:
  7517 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  7518 ;; Parameters:    Size  Location     Type
  7519 ;;  multiplier      2    5[COMRAM] unsigned int 
  7520 ;;  multiplicand    2    7[COMRAM] unsigned int 
  7521 ;; Auto vars:     Size  Location     Type
  7522 ;;  product         2    9[COMRAM] unsigned int 
  7523 ;; Return value:  Size  Location     Type
  7524 ;;                  2    5[COMRAM] unsigned int 
  7525 ;; Registers used:
  7526 ;;		wreg, status,2, status,0, prodl, prodh
  7527 ;; Tracked objects:
  7528 ;;		On entry : 0/0
  7529 ;;		On exit  : 0/0
  7530 ;;		Unchanged: 0/0
  7531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7532 ;;      Params:         4       0       0       0       0       0       0
  7533 ;;      Locals:         2       0       0       0       0       0       0
  7534 ;;      Temps:          0       0       0       0       0       0       0
  7535 ;;      Totals:         6       0       0       0       0       0       0
  7536 ;;Total ram usage:        6 bytes
  7537 ;; Hardware stack levels used: 1
  7538 ;; Hardware stack levels required when called: 2
  7539 ;; This function calls:
  7540 ;;		Nothing
  7541 ;; This function is called by:
  7542 ;;		_store_event
  7543 ;;		_read_prec_or_width
  7544 ;; This function uses a non-reentrant model
  7545 ;;
  7546                           
  7547                           	psect	text29
  7548   0028D2                     __ptext29:
  7549                           	callstack 0
  7550   0028D2                     ___wmul:
  7551                           	callstack 22
  7552   0028D2  5006               	movf	___wmul@multiplier^0,w,c
  7553   0028D4  0208               	mulwf	___wmul@multiplicand^0,c
  7554   0028D6  CFF3 F00A          	movff	prodl,___wmul@product
  7555   0028DA  CFF4 F00B          	movff	prodh,___wmul@product+1
  7556   0028DE  5006               	movf	___wmul@multiplier^0,w,c
  7557   0028E0  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  7558   0028E2  50F3               	movf	243,w,c
  7559   0028E4  260B               	addwf	(___wmul@product+1)^0,f,c
  7560   0028E6  5007               	movf	(___wmul@multiplier+1)^0,w,c
  7561   0028E8  0208               	mulwf	___wmul@multiplicand^0,c
  7562   0028EA  50F3               	movf	243,w,c
  7563   0028EC  260B               	addwf	(___wmul@product+1)^0,f,c
  7564   0028EE  C00A  F006         	movff	___wmul@product,?___wmul
  7565   0028F2  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  7566   0028F6  0012               	return		;funcret
  7567   0028F8                     __end_of___wmul:
  7568                           	callstack 0
  7569                           
  7570 ;; *************** function _dtoa *****************
  7571 ;; Defined at:
  7572 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7573 ;; Parameters:    Size  Location     Type
  7574 ;;  fp              1   27[COMRAM] PTR struct _IO_FILE
  7575 ;;		 -> sprintf@f(12), 
  7576 ;;  d               2   28[COMRAM] int 
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;  i               2   36[COMRAM] int 
  7579 ;;  w               2   33[COMRAM] int 
  7580 ;;  s               1   35[COMRAM] unsigned char 
  7581 ;;  p               1   32[COMRAM] _Bool 
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  1    wreg      void 
  7584 ;; Registers used:
  7585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7591 ;;      Params:         3       0       0       0       0       0       0
  7592 ;;      Locals:         8       0       0       0       0       0       0
  7593 ;;      Temps:          0       0       0       0       0       0       0
  7594 ;;      Totals:        11       0       0       0       0       0       0
  7595 ;;Total ram usage:       11 bytes
  7596 ;; Hardware stack levels used: 1
  7597 ;; Hardware stack levels required when called: 6
  7598 ;; This function calls:
  7599 ;;		___awdiv
  7600 ;;		___awmod
  7601 ;;		_abs
  7602 ;;		_pad
  7603 ;; This function is called by:
  7604 ;;		_vfpfcnvrt
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           	psect	text30
  7609   00179E                     __ptext30:
  7610                           	callstack 0
  7611   00179E                     _dtoa:
  7612                           	callstack 19
  7613   00179E                     
  7614                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  7615   00179E  0E01               	movlw	1
  7616   0017A0  6E21               	movwf	dtoa@p^0,c
  7617   0017A2                     
  7618                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  7619   0017A2  BE1E               	btfsc	(dtoa@d+1)^0,7,c
  7620   0017A4  EFD6  F00B         	goto	u4171
  7621   0017A8  EFD9  F00B         	goto	u4170
  7622   0017AC                     u4171:
  7623   0017AC  0E01               	movlw	1
  7624   0017AE  EFDA  F00B         	goto	u4180
  7625   0017B2                     u4170:
  7626   0017B2  0E00               	movlw	0
  7627   0017B4                     u4180:
  7628   0017B4  6E24               	movwf	dtoa@s^0,c
  7629   0017B6                     
  7630                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  7631   0017B6  C07B  F022         	movff	_width,dtoa@w
  7632   0017BA  C07C  F023         	movff	_width+1,dtoa@w+1
  7633   0017BE                     
  7634                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
  7635   0017BE  5024               	movf	dtoa@s^0,w,c
  7636   0017C0  B4D8               	btfsc	status,2,c
  7637   0017C2  EFE5  F00B         	goto	u4191
  7638   0017C6  EFE7  F00B         	goto	u4190
  7639   0017CA                     u4191:
  7640   0017CA  EFFE  F00B         	goto	l2012
  7641   0017CE                     u4190:
  7642   0017CE                     
  7643                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
  7644   0017CE  0622               	decf	dtoa@w^0,f,c
  7645   0017D0  A0D8               	btfss	status,0,c
  7646   0017D2  0623               	decf	(dtoa@w+1)^0,f,c
  7647   0017D4                     
  7648                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  7649   0017D4  5024               	movf	dtoa@s^0,w,c
  7650   0017D6  A4D8               	btfss	status,2,c
  7651   0017D8  EFF0  F00B         	goto	u4201
  7652   0017DC  EFF2  F00B         	goto	u4200
  7653   0017E0                     u4201:
  7654   0017E0  EFF8  F00B         	goto	l5441
  7655   0017E4                     u4200:
  7656   0017E4  0E00               	movlw	0
  7657   0017E6  6E20               	movwf	(_dtoa$1492+1)^0,c
  7658   0017E8  0E2B               	movlw	43
  7659   0017EA  6E1F               	movwf	_dtoa$1492^0,c
  7660   0017EC  EFFC  F00B         	goto	l5443
  7661   0017F0                     l5441:
  7662   0017F0  0E00               	movlw	0
  7663   0017F2  6E20               	movwf	(_dtoa$1492+1)^0,c
  7664   0017F4  0E2D               	movlw	45
  7665   0017F6  6E1F               	movwf	_dtoa$1492^0,c
  7666   0017F8                     l5443:
  7667   0017F8  C01F  F024         	movff	_dtoa$1492,dtoa@s
  7668   0017FC                     l2012:
  7669                           
  7670                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  7671   0017FC  0E00               	movlw	0
  7672   0017FE  6E26               	movwf	(dtoa@i+1)^0,c
  7673   001800  0E1F               	movlw	31
  7674   001802  6E25               	movwf	dtoa@i^0,c
  7675   001804                     
  7676                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  7677   001804  0E00               	movlw	0
  7678   001806  0101               	movlb	1	; () banked
  7679   001808  6F1F               	movwf	(_dbuf+31)& (0+255),b
  7680                           
  7681                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7682   00180A  EF36  F00C         	goto	l5457
  7683   00180E                     l5447:
  7684                           
  7685                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
  7686   00180E  0625               	decf	dtoa@i^0,f,c
  7687   001810  A0D8               	btfss	status,0,c
  7688   001812  0626               	decf	(dtoa@i+1)^0,f,c
  7689   001814                     
  7690                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  7691   001814  0E00               	movlw	low _dbuf
  7692   001816  2425               	addwf	dtoa@i^0,w,c
  7693   001818  6ED9               	movwf	fsr2l,c
  7694   00181A  0E01               	movlw	high _dbuf
  7695   00181C  2026               	addwfc	(dtoa@i+1)^0,w,c
  7696   00181E  6EDA               	movwf	fsr2h,c
  7697   001820  C01D  F006         	movff	dtoa@d,___awmod@dividend
  7698   001824  C01E  F007         	movff	dtoa@d+1,___awmod@dividend+1
  7699   001828  0E00               	movlw	0
  7700   00182A  6E09               	movwf	(___awmod@divisor+1)^0,c
  7701   00182C  0E0A               	movlw	10
  7702   00182E  6E08               	movwf	___awmod@divisor^0,c
  7703   001830  EC8C  F00F         	call	___awmod	;wreg free
  7704   001834  C006  F00C         	movff	?___awmod,abs@a
  7705   001838  C007  F00D         	movff	?___awmod+1,abs@a+1
  7706   00183C  EC0B  F014         	call	_abs	;wreg free
  7707   001840  500C               	movf	?_abs^0,w,c
  7708   001842  0F30               	addlw	48
  7709   001844  6EDF               	movwf	indf2,c
  7710   001846                     
  7711                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  7712   001846  0E00               	movlw	0
  7713   001848  6E21               	movwf	dtoa@p^0,c
  7714   00184A                     
  7715                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
  7716   00184A  0622               	decf	dtoa@w^0,f,c
  7717   00184C  A0D8               	btfss	status,0,c
  7718   00184E  0623               	decf	(dtoa@w+1)^0,f,c
  7719   001850                     
  7720                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  7721   001850  C01D  F006         	movff	dtoa@d,___awdiv@dividend
  7722   001854  C01E  F007         	movff	dtoa@d+1,___awdiv@dividend+1
  7723   001858  0E00               	movlw	0
  7724   00185A  6E09               	movwf	(___awdiv@divisor+1)^0,c
  7725   00185C  0E0A               	movlw	10
  7726   00185E  6E08               	movwf	___awdiv@divisor^0,c
  7727   001860  ECCA  F00E         	call	___awdiv	;wreg free
  7728   001864  C006  F01D         	movff	?___awdiv,dtoa@d
  7729   001868  C007  F01E         	movff	?___awdiv+1,dtoa@d+1
  7730   00186C                     l5457:
  7731                           
  7732                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7733   00186C  BE26               	btfsc	(dtoa@i+1)^0,7,c
  7734   00186E  EF41  F00C         	goto	u4211
  7735   001872  5026               	movf	(dtoa@i+1)^0,w,c
  7736   001874  E108               	bnz	u4210
  7737   001876  0425               	decf	dtoa@i^0,w,c
  7738   001878  A0D8               	btfss	status,0,c
  7739   00187A  EF41  F00C         	goto	u4211
  7740   00187E  EF43  F00C         	goto	u4210
  7741   001882                     u4211:
  7742   001882  EF54  F00C         	goto	l5463
  7743   001886                     u4210:
  7744   001886  501D               	movf	dtoa@d^0,w,c
  7745   001888  101E               	iorwf	(dtoa@d+1)^0,w,c
  7746   00188A  A4D8               	btfss	status,2,c
  7747   00188C  EF4A  F00C         	goto	u4221
  7748   001890  EF4C  F00C         	goto	u4220
  7749   001894                     u4221:
  7750   001894  EF07  F00C         	goto	l5447
  7751   001898                     u4220:
  7752   001898  5021               	movf	dtoa@p^0,w,c
  7753   00189A  A4D8               	btfss	status,2,c
  7754   00189C  EF52  F00C         	goto	u4231
  7755   0018A0  EF54  F00C         	goto	u4230
  7756   0018A4                     u4231:
  7757   0018A4  EF07  F00C         	goto	l5447
  7758   0018A8                     u4230:
  7759   0018A8                     l5463:
  7760                           
  7761                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  7762   0018A8  5024               	movf	dtoa@s^0,w,c
  7763   0018AA  B4D8               	btfsc	status,2,c
  7764   0018AC  EF5A  F00C         	goto	u4241
  7765   0018B0  EF5C  F00C         	goto	u4240
  7766   0018B4                     u4241:
  7767   0018B4  EF67  F00C         	goto	l5469
  7768   0018B8                     u4240:
  7769   0018B8                     
  7770                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
  7771   0018B8  0625               	decf	dtoa@i^0,f,c
  7772   0018BA  A0D8               	btfss	status,0,c
  7773   0018BC  0626               	decf	(dtoa@i+1)^0,f,c
  7774   0018BE                     
  7775                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  7776   0018BE  0E00               	movlw	low _dbuf
  7777   0018C0  2425               	addwf	dtoa@i^0,w,c
  7778   0018C2  6ED9               	movwf	fsr2l,c
  7779   0018C4  0E01               	movlw	high _dbuf
  7780   0018C6  2026               	addwfc	(dtoa@i+1)^0,w,c
  7781   0018C8  6EDA               	movwf	fsr2h,c
  7782   0018CA  C024  FFDF         	movff	dtoa@s,indf2
  7783   0018CE                     l5469:
  7784                           
  7785                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  7786   0018CE  C01C  F014         	movff	dtoa@fp,pad@fp
  7787   0018D2  0E00               	movlw	low _dbuf
  7788   0018D4  2425               	addwf	dtoa@i^0,w,c
  7789   0018D6  6E15               	movwf	pad@buf^0,c
  7790   0018D8  0E01               	movlw	high _dbuf
  7791   0018DA  2026               	addwfc	(dtoa@i+1)^0,w,c
  7792   0018DC  6E16               	movwf	(pad@buf+1)^0,c
  7793   0018DE  C022  F017         	movff	dtoa@w,pad@p
  7794   0018E2  C023  F018         	movff	dtoa@w+1,pad@p+1
  7795   0018E6  ECE4  F010         	call	_pad	;wreg free
  7796   0018EA  0012               	return		;funcret
  7797   0018EC                     __end_of_dtoa:
  7798                           	callstack 0
  7799                           
  7800 ;; *************** function _pad *****************
  7801 ;; Defined at:
  7802 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7803 ;; Parameters:    Size  Location     Type
  7804 ;;  fp              1   19[COMRAM] PTR struct _IO_FILE
  7805 ;;		 -> sprintf@f(12), 
  7806 ;;  buf             2   20[COMRAM] PTR unsigned char 
  7807 ;;		 -> dbuf(32), 
  7808 ;;  p               2   22[COMRAM] int 
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;  i               2   25[COMRAM] int 
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  1    wreg      void 
  7813 ;; Registers used:
  7814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7820 ;;      Params:         5       0       0       0       0       0       0
  7821 ;;      Locals:         2       0       0       0       0       0       0
  7822 ;;      Temps:          1       0       0       0       0       0       0
  7823 ;;      Totals:         8       0       0       0       0       0       0
  7824 ;;Total ram usage:        8 bytes
  7825 ;; Hardware stack levels used: 1
  7826 ;; Hardware stack levels required when called: 5
  7827 ;; This function calls:
  7828 ;;		_fputc
  7829 ;;		_fputs
  7830 ;; This function is called by:
  7831 ;;		_dtoa
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834                           
  7835                           	psect	text31
  7836   0021C8                     __ptext31:
  7837                           	callstack 0
  7838   0021C8                     _pad:
  7839                           	callstack 19
  7840   0021C8                     
  7841                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  7842   0021C8  0100               	movlb	0	; () banked
  7843   0021CA  A185               	btfss	_flags& (0+255),0,b
  7844   0021CC  EFEA  F010         	goto	u4071
  7845   0021D0  EFEC  F010         	goto	u4070
  7846   0021D4                     u4071:
  7847   0021D4  EFF4  F010         	goto	l5387
  7848   0021D8                     u4070:
  7849   0021D8                     
  7850                           ; BSR set to: 0
  7851                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  7852   0021D8  C015  F00E         	movff	pad@buf,fputs@s
  7853   0021DC  C016  F00F         	movff	pad@buf+1,fputs@s+1
  7854   0021E0  C014  F010         	movff	pad@fp,fputs@fp
  7855   0021E4  EC91  F013         	call	_fputs	;wreg free
  7856   0021E8                     l5387:
  7857                           
  7858                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  7859   0021E8  BE18               	btfsc	(pad@p+1)^0,7,c
  7860   0021EA  EFFB  F010         	goto	u4080
  7861   0021EE  EFF9  F010         	goto	u4081
  7862   0021F2                     u4081:
  7863   0021F2  EFFF  F010         	goto	l1988
  7864   0021F6                     u4080:
  7865   0021F6                     
  7866                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  7867   0021F6  0E00               	movlw	0
  7868   0021F8  6E18               	movwf	(pad@p+1)^0,c
  7869   0021FA  0E00               	movlw	0
  7870   0021FC  6E17               	movwf	pad@p^0,c
  7871   0021FE                     l1988:
  7872                           
  7873                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  7874   0021FE  0E00               	movlw	0
  7875   002200  6E1B               	movwf	(pad@i+1)^0,c
  7876   002202  0E00               	movlw	0
  7877   002204  6E1A               	movwf	pad@i^0,c
  7878                           
  7879                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  7880   002206  EF0F  F011         	goto	l5395
  7881   00220A                     l5391:
  7882                           
  7883                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  7884   00220A  0E00               	movlw	0
  7885   00220C  6E07               	movwf	(fputc@c+1)^0,c
  7886   00220E  0E20               	movlw	32
  7887   002210  6E06               	movwf	fputc@c^0,c
  7888   002212  C014  F008         	movff	pad@fp,fputc@fp
  7889   002216  EC3B  F010         	call	_fputc	;wreg free
  7890   00221A                     
  7891                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  7892   00221A  4A1A               	infsnz	pad@i^0,f,c
  7893   00221C  2A1B               	incf	(pad@i+1)^0,f,c
  7894   00221E                     l5395:
  7895                           
  7896                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  7897   00221E  5017               	movf	pad@p^0,w,c
  7898   002220  5C1A               	subwf	pad@i^0,w,c
  7899   002222  501B               	movf	(pad@i+1)^0,w,c
  7900   002224  0A80               	xorlw	128
  7901   002226  6E19               	movwf	??_pad^0,c
  7902   002228  5018               	movf	(pad@p+1)^0,w,c
  7903   00222A  0A80               	xorlw	128
  7904   00222C  5819               	subwfb	??_pad^0,w,c
  7905   00222E  A0D8               	btfss	status,0,c
  7906   002230  EF1C  F011         	goto	u4091
  7907   002234  EF1E  F011         	goto	u4090
  7908   002238                     u4091:
  7909   002238  EF05  F011         	goto	l5391
  7910   00223C                     u4090:
  7911   00223C                     
  7912                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  7913   00223C  0100               	movlb	0	; () banked
  7914   00223E  B185               	btfsc	_flags& (0+255),0,b
  7915   002240  EF24  F011         	goto	u4101
  7916   002244  EF26  F011         	goto	u4100
  7917   002248                     u4101:
  7918   002248  EF2E  F011         	goto	l1993
  7919   00224C                     u4100:
  7920   00224C                     
  7921                           ; BSR set to: 0
  7922                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  7923   00224C  C015  F00E         	movff	pad@buf,fputs@s
  7924   002250  C016  F00F         	movff	pad@buf+1,fputs@s+1
  7925   002254  C014  F010         	movff	pad@fp,fputs@fp
  7926   002258  EC91  F013         	call	_fputs	;wreg free
  7927   00225C                     l1993:
  7928   00225C  0012               	return		;funcret
  7929   00225E                     __end_of_pad:
  7930                           	callstack 0
  7931                           
  7932 ;; *************** function _fputs *****************
  7933 ;; Defined at:
  7934 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;  s               2   13[COMRAM] PTR const unsigned char 
  7937 ;;		 -> dbuf(32), 
  7938 ;;  fp              1   15[COMRAM] PTR struct _IO_FILE
  7939 ;;		 -> sprintf@f(12), 
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;  i               2   17[COMRAM] int 
  7942 ;;  c               1   16[COMRAM] unsigned char 
  7943 ;; Return value:  Size  Location     Type
  7944 ;;                  2   13[COMRAM] int 
  7945 ;; Registers used:
  7946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7947 ;; Tracked objects:
  7948 ;;		On entry : 0/0
  7949 ;;		On exit  : 0/0
  7950 ;;		Unchanged: 0/0
  7951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7952 ;;      Params:         3       0       0       0       0       0       0
  7953 ;;      Locals:         3       0       0       0       0       0       0
  7954 ;;      Temps:          0       0       0       0       0       0       0
  7955 ;;      Totals:         6       0       0       0       0       0       0
  7956 ;;Total ram usage:        6 bytes
  7957 ;; Hardware stack levels used: 1
  7958 ;; Hardware stack levels required when called: 4
  7959 ;; This function calls:
  7960 ;;		_fputc
  7961 ;; This function is called by:
  7962 ;;		_pad
  7963 ;; This function uses a non-reentrant model
  7964 ;;
  7965                           
  7966                           	psect	text32
  7967   002722                     __ptext32:
  7968                           	callstack 0
  7969   002722                     _fputs:
  7970                           	callstack 19
  7971   002722  0E00               	movlw	0
  7972   002724  6E13               	movwf	(fputs@i+1)^0,c
  7973   002726  0E00               	movlw	0
  7974   002728  6E12               	movwf	fputs@i^0,c
  7975   00272A  EFA0  F013         	goto	l5295
  7976   00272E                     l5291:
  7977   00272E  C011  F006         	movff	fputs@c,fputc@c
  7978   002732  6A07               	clrf	(fputc@c+1)^0,c
  7979   002734  C010  F008         	movff	fputs@fp,fputc@fp
  7980   002738  EC3B  F010         	call	_fputc	;wreg free
  7981   00273C  4A12               	infsnz	fputs@i^0,f,c
  7982   00273E  2A13               	incf	(fputs@i+1)^0,f,c
  7983   002740                     l5295:
  7984   002740  5012               	movf	fputs@i^0,w,c
  7985   002742  240E               	addwf	fputs@s^0,w,c
  7986   002744  6ED9               	movwf	fsr2l,c
  7987   002746  5013               	movf	(fputs@i+1)^0,w,c
  7988   002748  200F               	addwfc	(fputs@s+1)^0,w,c
  7989   00274A  6EDA               	movwf	fsr2h,c
  7990   00274C  50DF               	movf	indf2,w,c
  7991   00274E  6E11               	movwf	fputs@c^0,c
  7992   002750  5011               	movf	fputs@c^0,w,c
  7993   002752  A4D8               	btfss	status,2,c
  7994   002754  EFAE  F013         	goto	u3941
  7995   002758  EFB0  F013         	goto	u3940
  7996   00275C                     u3941:
  7997   00275C  EF97  F013         	goto	l5291
  7998   002760                     u3940:
  7999   002760  0012               	return		;funcret
  8000   002762                     __end_of_fputs:
  8001                           	callstack 0
  8002                           
  8003 ;; *************** function _abs *****************
  8004 ;; Defined at:
  8005 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;  a               2   11[COMRAM] int 
  8008 ;; Auto vars:     Size  Location     Type
  8009 ;;		None
  8010 ;; Return value:  Size  Location     Type
  8011 ;;                  2   11[COMRAM] int 
  8012 ;; Registers used:
  8013 ;;		wreg, status,2, status,0
  8014 ;; Tracked objects:
  8015 ;;		On entry : 0/0
  8016 ;;		On exit  : 0/0
  8017 ;;		Unchanged: 0/0
  8018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8019 ;;      Params:         2       0       0       0       0       0       0
  8020 ;;      Locals:         0       0       0       0       0       0       0
  8021 ;;      Temps:          2       0       0       0       0       0       0
  8022 ;;      Totals:         4       0       0       0       0       0       0
  8023 ;;Total ram usage:        4 bytes
  8024 ;; Hardware stack levels used: 1
  8025 ;; Hardware stack levels required when called: 2
  8026 ;; This function calls:
  8027 ;;		Nothing
  8028 ;; This function is called by:
  8029 ;;		_dtoa
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           
  8033                           	psect	text33
  8034   002816                     __ptext33:
  8035                           	callstack 0
  8036   002816                     _abs:
  8037                           	callstack 22
  8038   002816  BE0D               	btfsc	(abs@a+1)^0,7,c
  8039   002818  EF10  F014         	goto	u4111
  8040   00281C  EF12  F014         	goto	u4110
  8041   002820                     u4111:
  8042   002820  EF18  F014         	goto	l2073
  8043   002824                     u4110:
  8044   002824  C00C  F00C         	movff	abs@a,?_abs
  8045   002828  C00D  F00D         	movff	abs@a+1,?_abs+1
  8046   00282C  EF24  F014         	goto	l2076
  8047   002830                     l2073:
  8048   002830  C00C  F00E         	movff	abs@a,??_abs
  8049   002834  C00D  F00F         	movff	abs@a+1,??_abs+1
  8050   002838  1E0E               	comf	??_abs^0,f,c
  8051   00283A  1E0F               	comf	(??_abs+1)^0,f,c
  8052   00283C  4A0E               	infsnz	??_abs^0,f,c
  8053   00283E  2A0F               	incf	(??_abs+1)^0,f,c
  8054   002840  C00E  F00C         	movff	??_abs,?_abs
  8055   002844  C00F  F00D         	movff	??_abs+1,?_abs+1
  8056   002848                     l2076:
  8057   002848  0012               	return		;funcret
  8058   00284A                     __end_of_abs:
  8059                           	callstack 0
  8060                           
  8061 ;; *************** function ___awmod *****************
  8062 ;; Defined at:
  8063 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;  dividend        2    5[COMRAM] int 
  8066 ;;  divisor         2    7[COMRAM] int 
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;  sign            1   10[COMRAM] unsigned char 
  8069 ;;  counter         1    9[COMRAM] unsigned char 
  8070 ;; Return value:  Size  Location     Type
  8071 ;;                  2    5[COMRAM] int 
  8072 ;; Registers used:
  8073 ;;		wreg, status,2, status,0
  8074 ;; Tracked objects:
  8075 ;;		On entry : 0/0
  8076 ;;		On exit  : 0/0
  8077 ;;		Unchanged: 0/0
  8078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8079 ;;      Params:         4       0       0       0       0       0       0
  8080 ;;      Locals:         2       0       0       0       0       0       0
  8081 ;;      Temps:          0       0       0       0       0       0       0
  8082 ;;      Totals:         6       0       0       0       0       0       0
  8083 ;;Total ram usage:        6 bytes
  8084 ;; Hardware stack levels used: 1
  8085 ;; Hardware stack levels required when called: 2
  8086 ;; This function calls:
  8087 ;;		Nothing
  8088 ;; This function is called by:
  8089 ;;		_download_log
  8090 ;;		_settime
  8091 ;;		_view_log
  8092 ;;		_dtoa
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096                           	psect	text34
  8097   001F18                     __ptext34:
  8098                           	callstack 0
  8099   001F18                     ___awmod:
  8100                           	callstack 27
  8101   001F18  0E00               	movlw	0
  8102   001F1A  6E0B               	movwf	___awmod@sign^0,c
  8103   001F1C  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
  8104   001F1E  EF95  F00F         	goto	u4010
  8105   001F22  EF93  F00F         	goto	u4011
  8106   001F26                     u4011:
  8107   001F26  EF9B  F00F         	goto	l5355
  8108   001F2A                     u4010:
  8109   001F2A  6C06               	negf	___awmod@dividend^0,c
  8110   001F2C  1E07               	comf	(___awmod@dividend+1)^0,f,c
  8111   001F2E  B0D8               	btfsc	status,0,c
  8112   001F30  2A07               	incf	(___awmod@dividend+1)^0,f,c
  8113   001F32  0E01               	movlw	1
  8114   001F34  6E0B               	movwf	___awmod@sign^0,c
  8115   001F36                     l5355:
  8116   001F36  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
  8117   001F38  EFA2  F00F         	goto	u4020
  8118   001F3C  EFA0  F00F         	goto	u4021
  8119   001F40                     u4021:
  8120   001F40  EFA6  F00F         	goto	l5359
  8121   001F44                     u4020:
  8122   001F44  6C08               	negf	___awmod@divisor^0,c
  8123   001F46  1E09               	comf	(___awmod@divisor+1)^0,f,c
  8124   001F48  B0D8               	btfsc	status,0,c
  8125   001F4A  2A09               	incf	(___awmod@divisor+1)^0,f,c
  8126   001F4C                     l5359:
  8127   001F4C  5008               	movf	___awmod@divisor^0,w,c
  8128   001F4E  1009               	iorwf	(___awmod@divisor+1)^0,w,c
  8129   001F50  B4D8               	btfsc	status,2,c
  8130   001F52  EFAD  F00F         	goto	u4031
  8131   001F56  EFAF  F00F         	goto	u4030
  8132   001F5A                     u4031:
  8133   001F5A  EFD3  F00F         	goto	l5375
  8134   001F5E                     u4030:
  8135   001F5E  0E01               	movlw	1
  8136   001F60  6E0A               	movwf	___awmod@counter^0,c
  8137   001F62  EFB7  F00F         	goto	l5365
  8138   001F66                     l5363:
  8139   001F66  90D8               	bcf	status,0,c
  8140   001F68  3608               	rlcf	___awmod@divisor^0,f,c
  8141   001F6A  3609               	rlcf	(___awmod@divisor+1)^0,f,c
  8142   001F6C  2A0A               	incf	___awmod@counter^0,f,c
  8143   001F6E                     l5365:
  8144   001F6E  AE09               	btfss	(___awmod@divisor+1)^0,7,c
  8145   001F70  EFBC  F00F         	goto	u4041
  8146   001F74  EFBE  F00F         	goto	u4040
  8147   001F78                     u4041:
  8148   001F78  EFB3  F00F         	goto	l5363
  8149   001F7C                     u4040:
  8150   001F7C                     l5367:
  8151   001F7C  5008               	movf	___awmod@divisor^0,w,c
  8152   001F7E  5C06               	subwf	___awmod@dividend^0,w,c
  8153   001F80  5009               	movf	(___awmod@divisor+1)^0,w,c
  8154   001F82  5807               	subwfb	(___awmod@dividend+1)^0,w,c
  8155   001F84  A0D8               	btfss	status,0,c
  8156   001F86  EFC7  F00F         	goto	u4051
  8157   001F8A  EFC9  F00F         	goto	u4050
  8158   001F8E                     u4051:
  8159   001F8E  EFCD  F00F         	goto	l5371
  8160   001F92                     u4050:
  8161   001F92  5008               	movf	___awmod@divisor^0,w,c
  8162   001F94  5E06               	subwf	___awmod@dividend^0,f,c
  8163   001F96  5009               	movf	(___awmod@divisor+1)^0,w,c
  8164   001F98  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
  8165   001F9A                     l5371:
  8166   001F9A  90D8               	bcf	status,0,c
  8167   001F9C  3209               	rrcf	(___awmod@divisor+1)^0,f,c
  8168   001F9E  3208               	rrcf	___awmod@divisor^0,f,c
  8169   001FA0  2E0A               	decfsz	___awmod@counter^0,f,c
  8170   001FA2  EFBE  F00F         	goto	l5367
  8171   001FA6                     l5375:
  8172   001FA6  500B               	movf	___awmod@sign^0,w,c
  8173   001FA8  B4D8               	btfsc	status,2,c
  8174   001FAA  EFD9  F00F         	goto	u4061
  8175   001FAE  EFDB  F00F         	goto	u4060
  8176   001FB2                     u4061:
  8177   001FB2  EFDF  F00F         	goto	l5379
  8178   001FB6                     u4060:
  8179   001FB6  6C06               	negf	___awmod@dividend^0,c
  8180   001FB8  1E07               	comf	(___awmod@dividend+1)^0,f,c
  8181   001FBA  B0D8               	btfsc	status,0,c
  8182   001FBC  2A07               	incf	(___awmod@dividend+1)^0,f,c
  8183   001FBE                     l5379:
  8184   001FBE  C006  F006         	movff	___awmod@dividend,?___awmod
  8185   001FC2  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  8186   001FC6  0012               	return		;funcret
  8187   001FC8                     __end_of___awmod:
  8188                           	callstack 0
  8189                           
  8190 ;; *************** function ___awdiv *****************
  8191 ;; Defined at:
  8192 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  8193 ;; Parameters:    Size  Location     Type
  8194 ;;  dividend        2    5[COMRAM] int 
  8195 ;;  divisor         2    7[COMRAM] int 
  8196 ;; Auto vars:     Size  Location     Type
  8197 ;;  quotient        2   11[COMRAM] int 
  8198 ;;  sign            1   10[COMRAM] unsigned char 
  8199 ;;  counter         1    9[COMRAM] unsigned char 
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  2    5[COMRAM] int 
  8202 ;; Registers used:
  8203 ;;		wreg, status,2, status,0
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8209 ;;      Params:         4       0       0       0       0       0       0
  8210 ;;      Locals:         4       0       0       0       0       0       0
  8211 ;;      Temps:          0       0       0       0       0       0       0
  8212 ;;      Totals:         8       0       0       0       0       0       0
  8213 ;;Total ram usage:        8 bytes
  8214 ;; Hardware stack levels used: 1
  8215 ;; Hardware stack levels required when called: 2
  8216 ;; This function calls:
  8217 ;;		Nothing
  8218 ;; This function is called by:
  8219 ;;		_settime
  8220 ;;		_dtoa
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           	psect	text35
  8225   001D94                     __ptext35:
  8226                           	callstack 0
  8227   001D94                     ___awdiv:
  8228                           	callstack 22
  8229   001D94  0E00               	movlw	0
  8230   001D96  6E0B               	movwf	___awdiv@sign^0,c
  8231   001D98  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  8232   001D9A  EFD3  F00E         	goto	u3950
  8233   001D9E  EFD1  F00E         	goto	u3951
  8234   001DA2                     u3951:
  8235   001DA2  EFD9  F00E         	goto	l5311
  8236   001DA6                     u3950:
  8237   001DA6  6C08               	negf	___awdiv@divisor^0,c
  8238   001DA8  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  8239   001DAA  B0D8               	btfsc	status,0,c
  8240   001DAC  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  8241   001DAE  0E01               	movlw	1
  8242   001DB0  6E0B               	movwf	___awdiv@sign^0,c
  8243   001DB2                     l5311:
  8244   001DB2  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  8245   001DB4  EFE0  F00E         	goto	u3960
  8246   001DB8  EFDE  F00E         	goto	u3961
  8247   001DBC                     u3961:
  8248   001DBC  EFE6  F00E         	goto	l5317
  8249   001DC0                     u3960:
  8250   001DC0  6C06               	negf	___awdiv@dividend^0,c
  8251   001DC2  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  8252   001DC4  B0D8               	btfsc	status,0,c
  8253   001DC6  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  8254   001DC8  0E01               	movlw	1
  8255   001DCA  1A0B               	xorwf	___awdiv@sign^0,f,c
  8256   001DCC                     l5317:
  8257   001DCC  0E00               	movlw	0
  8258   001DCE  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  8259   001DD0  0E00               	movlw	0
  8260   001DD2  6E0C               	movwf	___awdiv@quotient^0,c
  8261   001DD4  5008               	movf	___awdiv@divisor^0,w,c
  8262   001DD6  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  8263   001DD8  B4D8               	btfsc	status,2,c
  8264   001DDA  EFF1  F00E         	goto	u3971
  8265   001DDE  EFF3  F00E         	goto	u3970
  8266   001DE2                     u3971:
  8267   001DE2  EF1B  F00F         	goto	l5339
  8268   001DE6                     u3970:
  8269   001DE6  0E01               	movlw	1
  8270   001DE8  6E0A               	movwf	___awdiv@counter^0,c
  8271   001DEA  EFFB  F00E         	goto	l5325
  8272   001DEE                     l5323:
  8273   001DEE  90D8               	bcf	status,0,c
  8274   001DF0  3608               	rlcf	___awdiv@divisor^0,f,c
  8275   001DF2  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  8276   001DF4  2A0A               	incf	___awdiv@counter^0,f,c
  8277   001DF6                     l5325:
  8278   001DF6  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  8279   001DF8  EF00  F00F         	goto	u3981
  8280   001DFC  EF02  F00F         	goto	u3980
  8281   001E00                     u3981:
  8282   001E00  EFF7  F00E         	goto	l5323
  8283   001E04                     u3980:
  8284   001E04                     l5327:
  8285   001E04  90D8               	bcf	status,0,c
  8286   001E06  360C               	rlcf	___awdiv@quotient^0,f,c
  8287   001E08  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  8288   001E0A  5008               	movf	___awdiv@divisor^0,w,c
  8289   001E0C  5C06               	subwf	___awdiv@dividend^0,w,c
  8290   001E0E  5009               	movf	(___awdiv@divisor+1)^0,w,c
  8291   001E10  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  8292   001E12  A0D8               	btfss	status,0,c
  8293   001E14  EF0E  F00F         	goto	u3991
  8294   001E18  EF10  F00F         	goto	u3990
  8295   001E1C                     u3991:
  8296   001E1C  EF15  F00F         	goto	l5335
  8297   001E20                     u3990:
  8298   001E20  5008               	movf	___awdiv@divisor^0,w,c
  8299   001E22  5E06               	subwf	___awdiv@dividend^0,f,c
  8300   001E24  5009               	movf	(___awdiv@divisor+1)^0,w,c
  8301   001E26  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  8302   001E28  800C               	bsf	___awdiv@quotient^0,0,c
  8303   001E2A                     l5335:
  8304   001E2A  90D8               	bcf	status,0,c
  8305   001E2C  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  8306   001E2E  3208               	rrcf	___awdiv@divisor^0,f,c
  8307   001E30  2E0A               	decfsz	___awdiv@counter^0,f,c
  8308   001E32  EF02  F00F         	goto	l5327
  8309   001E36                     l5339:
  8310   001E36  500B               	movf	___awdiv@sign^0,w,c
  8311   001E38  B4D8               	btfsc	status,2,c
  8312   001E3A  EF21  F00F         	goto	u4001
  8313   001E3E  EF23  F00F         	goto	u4000
  8314   001E42                     u4001:
  8315   001E42  EF27  F00F         	goto	l5343
  8316   001E46                     u4000:
  8317   001E46  6C0C               	negf	___awdiv@quotient^0,c
  8318   001E48  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  8319   001E4A  B0D8               	btfsc	status,0,c
  8320   001E4C  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  8321   001E4E                     l5343:
  8322   001E4E  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  8323   001E52  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  8324   001E56  0012               	return		;funcret
  8325   001E58                     __end_of___awdiv:
  8326                           	callstack 0
  8327                           
  8328 ;; *************** function _ctoa *****************
  8329 ;; Defined at:
  8330 ;;		line 476 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  8333 ;;		 -> sprintf@f(12), 
  8334 ;;  c               1   14[COMRAM] unsigned char 
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;  w               2   18[COMRAM] int 
  8337 ;;  l               2   16[COMRAM] int 
  8338 ;; Return value:  Size  Location     Type
  8339 ;;                  1    wreg      void 
  8340 ;; Registers used:
  8341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8342 ;; Tracked objects:
  8343 ;;		On entry : 0/0
  8344 ;;		On exit  : 0/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8347 ;;      Params:         2       0       0       0       0       0       0
  8348 ;;      Locals:         4       0       0       0       0       0       0
  8349 ;;      Temps:          1       0       0       0       0       0       0
  8350 ;;      Totals:         7       0       0       0       0       0       0
  8351 ;;Total ram usage:        7 bytes
  8352 ;; Hardware stack levels used: 1
  8353 ;; Hardware stack levels required when called: 4
  8354 ;; This function calls:
  8355 ;;		_fputc
  8356 ;; This function is called by:
  8357 ;;		_vfpfcnvrt
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361                           	psect	text36
  8362   001E58                     __ptext36:
  8363                           	callstack 0
  8364   001E58                     _ctoa:
  8365                           	callstack 21
  8366   001E58                     
  8367                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 476: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprn
      +                          t.c: 477: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 478:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 481:  
      +                             w = width ? width - 1 : width;
  8368   001E58  0100               	movlb	0	; () banked
  8369   001E5A  517B               	movf	_width& (0+255),w,b
  8370   001E5C  117C               	iorwf	(_width+1)& (0+255),w,b
  8371   001E5E  A4D8               	btfss	status,2,c
  8372   001E60  EF34  F00F         	goto	u4121
  8373   001E64  EF36  F00F         	goto	u4120
  8374   001E68                     u4121:
  8375   001E68  EF3C  F00F         	goto	l5407
  8376   001E6C                     u4120:
  8377   001E6C                     
  8378                           ; BSR set to: 0
  8379   001E6C  C07B  F013         	movff	_width,ctoa@w
  8380   001E70  C07C  F014         	movff	_width+1,ctoa@w+1
  8381   001E74  EF42  F00F         	goto	l5409
  8382   001E78                     l5407:
  8383                           
  8384                           ; BSR set to: 0
  8385   001E78  0EFF               	movlw	255
  8386   001E7A  257B               	addwf	_width& (0+255),w,b
  8387   001E7C  6E13               	movwf	ctoa@w^0,c
  8388   001E7E  0EFF               	movlw	255
  8389   001E80  217C               	addwfc	(_width+1)& (0+255),w,b
  8390   001E82  6E14               	movwf	(ctoa@w+1)^0,c
  8391   001E84                     l5409:
  8392                           
  8393                           ; BSR set to: 0
  8394                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 485:     if (flag
      +                          s & (1 << 0)) {
  8395   001E84  A185               	btfss	_flags& (0+255),0,b
  8396   001E86  EF47  F00F         	goto	u4131
  8397   001E8A  EF49  F00F         	goto	u4130
  8398   001E8E                     u4131:
  8399   001E8E  EF50  F00F         	goto	l5413
  8400   001E92                     u4130:
  8401   001E92                     
  8402                           ; BSR set to: 0
  8403                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 486:         fput
      +                          c(c, fp);
  8404   001E92  C00F  F006         	movff	ctoa@c,fputc@c
  8405   001E96  6A07               	clrf	(fputc@c+1)^0,c
  8406   001E98  C00E  F008         	movff	ctoa@fp,fputc@fp
  8407   001E9C  EC3B  F010         	call	_fputc	;wreg free
  8408   001EA0                     l5413:
  8409                           
  8410                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 491:     w = (w <
      +                           0) ? 0 : w;
  8411   001EA0  BE14               	btfsc	(ctoa@w+1)^0,7,c
  8412   001EA2  EF55  F00F         	goto	u4141
  8413   001EA6  EF57  F00F         	goto	u4140
  8414   001EAA                     u4141:
  8415   001EAA  EF59  F00F         	goto	l5417
  8416   001EAE                     u4140:
  8417   001EAE  EF5D  F00F         	goto	l2004
  8418   001EB2                     l5417:
  8419   001EB2  0E00               	movlw	0
  8420   001EB4  6E14               	movwf	(ctoa@w+1)^0,c
  8421   001EB6  0E00               	movlw	0
  8422   001EB8  6E13               	movwf	ctoa@w^0,c
  8423   001EBA                     l2004:
  8424                           
  8425                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 492:     l = 0;
  8426   001EBA  0E00               	movlw	0
  8427   001EBC  6E12               	movwf	(ctoa@l+1)^0,c
  8428   001EBE  0E00               	movlw	0
  8429   001EC0  6E11               	movwf	ctoa@l^0,c
  8430                           
  8431                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
  8432   001EC2  EF6D  F00F         	goto	l5423
  8433   001EC6                     l5419:
  8434                           
  8435                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 494:         fput
      +                          c(' ', fp);
  8436   001EC6  0E00               	movlw	0
  8437   001EC8  6E07               	movwf	(fputc@c+1)^0,c
  8438   001ECA  0E20               	movlw	32
  8439   001ECC  6E06               	movwf	fputc@c^0,c
  8440   001ECE  C00E  F008         	movff	ctoa@fp,fputc@fp
  8441   001ED2  EC3B  F010         	call	_fputc	;wreg free
  8442   001ED6                     
  8443                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 495:         ++l;
  8444   001ED6  4A11               	infsnz	ctoa@l^0,f,c
  8445   001ED8  2A12               	incf	(ctoa@l+1)^0,f,c
  8446   001EDA                     l5423:
  8447                           
  8448                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
  8449   001EDA  5013               	movf	ctoa@w^0,w,c
  8450   001EDC  5C11               	subwf	ctoa@l^0,w,c
  8451   001EDE  5012               	movf	(ctoa@l+1)^0,w,c
  8452   001EE0  0A80               	xorlw	128
  8453   001EE2  6E10               	movwf	??_ctoa^0,c
  8454   001EE4  5014               	movf	(ctoa@w+1)^0,w,c
  8455   001EE6  0A80               	xorlw	128
  8456   001EE8  5810               	subwfb	??_ctoa^0,w,c
  8457   001EEA  A0D8               	btfss	status,0,c
  8458   001EEC  EF7A  F00F         	goto	u4151
  8459   001EF0  EF7C  F00F         	goto	u4150
  8460   001EF4                     u4151:
  8461   001EF4  EF63  F00F         	goto	l5419
  8462   001EF8                     u4150:
  8463   001EF8                     
  8464                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 499:     if (!(fl
      +                          ags & (1 << 0))) {
  8465   001EF8  0100               	movlb	0	; () banked
  8466   001EFA  B185               	btfsc	_flags& (0+255),0,b
  8467   001EFC  EF82  F00F         	goto	u4161
  8468   001F00  EF84  F00F         	goto	u4160
  8469   001F04                     u4161:
  8470   001F04  EF8B  F00F         	goto	l2009
  8471   001F08                     u4160:
  8472   001F08                     
  8473                           ; BSR set to: 0
  8474                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 501:         fput
      +                          c(c, fp);
  8475   001F08  C00F  F006         	movff	ctoa@c,fputc@c
  8476   001F0C  6A07               	clrf	(fputc@c+1)^0,c
  8477   001F0E  C00E  F008         	movff	ctoa@fp,fputc@fp
  8478   001F12  EC3B  F010         	call	_fputc	;wreg free
  8479   001F16                     l2009:
  8480   001F16  0012               	return		;funcret
  8481   001F18                     __end_of_ctoa:
  8482                           	callstack 0
  8483                           
  8484 ;; *************** function _fputc *****************
  8485 ;; Defined at:
  8486 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;  c               2    5[COMRAM] int 
  8489 ;;  fp              1    7[COMRAM] PTR struct _IO_FILE
  8490 ;;		 -> sprintf@f(12), 
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;		None
  8493 ;; Return value:  Size  Location     Type
  8494 ;;                  2    5[COMRAM] int 
  8495 ;; Registers used:
  8496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/0
  8499 ;;		On exit  : 0/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8502 ;;      Params:         3       0       0       0       0       0       0
  8503 ;;      Locals:         0       0       0       0       0       0       0
  8504 ;;      Temps:          5       0       0       0       0       0       0
  8505 ;;      Totals:         8       0       0       0       0       0       0
  8506 ;;Total ram usage:        8 bytes
  8507 ;; Hardware stack levels used: 1
  8508 ;; Hardware stack levels required when called: 3
  8509 ;; This function calls:
  8510 ;;		_putch
  8511 ;; This function is called by:
  8512 ;;		_pad
  8513 ;;		_ctoa
  8514 ;;		_stoa
  8515 ;;		_vfpfcnvrt
  8516 ;;		_fputs
  8517 ;; This function uses a non-reentrant model
  8518 ;;
  8519                           
  8520                           	psect	text37
  8521   002076                     __ptext37:
  8522                           	callstack 0
  8523   002076                     _fputc:
  8524                           	callstack 21
  8525   002076  5008               	movf	fputc@fp^0,w,c
  8526   002078  B4D8               	btfsc	status,2,c
  8527   00207A  EF41  F010         	goto	u3901
  8528   00207E  EF43  F010         	goto	u3900
  8529   002082                     u3901:
  8530   002082  EF4B  F010         	goto	l5279
  8531   002086                     u3900:
  8532   002086  5008               	movf	fputc@fp^0,w,c
  8533   002088  A4D8               	btfss	status,2,c
  8534   00208A  EF49  F010         	goto	u3911
  8535   00208E  EF4B  F010         	goto	u3910
  8536   002092                     u3911:
  8537   002092  EF50  F010         	goto	l5281
  8538   002096                     u3910:
  8539   002096                     l5279:
  8540   002096  5006               	movf	fputc@c^0,w,c
  8541   002098  EC1F  F015         	call	_putch
  8542   00209C  EF8F  F010         	goto	l2088
  8543   0020A0                     l5281:
  8544   0020A0  5008               	movf	fputc@fp^0,w,c
  8545   0020A2  6ED9               	movwf	fsr2l,c
  8546   0020A4  6ADA               	clrf	fsr2h,c
  8547   0020A6  0E0A               	movlw	10
  8548   0020A8  26D9               	addwf	fsr2l,f,c
  8549   0020AA  50DE               	movf	postinc2,w,c
  8550   0020AC  10DE               	iorwf	postinc2,w,c
  8551   0020AE  B4D8               	btfsc	status,2,c
  8552   0020B0  EF5C  F010         	goto	u3921
  8553   0020B4  EF5E  F010         	goto	u3920
  8554   0020B8                     u3921:
  8555   0020B8  EF77  F010         	goto	l5285
  8556   0020BC                     u3920:
  8557   0020BC  5008               	movf	fputc@fp^0,w,c
  8558   0020BE  6ED9               	movwf	fsr2l,c
  8559   0020C0  6ADA               	clrf	fsr2h,c
  8560   0020C2  0E0A               	movlw	10
  8561   0020C4  26D9               	addwf	fsr2l,f,c
  8562   0020C6  5008               	movf	fputc@fp^0,w,c
  8563   0020C8  6EE1               	movwf	fsr1l,c
  8564   0020CA  6AE2               	clrf	fsr1h,c
  8565   0020CC  0E03               	movlw	3
  8566   0020CE  26E1               	addwf	fsr1l,f,c
  8567   0020D0  50DE               	movf	postinc2,w,c
  8568   0020D2  5CE6               	subwf	postinc1,w,c
  8569   0020D4  50E6               	movf	postinc1,w,c
  8570   0020D6  0A80               	xorlw	128
  8571   0020D8  6E0D               	movwf	(??_fputc+4)^0,c
  8572   0020DA  50DE               	movf	postinc2,w,c
  8573   0020DC  0A80               	xorlw	128
  8574   0020DE  580D               	subwfb	(??_fputc+4)^0,w,c
  8575   0020E0  B0D8               	btfsc	status,0,c
  8576   0020E2  EF75  F010         	goto	u3931
  8577   0020E6  EF77  F010         	goto	u3930
  8578   0020EA                     u3931:
  8579   0020EA  EF8F  F010         	goto	l2088
  8580   0020EE                     u3930:
  8581   0020EE                     l5285:
  8582   0020EE  5008               	movf	fputc@fp^0,w,c
  8583   0020F0  6ED9               	movwf	fsr2l,c
  8584   0020F2  6ADA               	clrf	fsr2h,c
  8585   0020F4  0E03               	movlw	3
  8586   0020F6  26D9               	addwf	fsr2l,f,c
  8587   0020F8  50DF               	movf	indf2,w,c
  8588   0020FA  6E09               	movwf	??_fputc^0,c
  8589   0020FC  5008               	movf	fputc@fp^0,w,c
  8590   0020FE  6ED9               	movwf	fsr2l,c
  8591   002100  6ADA               	clrf	fsr2h,c
  8592   002102  50DF               	movf	indf2,w,c
  8593   002104  2409               	addwf	??_fputc^0,w,c
  8594   002106  6ED9               	movwf	fsr2l,c
  8595   002108  6ADA               	clrf	fsr2h,c
  8596   00210A  C006  FFDF         	movff	fputc@c,indf2
  8597   00210E  5008               	movf	fputc@fp^0,w,c
  8598   002110  6ED9               	movwf	fsr2l,c
  8599   002112  6ADA               	clrf	fsr2h,c
  8600   002114  0E03               	movlw	3
  8601   002116  26D9               	addwf	fsr2l,f,c
  8602   002118  2ADE               	incf	postinc2,f,c
  8603   00211A  0E00               	movlw	0
  8604   00211C  22DD               	addwfc	postdec2,f,c
  8605   00211E                     l2088:
  8606   00211E  0012               	return		;funcret
  8607   002120                     __end_of_fputc:
  8608                           	callstack 0
  8609                           
  8610 ;; *************** function _putch *****************
  8611 ;; Defined at:
  8612 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;  c               1    wreg     unsigned char 
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;  c               1    0[COMRAM] unsigned char 
  8617 ;; Return value:  Size  Location     Type
  8618 ;;                  1    wreg      void 
  8619 ;; Registers used:
  8620 ;;		wreg
  8621 ;; Tracked objects:
  8622 ;;		On entry : 0/0
  8623 ;;		On exit  : 0/0
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8626 ;;      Params:         0       0       0       0       0       0       0
  8627 ;;      Locals:         0       0       0       0       0       0       0
  8628 ;;      Temps:          0       0       0       0       0       0       0
  8629 ;;      Totals:         0       0       0       0       0       0       0
  8630 ;;Total ram usage:        0 bytes
  8631 ;; Hardware stack levels used: 1
  8632 ;; Hardware stack levels required when called: 2
  8633 ;; This function calls:
  8634 ;;		Nothing
  8635 ;; This function is called by:
  8636 ;;		_fputc
  8637 ;; This function uses a non-reentrant model
  8638 ;;
  8639                           
  8640                           	psect	text38
  8641   002A3E                     __ptext38:
  8642                           	callstack 0
  8643   002A3E                     _putch:
  8644                           	callstack 21
  8645   002A3E  0012               	return		;funcret
  8646   002A40                     __end_of_putch:
  8647                           	callstack 0
  8648                           
  8649 ;; *************** function _get_time *****************
  8650 ;; Defined at:
  8651 ;;		line 24 in file "dashboard.c"
  8652 ;; Parameters:    Size  Location     Type
  8653 ;;		None
  8654 ;; Auto vars:     Size  Location     Type
  8655 ;;		None
  8656 ;; Return value:  Size  Location     Type
  8657 ;;                  1    wreg      void 
  8658 ;; Registers used:
  8659 ;;		wreg, status,2, status,0, cstack
  8660 ;; Tracked objects:
  8661 ;;		On entry : 0/0
  8662 ;;		On exit  : 0/0
  8663 ;;		Unchanged: 0/0
  8664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8665 ;;      Params:         0       0       0       0       0       0       0
  8666 ;;      Locals:         0       0       0       0       0       0       0
  8667 ;;      Temps:          0       0       0       0       0       0       0
  8668 ;;      Totals:         0       0       0       0       0       0       0
  8669 ;;Total ram usage:        0 bytes
  8670 ;; Hardware stack levels used: 1
  8671 ;; Hardware stack levels required when called: 6
  8672 ;; This function calls:
  8673 ;;		_read_ds1307
  8674 ;; This function is called by:
  8675 ;;		_dashboard
  8676 ;;		_main
  8677 ;; This function uses a non-reentrant model
  8678 ;;
  8679                           
  8680                           	psect	text39
  8681   00225E                     __ptext39:
  8682                           	callstack 0
  8683   00225E                     _get_time:
  8684                           	callstack 24
  8685   00225E                     
  8686                           ;dashboard.c: 26:  clock_reg[0] = read_ds1307(0x02);
  8687   00225E  0E02               	movlw	2
  8688   002260  EC54  F014         	call	_read_ds1307
  8689   002264  0100               	movlb	0	; () banked
  8690   002266  6F78               	movwf	_clock_reg& (0+255),b
  8691                           
  8692                           ;dashboard.c: 27:  clock_reg[1] = read_ds1307(0x01);
  8693   002268  0E01               	movlw	1
  8694   00226A  EC54  F014         	call	_read_ds1307
  8695   00226E  0100               	movlb	0	; () banked
  8696   002270  6F79               	movwf	(_clock_reg+1)& (0+255),b
  8697                           
  8698                           ;dashboard.c: 28:  clock_reg[2] = read_ds1307(0x00);
  8699   002272  0E00               	movlw	0
  8700   002274  EC54  F014         	call	_read_ds1307
  8701   002278  0100               	movlb	0	; () banked
  8702   00227A  6F7A               	movwf	(_clock_reg+2)& (0+255),b
  8703   00227C                     
  8704                           ; BSR set to: 0
  8705                           ;dashboard.c: 30:  if (clock_reg[0] & 0x40)
  8706   00227C  AD78               	btfss	_clock_reg& (0+255),6,b
  8707   00227E  EF43  F011         	goto	u4491
  8708   002282  EF45  F011         	goto	u4490
  8709   002286                     u4491:
  8710   002286  EF50  F011         	goto	l5697
  8711   00228A                     u4490:
  8712   00228A                     
  8713                           ; BSR set to: 0
  8714                           ;dashboard.c: 31:  {;dashboard.c: 32:   time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  8715   00228A  3978               	swapf	_clock_reg& (0+255),w,b
  8716   00228C  0B0F               	andlw	15
  8717   00228E  0B01               	andlw	1
  8718   002290  0F30               	addlw	48
  8719   002292  6FA6               	movwf	_time& (0+255),b
  8720                           
  8721                           ;dashboard.c: 33:   time[1] = '0' + (clock_reg[0] & 0x0F);
  8722   002294  5178               	movf	_clock_reg& (0+255),w,b
  8723   002296  0B0F               	andlw	15
  8724   002298  0F30               	addlw	48
  8725   00229A  6FA7               	movwf	(_time+1)& (0+255),b
  8726                           
  8727                           ;dashboard.c: 34:  }
  8728   00229C  EF59  F011         	goto	l5699
  8729   0022A0                     l5697:
  8730                           
  8731                           ; BSR set to: 0
  8732                           ;dashboard.c: 36:  {;dashboard.c: 37:   time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  8733   0022A0  3978               	swapf	_clock_reg& (0+255),w,b
  8734   0022A2  0B0F               	andlw	15
  8735   0022A4  0B03               	andlw	3
  8736   0022A6  0F30               	addlw	48
  8737   0022A8  6FA6               	movwf	_time& (0+255),b
  8738                           
  8739                           ;dashboard.c: 38:   time[1] = '0' + (clock_reg[0] & 0x0F);
  8740   0022AA  5178               	movf	_clock_reg& (0+255),w,b
  8741   0022AC  0B0F               	andlw	15
  8742   0022AE  0F30               	addlw	48
  8743   0022B0  6FA7               	movwf	(_time+1)& (0+255),b
  8744   0022B2                     l5699:
  8745                           
  8746                           ; BSR set to: 0
  8747                           ;dashboard.c: 40:  time[2] = ':';
  8748   0022B2  0E3A               	movlw	58
  8749   0022B4  6FA8               	movwf	(_time+2)& (0+255),b
  8750   0022B6                     
  8751                           ; BSR set to: 0
  8752                           ;dashboard.c: 41:  time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  8753   0022B6  3979               	swapf	(_clock_reg+1)& (0+255),w,b
  8754   0022B8  0B0F               	andlw	15
  8755   0022BA  0B0F               	andlw	15
  8756   0022BC  0F30               	addlw	48
  8757   0022BE  6FA9               	movwf	(_time+3)& (0+255),b
  8758   0022C0                     
  8759                           ; BSR set to: 0
  8760                           ;dashboard.c: 42:  time[4] = '0' + (clock_reg[1] & 0x0F);
  8761   0022C0  5179               	movf	(_clock_reg+1)& (0+255),w,b
  8762   0022C2  0B0F               	andlw	15
  8763   0022C4  0F30               	addlw	48
  8764   0022C6  6FAA               	movwf	(_time+4)& (0+255),b
  8765   0022C8                     
  8766                           ; BSR set to: 0
  8767                           ;dashboard.c: 43:  time[5] = ':';
  8768   0022C8  0E3A               	movlw	58
  8769   0022CA  6FAB               	movwf	(_time+5)& (0+255),b
  8770                           
  8771                           ;dashboard.c: 44:  time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  8772   0022CC  397A               	swapf	(_clock_reg+2)& (0+255),w,b
  8773   0022CE  0B0F               	andlw	15
  8774   0022D0  0B0F               	andlw	15
  8775   0022D2  0F30               	addlw	48
  8776   0022D4  6FAC               	movwf	(_time+6)& (0+255),b
  8777                           
  8778                           ;dashboard.c: 45:  time[7] = '0' + (clock_reg[2] & 0x0F);
  8779   0022D6  517A               	movf	(_clock_reg+2)& (0+255),w,b
  8780   0022D8  0B0F               	andlw	15
  8781   0022DA  0F30               	addlw	48
  8782   0022DC  6FAD               	movwf	(_time+7)& (0+255),b
  8783   0022DE                     
  8784                           ; BSR set to: 0
  8785                           ;dashboard.c: 46:  time[8] = '\0';
  8786   0022DE  0E00               	movlw	0
  8787   0022E0  6FAE               	movwf	(_time+8)& (0+255),b
  8788   0022E2                     
  8789                           ; BSR set to: 0
  8790   0022E2  0012               	return		;funcret
  8791   0022E4                     __end_of_get_time:
  8792                           	callstack 0
  8793                           
  8794 ;; *************** function _read_ds1307 *****************
  8795 ;; Defined at:
  8796 ;;		line 62 in file "ds1307.c"
  8797 ;; Parameters:    Size  Location     Type
  8798 ;;  address         1    wreg     unsigned char 
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;  address         1    6[COMRAM] unsigned char 
  8801 ;;  data            1    7[COMRAM] unsigned char 
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  1    wreg      unsigned char 
  8804 ;; Registers used:
  8805 ;;		wreg, status,2, cstack
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8811 ;;      Params:         0       0       0       0       0       0       0
  8812 ;;      Locals:         2       0       0       0       0       0       0
  8813 ;;      Temps:          0       0       0       0       0       0       0
  8814 ;;      Totals:         2       0       0       0       0       0       0
  8815 ;;Total ram usage:        2 bytes
  8816 ;; Hardware stack levels used: 1
  8817 ;; Hardware stack levels required when called: 5
  8818 ;; This function calls:
  8819 ;;		_i2c_read
  8820 ;;		_i2c_rep_start
  8821 ;;		_i2c_start
  8822 ;;		_i2c_stop
  8823 ;;		_i2c_write
  8824 ;; This function is called by:
  8825 ;;		_get_time
  8826 ;;		_settime
  8827 ;;		_init_ds1307
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831                           	psect	text40
  8832   0028A8                     __ptext40:
  8833                           	callstack 0
  8834   0028A8                     _read_ds1307:
  8835                           	callstack 24
  8836                           
  8837                           ; BSR set to: 0
  8838                           ;incstack = 0
  8839                           ;read_ds1307@address stored from wreg
  8840   0028A8  6E07               	movwf	read_ds1307@address^0,c
  8841   0028AA                     
  8842                           ;ds1307.c: 62: unsigned char read_ds1307(unsigned char address);ds1307.c: 63: {;ds1307.c
      +                          : 64:  unsigned char data;;ds1307.c: 66:  i2c_start();
  8843   0028AA  EC18  F015         	call	_i2c_start	;wreg free
  8844   0028AE                     
  8845                           ;ds1307.c: 67:  i2c_write(0xD0);
  8846   0028AE  0ED0               	movlw	208
  8847   0028B0  EC06  F015         	call	_i2c_write
  8848   0028B4                     
  8849                           ;ds1307.c: 68:  i2c_write(address);
  8850   0028B4  5007               	movf	read_ds1307@address^0,w,c
  8851   0028B6  EC06  F015         	call	_i2c_write
  8852   0028BA                     
  8853                           ;ds1307.c: 69:  i2c_rep_start();
  8854   0028BA  EC0C  F015         	call	_i2c_rep_start	;wreg free
  8855   0028BE                     
  8856                           ;ds1307.c: 70:  i2c_write(0xD1);
  8857   0028BE  0ED1               	movlw	209
  8858   0028C0  EC06  F015         	call	_i2c_write
  8859                           
  8860                           ;ds1307.c: 71:  data = i2c_read();
  8861   0028C4  EC00  F015         	call	_i2c_read	;wreg free
  8862   0028C8  6E08               	movwf	read_ds1307@data^0,c
  8863   0028CA                     
  8864                           ;ds1307.c: 72:  i2c_stop();
  8865   0028CA  EC14  F015         	call	_i2c_stop	;wreg free
  8866                           
  8867                           ;ds1307.c: 74:  return data;
  8868   0028CE  5008               	movf	read_ds1307@data^0,w,c
  8869   0028D0  0012               	return		;funcret
  8870   0028D2                     __end_of_read_ds1307:
  8871                           	callstack 0
  8872                           
  8873 ;; *************** function _i2c_rep_start *****************
  8874 ;; Defined at:
  8875 ;;		line 55 in file "i2c.c"
  8876 ;; Parameters:    Size  Location     Type
  8877 ;;		None
  8878 ;; Auto vars:     Size  Location     Type
  8879 ;;		None
  8880 ;; Return value:  Size  Location     Type
  8881 ;;                  1    wreg      void 
  8882 ;; Registers used:
  8883 ;;		cstack
  8884 ;; Tracked objects:
  8885 ;;		On entry : 0/0
  8886 ;;		On exit  : 0/0
  8887 ;;		Unchanged: 0/0
  8888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8889 ;;      Params:         0       0       0       0       0       0       0
  8890 ;;      Locals:         0       0       0       0       0       0       0
  8891 ;;      Temps:          0       0       0       0       0       0       0
  8892 ;;      Totals:         0       0       0       0       0       0       0
  8893 ;;Total ram usage:        0 bytes
  8894 ;; Hardware stack levels used: 1
  8895 ;; Hardware stack levels required when called: 3
  8896 ;; This function calls:
  8897 ;;		_i2c_idle
  8898 ;; This function is called by:
  8899 ;;		_read_ds1307
  8900 ;;		_read_external_eeprom
  8901 ;; This function uses a non-reentrant model
  8902 ;;
  8903                           
  8904                           	psect	text41
  8905   002A18                     __ptext41:
  8906                           	callstack 0
  8907   002A18                     _i2c_rep_start:
  8908                           	callstack 25
  8909   002A18                     
  8910                           ;i2c.c: 57:  RSEN = 1;
  8911   002A18  82C5               	bsf	4037,1,c	;volatile
  8912   002A1A                     
  8913                           ;i2c.c: 58:  i2c_idle();
  8914   002A1A  ECF0  F014         	call	_i2c_idle	;wreg free
  8915   002A1E  0012               	return		;funcret
  8916   002A20                     __end_of_i2c_rep_start:
  8917                           	callstack 0
  8918                           
  8919 ;; *************** function _i2c_read *****************
  8920 ;; Defined at:
  8921 ;;		line 79 in file "i2c.c"
  8922 ;; Parameters:    Size  Location     Type
  8923 ;;		None
  8924 ;; Auto vars:     Size  Location     Type
  8925 ;;		None
  8926 ;; Return value:  Size  Location     Type
  8927 ;;                  1    wreg      unsigned char 
  8928 ;; Registers used:
  8929 ;;		wreg, status,2, cstack
  8930 ;; Tracked objects:
  8931 ;;		On entry : 0/0
  8932 ;;		On exit  : 0/0
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8935 ;;      Params:         0       0       0       0       0       0       0
  8936 ;;      Locals:         0       0       0       0       0       0       0
  8937 ;;      Temps:          0       0       0       0       0       0       0
  8938 ;;      Totals:         0       0       0       0       0       0       0
  8939 ;;Total ram usage:        0 bytes
  8940 ;; Hardware stack levels used: 1
  8941 ;; Hardware stack levels required when called: 4
  8942 ;; This function calls:
  8943 ;;		_i2c_no_ack
  8944 ;;		_i2c_rx_mode
  8945 ;; This function is called by:
  8946 ;;		_read_ds1307
  8947 ;;		_read_external_eeprom
  8948 ;; This function uses a non-reentrant model
  8949 ;;
  8950                           
  8951                           	psect	text42
  8952   002A00                     __ptext42:
  8953                           	callstack 0
  8954   002A00                     _i2c_read:
  8955                           	callstack 24
  8956   002A00                     
  8957                           ;i2c.c: 81:  i2c_rx_mode();
  8958   002A00  EC10  F015         	call	_i2c_rx_mode	;wreg free
  8959                           
  8960                           ;i2c.c: 82:  i2c_no_ack();
  8961   002A04  EC1C  F015         	call	_i2c_no_ack	;wreg free
  8962   002A08                     
  8963                           ;i2c.c: 84:  return SSPBUF;
  8964   002A08  50C9               	movf	201,w,c	;volatile
  8965   002A0A  0012               	return		;funcret
  8966   002A0C                     __end_of_i2c_read:
  8967                           	callstack 0
  8968                           
  8969 ;; *************** function _i2c_rx_mode *****************
  8970 ;; Defined at:
  8971 ;;		line 67 in file "i2c.c"
  8972 ;; Parameters:    Size  Location     Type
  8973 ;;		None
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;		None
  8976 ;; Return value:  Size  Location     Type
  8977 ;;                  1    wreg      void 
  8978 ;; Registers used:
  8979 ;;		cstack
  8980 ;; Tracked objects:
  8981 ;;		On entry : 0/0
  8982 ;;		On exit  : 0/0
  8983 ;;		Unchanged: 0/0
  8984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8985 ;;      Params:         0       0       0       0       0       0       0
  8986 ;;      Locals:         0       0       0       0       0       0       0
  8987 ;;      Temps:          0       0       0       0       0       0       0
  8988 ;;      Totals:         0       0       0       0       0       0       0
  8989 ;;Total ram usage:        0 bytes
  8990 ;; Hardware stack levels used: 1
  8991 ;; Hardware stack levels required when called: 3
  8992 ;; This function calls:
  8993 ;;		_i2c_idle
  8994 ;; This function is called by:
  8995 ;;		_i2c_read
  8996 ;; This function uses a non-reentrant model
  8997 ;;
  8998                           
  8999                           	psect	text43
  9000   002A20                     __ptext43:
  9001                           	callstack 0
  9002   002A20                     _i2c_rx_mode:
  9003                           	callstack 24
  9004   002A20                     
  9005                           ;i2c.c: 69:  RCEN = 1;
  9006   002A20  86C5               	bsf	4037,3,c	;volatile
  9007   002A22                     
  9008                           ;i2c.c: 70:  i2c_idle();
  9009   002A22  ECF0  F014         	call	_i2c_idle	;wreg free
  9010   002A26  0012               	return		;funcret
  9011   002A28                     __end_of_i2c_rx_mode:
  9012                           	callstack 0
  9013                           
  9014 ;; *************** function _i2c_no_ack *****************
  9015 ;; Defined at:
  9016 ;;		line 73 in file "i2c.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;		None
  9019 ;; Auto vars:     Size  Location     Type
  9020 ;;		None
  9021 ;; Return value:  Size  Location     Type
  9022 ;;                  1    wreg      void 
  9023 ;; Registers used:
  9024 ;;		None
  9025 ;; Tracked objects:
  9026 ;;		On entry : 0/0
  9027 ;;		On exit  : 0/0
  9028 ;;		Unchanged: 0/0
  9029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9030 ;;      Params:         0       0       0       0       0       0       0
  9031 ;;      Locals:         0       0       0       0       0       0       0
  9032 ;;      Temps:          0       0       0       0       0       0       0
  9033 ;;      Totals:         0       0       0       0       0       0       0
  9034 ;;Total ram usage:        0 bytes
  9035 ;; Hardware stack levels used: 1
  9036 ;; Hardware stack levels required when called: 2
  9037 ;; This function calls:
  9038 ;;		Nothing
  9039 ;; This function is called by:
  9040 ;;		_i2c_read
  9041 ;; This function uses a non-reentrant model
  9042 ;;
  9043                           
  9044                           	psect	text44
  9045   002A38                     __ptext44:
  9046                           	callstack 0
  9047   002A38                     _i2c_no_ack:
  9048                           	callstack 25
  9049   002A38                     
  9050                           ;i2c.c: 75:  ACKDT = 1;
  9051   002A38  8AC5               	bsf	4037,5,c	;volatile
  9052                           
  9053                           ;i2c.c: 76:  ACKEN = 1;
  9054   002A3A  88C5               	bsf	4037,4,c	;volatile
  9055   002A3C  0012               	return		;funcret
  9056   002A3E                     __end_of_i2c_no_ack:
  9057                           	callstack 0
  9058                           
  9059 ;; *************** function _clear_log *****************
  9060 ;; Defined at:
  9061 ;;		line 17 in file "clear_log.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;  key             1    wreg     unsigned char 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;  key             1    0[COMRAM] unsigned char 
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  1    wreg      void 
  9068 ;; Registers used:
  9069 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9075 ;;      Params:         0       0       0       0       0       0       0
  9076 ;;      Locals:         0       0       0       0       0       0       0
  9077 ;;      Temps:          0       0       0       0       0       0       0
  9078 ;;      Totals:         0       0       0       0       0       0       0
  9079 ;;Total ram usage:        0 bytes
  9080 ;; Hardware stack levels used: 1
  9081 ;; Hardware stack levels required when called: 4
  9082 ;; This function calls:
  9083 ;;		_clcd_print
  9084 ;; This function is called by:
  9085 ;;		_main
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           	psect	text45
  9090   0023CA                     __ptext45:
  9091                           	callstack 0
  9092   0023CA                     _clear_log:
  9093                           	callstack 26
  9094   0023CA                     
  9095                           ;clear_log.c: 17: void clear_log(char key);clear_log.c: 18: {;clear_log.c: 21:     s=0;
  9096   0023CA  0E00               	movlw	0
  9097   0023CC  6E58               	movwf	_s^0,c
  9098   0023CE                     
  9099                           ;clear_log.c: 22:     e = -1;
  9100   0023CE  0100               	movlb	0	; () banked
  9101   0023D0  698D               	setf	_e& (0+255),b
  9102   0023D2                     
  9103                           ; BSR set to: 0
  9104                           ;clear_log.c: 23:     p = s;
  9105   0023D2  C058  F08F         	movff	_s,_p
  9106                           
  9107                           ;clear_log.c: 24:     full_f = 0;
  9108   0023D6  0E00               	movlw	0
  9109   0023D8  6F8E               	movwf	_full_f& (0+255),b
  9110   0023DA                     
  9111                           ; BSR set to: 0
  9112                           ;clear_log.c: 25:     clcd_print("  LOG CLEARED      ", (0x80 + (0)));
  9113   0023DA  0EE0               	movlw	low STR_35
  9114   0023DC  6E08               	movwf	clcd_print@data^0,c
  9115   0023DE  0E2D               	movlw	high STR_35
  9116   0023E0  6E09               	movwf	(clcd_print@data+1)^0,c
  9117   0023E2  0E80               	movlw	128
  9118   0023E4  6E0A               	movwf	clcd_print@addr^0,c
  9119   0023E6  EC1C  F012         	call	_clcd_print	;wreg free
  9120   0023EA                     
  9121                           ;clear_log.c: 26:     clcd_print("  -----------      ", (0xC0 + (0)));
  9122   0023EA  0ECC               	movlw	low STR_36
  9123   0023EC  6E08               	movwf	clcd_print@data^0,c
  9124   0023EE  0E2D               	movlw	high STR_36
  9125   0023F0  6E09               	movwf	(clcd_print@data+1)^0,c
  9126   0023F2  0EC0               	movlw	192
  9127   0023F4  6E0A               	movwf	clcd_print@addr^0,c
  9128   0023F6  EC1C  F012         	call	_clcd_print	;wreg free
  9129   0023FA                     
  9130                           ;clear_log.c: 28:     TMR0ON = 0;
  9131   0023FA  9ED5               	bcf	4053,7,c	;volatile
  9132   0023FC                     
  9133                           ;clear_log.c: 29:     sec_delay = 20000;
  9134   0023FC  0E20               	movlw	32
  9135   0023FE  0100               	movlb	0	; () banked
  9136   002400  6F70               	movwf	_sec_delay& (0+255),b
  9137   002402  0E4E               	movlw	78
  9138   002404  6F71               	movwf	(_sec_delay+1)& (0+255),b
  9139   002406  0E00               	movlw	0
  9140   002408  6F72               	movwf	(_sec_delay+2)& (0+255),b
  9141   00240A  0E00               	movlw	0
  9142   00240C  6F73               	movwf	(_sec_delay+3)& (0+255),b
  9143   00240E                     
  9144                           ; BSR set to: 0
  9145                           ;clear_log.c: 30:     TMR0 = 6;
  9146   00240E  0E00               	movlw	0
  9147   002410  6ED7               	movwf	215,c	;volatile
  9148   002412  0E06               	movlw	6
  9149   002414  6ED6               	movwf	214,c	;volatile
  9150   002416                     
  9151                           ; BSR set to: 0
  9152                           ;clear_log.c: 31:     TMR0ON = 1;
  9153   002416  8ED5               	bsf	4053,7,c	;volatile
  9154   002418                     l4573:
  9155                           
  9156                           ; BSR set to: 0
  9157   002418  5170               	movf	_sec_delay& (0+255),w,b
  9158   00241A  1171               	iorwf	(_sec_delay+1)& (0+255),w,b
  9159   00241C  1172               	iorwf	(_sec_delay+2)& (0+255),w,b
  9160   00241E  1173               	iorwf	(_sec_delay+3)& (0+255),w,b
  9161   002420  A4D8               	btfss	status,2,c
  9162   002422  EF15  F012         	goto	u3031
  9163   002426  EF17  F012         	goto	u3030
  9164   00242A                     u3031:
  9165   00242A  EF0C  F012         	goto	l4573
  9166   00242E                     u3030:
  9167   00242E                     
  9168                           ; BSR set to: 0
  9169                           ;clear_log.c: 34:     main_f = 2;
  9170   00242E  0E02               	movlw	2
  9171   002430  6F8B               	movwf	_main_f& (0+255),b
  9172                           
  9173                           ;clear_log.c: 35:     back_f = 1;
  9174   002432  0E01               	movlw	1
  9175   002434  6F8C               	movwf	_back_f& (0+255),b
  9176   002436                     
  9177                           ; BSR set to: 0
  9178   002436  0012               	return		;funcret
  9179   002438                     __end_of_clear_log:
  9180                           	callstack 0
  9181                           
  9182 ;; *************** function _change_pass *****************
  9183 ;; Defined at:
  9184 ;;		line 86 in file "change_password.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;  key             1    wreg     unsigned char 
  9187 ;; Auto vars:     Size  Location     Type
  9188 ;;  key             1   11[COMRAM] unsigned char 
  9189 ;; Return value:  Size  Location     Type
  9190 ;;                  1    wreg      void 
  9191 ;; Registers used:
  9192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9193 ;; Tracked objects:
  9194 ;;		On entry : 0/0
  9195 ;;		On exit  : 0/0
  9196 ;;		Unchanged: 0/0
  9197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9198 ;;      Params:         0       0       0       0       0       0       0
  9199 ;;      Locals:         1       0       0       0       0       0       0
  9200 ;;      Temps:          0       0       0       0       0       0       0
  9201 ;;      Totals:         1       0       0       0       0       0       0
  9202 ;;Total ram usage:        1 bytes
  9203 ;; Hardware stack levels used: 1
  9204 ;; Hardware stack levels required when called: 5
  9205 ;; This function calls:
  9206 ;;		_addtoarray
  9207 ;;		_addtoarray2
  9208 ;;		_check_newpassword
  9209 ;;		_check_password
  9210 ;;		_clcd_print
  9211 ;;		_write_external_eeprom
  9212 ;; This function is called by:
  9213 ;;		_main
  9214 ;; This function uses a non-reentrant model
  9215 ;;
  9216                           
  9217                           	psect	text46
  9218   00040A                     __ptext46:
  9219                           	callstack 0
  9220   00040A                     _change_pass:
  9221                           	callstack 25
  9222                           
  9223                           ; BSR set to: 0
  9224                           ;incstack = 0
  9225                           ;change_pass@key stored from wreg
  9226   00040A  6E0C               	movwf	change_pass@key^0,c
  9227   00040C                     
  9228                           ;change_password.c: 86: void change_pass(char key);change_password.c: 87: {;change_passw
      +                          ord.c: 89:     if(key == 22)
  9229   00040C  0E16               	movlw	22
  9230   00040E  180C               	xorwf	change_pass@key^0,w,c
  9231   000410  A4D8               	btfss	status,2,c
  9232   000412  EF0D  F002         	goto	u4551
  9233   000416  EF0F  F002         	goto	u4550
  9234   00041A                     u4551:
  9235   00041A  EF18  F002         	goto	l5781
  9236   00041E                     u4550:
  9237   00041E                     l5777:
  9238                           
  9239                           ;change_password.c: 90:     {;change_password.c: 91:         main_f = 2;
  9240   00041E  0E02               	movlw	2
  9241   000420  0100               	movlb	0	; () banked
  9242   000422  6F8B               	movwf	_main_f& (0+255),b
  9243                           
  9244                           ;change_password.c: 92:         back_f = 1;
  9245   000424  0E01               	movlw	1
  9246   000426  6F8C               	movwf	_back_f& (0+255),b
  9247                           
  9248                           ;change_password.c: 93:         screen = 0;
  9249   000428  0E00               	movlw	0
  9250   00042A  6F89               	movwf	_screen& (0+255),b
  9251   00042C  EF6F  F003         	goto	l76
  9252   000430                     l5781:
  9253                           
  9254                           ;change_password.c: 97:     if(screen == 0)
  9255   000430  0100               	movlb	0	; () banked
  9256   000432  5189               	movf	_screen& (0+255),w,b
  9257   000434  A4D8               	btfss	status,2,c
  9258   000436  EF1F  F002         	goto	u4561
  9259   00043A  EF21  F002         	goto	u4560
  9260   00043E                     u4561:
  9261   00043E  EF77  F002         	goto	l5807
  9262   000442                     u4560:
  9263   000442                     
  9264                           ; BSR set to: 0
  9265                           ;change_password.c: 98:     {;change_password.c: 99:         clcd_print("ENTER OLD PSWD 
      +                           ", (0x80 + (0)));
  9266   000442  0E3D               	movlw	low STR_11
  9267   000444  6E08               	movwf	clcd_print@data^0,c
  9268   000446  0E2F               	movlw	high STR_11
  9269   000448  6E09               	movwf	(clcd_print@data+1)^0,c
  9270   00044A  0E80               	movlw	128
  9271   00044C  6E0A               	movwf	clcd_print@addr^0,c
  9272   00044E  EC1C  F012         	call	_clcd_print	;wreg free
  9273   000452                     
  9274                           ;change_password.c: 102:         if(flag)
  9275   000452  5059               	movf	_flag^0,w,c
  9276   000454  B4D8               	btfsc	status,2,c
  9277   000456  EF2F  F002         	goto	u4571
  9278   00045A  EF31  F002         	goto	u4570
  9279   00045E                     u4571:
  9280   00045E  EF3C  F002         	goto	l5789
  9281   000462                     u4570:
  9282   000462                     
  9283                           ;change_password.c: 103:         {;change_password.c: 104:             clcd_print("_", (
      +                          0xC0 + (ind)));
  9284   000462  0EFD               	movlw	low STR_12
  9285   000464  6E08               	movwf	clcd_print@data^0,c
  9286   000466  0E2F               	movlw	high STR_12
  9287   000468  6E09               	movwf	(clcd_print@data+1)^0,c
  9288   00046A  5057               	movf	_ind^0,w,c
  9289   00046C  0FC0               	addlw	192
  9290   00046E  6E0A               	movwf	clcd_print@addr^0,c
  9291   000470  EC1C  F012         	call	_clcd_print	;wreg free
  9292                           
  9293                           ;change_password.c: 105:         }
  9294   000474  EF45  F002         	goto	l5791
  9295   000478                     l5789:
  9296                           
  9297                           ;change_password.c: 107:         {;change_password.c: 108:             clcd_print(" ", (
      +                          0xC0 + (ind)));
  9298   000478  0E16               	movlw	low (STR_15+16)
  9299   00047A  6E08               	movwf	clcd_print@data^0,c
  9300   00047C  0E2E               	movlw	high (STR_15+16)
  9301   00047E  6E09               	movwf	(clcd_print@data+1)^0,c
  9302   000480  5057               	movf	_ind^0,w,c
  9303   000482  0FC0               	addlw	192
  9304   000484  6E0A               	movwf	clcd_print@addr^0,c
  9305   000486  EC1C  F012         	call	_clcd_print	;wreg free
  9306   00048A                     l5791:
  9307                           
  9308                           ;change_password.c: 111:         addtoarray(key);
  9309   00048A  500C               	movf	change_pass@key^0,w,c
  9310   00048C  ECB3  F012         	call	_addtoarray
  9311   000490                     
  9312                           ;change_password.c: 113:         if(ind == 4)
  9313   000490  0E04               	movlw	4
  9314   000492  1857               	xorwf	_ind^0,w,c
  9315   000494  A4D8               	btfss	status,2,c
  9316   000496  EF4F  F002         	goto	u4581
  9317   00049A  EF51  F002         	goto	u4580
  9318   00049E                     u4581:
  9319   00049E  EF6F  F003         	goto	l76
  9320   0004A2                     u4580:
  9321   0004A2                     
  9322                           ;change_password.c: 114:         {;change_password.c: 116:             if(check_password
      +                          ())
  9323   0004A2  ECDC  F012         	call	_check_password	;wreg free
  9324   0004A6  0900               	iorlw	0
  9325   0004A8  B4D8               	btfsc	status,2,c
  9326   0004AA  EF59  F002         	goto	u4591
  9327   0004AE  EF5B  F002         	goto	u4590
  9328   0004B2                     u4591:
  9329   0004B2  EF72  F002         	goto	l5803
  9330   0004B6                     u4590:
  9331   0004B6                     
  9332                           ;change_password.c: 117:             {;change_password.c: 119:                 clcd_prin
      +                          t("ENTER NEW PSWD   ", (0x80 + (0)));
  9333   0004B6  0E3C               	movlw	low STR_14
  9334   0004B8  6E08               	movwf	clcd_print@data^0,c
  9335   0004BA  0E2E               	movlw	high STR_14
  9336   0004BC  6E09               	movwf	(clcd_print@data+1)^0,c
  9337   0004BE  0E80               	movlw	128
  9338   0004C0  6E0A               	movwf	clcd_print@addr^0,c
  9339   0004C2  EC1C  F012         	call	_clcd_print	;wreg free
  9340                           
  9341                           ;change_password.c: 120:                 clcd_print("                 ", (0xC0 + (0)));
  9342   0004C6  0E06               	movlw	low STR_15
  9343   0004C8  6E08               	movwf	clcd_print@data^0,c
  9344   0004CA  0E2E               	movlw	high STR_15
  9345   0004CC  6E09               	movwf	(clcd_print@data+1)^0,c
  9346   0004CE  0EC0               	movlw	192
  9347   0004D0  6E0A               	movwf	clcd_print@addr^0,c
  9348   0004D2  EC1C  F012         	call	_clcd_print	;wreg free
  9349   0004D6                     
  9350                           ;change_password.c: 121:                 screen = 1;
  9351   0004D6  0E01               	movlw	1
  9352   0004D8  0100               	movlb	0	; () banked
  9353   0004DA  6F89               	movwf	_screen& (0+255),b
  9354   0004DC                     l5801:
  9355                           
  9356                           ; BSR set to: 0
  9357                           ;change_password.c: 122:                 ind = 0;
  9358   0004DC  0E00               	movlw	0
  9359   0004DE  6E57               	movwf	_ind^0,c
  9360                           
  9361                           ;change_password.c: 123:             }
  9362   0004E0  EF6F  F003         	goto	l76
  9363   0004E4                     l5803:
  9364                           
  9365                           ;change_password.c: 125:             {;change_password.c: 126:                 main_f = 
      +                          0;
  9366   0004E4  0E00               	movlw	0
  9367   0004E6  0100               	movlb	0	; () banked
  9368   0004E8  6F8B               	movwf	_main_f& (0+255),b
  9369   0004EA  EF6F  F003         	goto	l76
  9370   0004EE                     l5807:
  9371                           
  9372                           ; BSR set to: 0
  9373   0004EE  0589               	decf	_screen& (0+255),w,b
  9374   0004F0  A4D8               	btfss	status,2,c
  9375   0004F2  EF7D  F002         	goto	u4601
  9376   0004F6  EF7F  F002         	goto	u4600
  9377   0004FA                     u4601:
  9378   0004FA  EFBC  F002         	goto	l5825
  9379   0004FE                     u4600:
  9380   0004FE                     
  9381                           ; BSR set to: 0
  9382                           ;change_password.c: 133:     {;change_password.c: 135:         if(flag)
  9383   0004FE  5059               	movf	_flag^0,w,c
  9384   000500  B4D8               	btfsc	status,2,c
  9385   000502  EF85  F002         	goto	u4611
  9386   000506  EF87  F002         	goto	u4610
  9387   00050A                     u4611:
  9388   00050A  EF92  F002         	goto	l5813
  9389   00050E                     u4610:
  9390   00050E                     
  9391                           ; BSR set to: 0
  9392                           ;change_password.c: 136:         {;change_password.c: 137:             clcd_print("_", (
      +                          0xC0 + (ind)));
  9393   00050E  0EFD               	movlw	low STR_12
  9394   000510  6E08               	movwf	clcd_print@data^0,c
  9395   000512  0E2F               	movlw	high STR_12
  9396   000514  6E09               	movwf	(clcd_print@data+1)^0,c
  9397   000516  5057               	movf	_ind^0,w,c
  9398   000518  0FC0               	addlw	192
  9399   00051A  6E0A               	movwf	clcd_print@addr^0,c
  9400   00051C  EC1C  F012         	call	_clcd_print	;wreg free
  9401                           
  9402                           ;change_password.c: 138:         }
  9403   000520  EF9B  F002         	goto	l5815
  9404   000524                     l5813:
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;change_password.c: 140:         {;change_password.c: 141:             clcd_print(" ", (
      +                          0xC0 + (ind)));
  9408   000524  0E16               	movlw	low (STR_15+16)
  9409   000526  6E08               	movwf	clcd_print@data^0,c
  9410   000528  0E2E               	movlw	high (STR_15+16)
  9411   00052A  6E09               	movwf	(clcd_print@data+1)^0,c
  9412   00052C  5057               	movf	_ind^0,w,c
  9413   00052E  0FC0               	addlw	192
  9414   000530  6E0A               	movwf	clcd_print@addr^0,c
  9415   000532  EC1C  F012         	call	_clcd_print	;wreg free
  9416   000536                     l5815:
  9417                           
  9418                           ;change_password.c: 144:         addtoarray2(key);
  9419   000536  500C               	movf	change_pass@key^0,w,c
  9420   000538  EC25  F014         	call	_addtoarray2
  9421   00053C                     
  9422                           ;change_password.c: 146:         if(ind == 4)
  9423   00053C  0E04               	movlw	4
  9424   00053E  1857               	xorwf	_ind^0,w,c
  9425   000540  A4D8               	btfss	status,2,c
  9426   000542  EFA5  F002         	goto	u4621
  9427   000546  EFA7  F002         	goto	u4620
  9428   00054A                     u4621:
  9429   00054A  EF6F  F003         	goto	l76
  9430   00054E                     u4620:
  9431   00054E                     
  9432                           ;change_password.c: 147:         {;change_password.c: 148:             clcd_print("REENT
      +                          ER NEW PSWD ", (0x80 + (0)));
  9433   00054E  0E4E               	movlw	low STR_18
  9434   000550  6E08               	movwf	clcd_print@data^0,c
  9435   000552  0E2E               	movlw	high STR_18
  9436   000554  6E09               	movwf	(clcd_print@data+1)^0,c
  9437   000556  0E80               	movlw	128
  9438   000558  6E0A               	movwf	clcd_print@addr^0,c
  9439   00055A  EC1C  F012         	call	_clcd_print	;wreg free
  9440                           
  9441                           ;change_password.c: 149:             clcd_print("                 ", (0xC0 + (0)));
  9442   00055E  0E06               	movlw	low STR_15
  9443   000560  6E08               	movwf	clcd_print@data^0,c
  9444   000562  0E2E               	movlw	high STR_15
  9445   000564  6E09               	movwf	(clcd_print@data+1)^0,c
  9446   000566  0EC0               	movlw	192
  9447   000568  6E0A               	movwf	clcd_print@addr^0,c
  9448   00056A  EC1C  F012         	call	_clcd_print	;wreg free
  9449   00056E                     
  9450                           ;change_password.c: 150:             screen = 2;
  9451   00056E  0E02               	movlw	2
  9452   000570  0100               	movlb	0	; () banked
  9453   000572  6F89               	movwf	_screen& (0+255),b
  9454   000574  EF6E  F002         	goto	l5801
  9455   000578                     l5825:
  9456                           
  9457                           ; BSR set to: 0
  9458   000578  0E02               	movlw	2
  9459   00057A  1989               	xorwf	_screen& (0+255),w,b
  9460   00057C  A4D8               	btfss	status,2,c
  9461   00057E  EFC3  F002         	goto	u4631
  9462   000582  EFC5  F002         	goto	u4630
  9463   000586                     u4631:
  9464   000586  EF6F  F003         	goto	l76
  9465   00058A                     u4630:
  9466   00058A                     
  9467                           ; BSR set to: 0
  9468                           ;change_password.c: 155:     {;change_password.c: 157:         if(flag)
  9469   00058A  5059               	movf	_flag^0,w,c
  9470   00058C  B4D8               	btfsc	status,2,c
  9471   00058E  EFCB  F002         	goto	u4641
  9472   000592  EFCD  F002         	goto	u4640
  9473   000596                     u4641:
  9474   000596  EFD8  F002         	goto	l5831
  9475   00059A                     u4640:
  9476   00059A                     
  9477                           ; BSR set to: 0
  9478                           ;change_password.c: 158:         {;change_password.c: 159:             clcd_print("_", (
      +                          0xC0 + (ind)));
  9479   00059A  0EFD               	movlw	low STR_12
  9480   00059C  6E08               	movwf	clcd_print@data^0,c
  9481   00059E  0E2F               	movlw	high STR_12
  9482   0005A0  6E09               	movwf	(clcd_print@data+1)^0,c
  9483   0005A2  5057               	movf	_ind^0,w,c
  9484   0005A4  0FC0               	addlw	192
  9485   0005A6  6E0A               	movwf	clcd_print@addr^0,c
  9486   0005A8  EC1C  F012         	call	_clcd_print	;wreg free
  9487                           
  9488                           ;change_password.c: 160:         }
  9489   0005AC  EFE1  F002         	goto	l5833
  9490   0005B0                     l5831:
  9491                           
  9492                           ; BSR set to: 0
  9493                           ;change_password.c: 162:         {;change_password.c: 163:             clcd_print(" ", (
      +                          0xC0 + (ind)));
  9494   0005B0  0E16               	movlw	low (STR_15+16)
  9495   0005B2  6E08               	movwf	clcd_print@data^0,c
  9496   0005B4  0E2E               	movlw	high (STR_15+16)
  9497   0005B6  6E09               	movwf	(clcd_print@data+1)^0,c
  9498   0005B8  5057               	movf	_ind^0,w,c
  9499   0005BA  0FC0               	addlw	192
  9500   0005BC  6E0A               	movwf	clcd_print@addr^0,c
  9501   0005BE  EC1C  F012         	call	_clcd_print	;wreg free
  9502   0005C2                     l5833:
  9503                           
  9504                           ;change_password.c: 166:         addtoarray(key);
  9505   0005C2  500C               	movf	change_pass@key^0,w,c
  9506   0005C4  ECB3  F012         	call	_addtoarray
  9507   0005C8                     
  9508                           ;change_password.c: 168:         if(ind == 4)
  9509   0005C8  0E04               	movlw	4
  9510   0005CA  1857               	xorwf	_ind^0,w,c
  9511   0005CC  A4D8               	btfss	status,2,c
  9512   0005CE  EFEB  F002         	goto	u4651
  9513   0005D2  EFED  F002         	goto	u4650
  9514   0005D6                     u4651:
  9515   0005D6  EF6F  F003         	goto	l76
  9516   0005DA                     u4650:
  9517   0005DA                     
  9518                           ;change_password.c: 169:         {;change_password.c: 171:             if(check_newpassw
      +                          ord())
  9519   0005DA  EC03  F013         	call	_check_newpassword	;wreg free
  9520   0005DE  0900               	iorlw	0
  9521   0005E0  B4D8               	btfsc	status,2,c
  9522   0005E2  EFF5  F002         	goto	u4661
  9523   0005E6  EFF7  F002         	goto	u4660
  9524   0005EA                     u4661:
  9525   0005EA  EF43  F003         	goto	l5865
  9526   0005EE                     u4660:
  9527   0005EE                     
  9528                           ;change_password.c: 172:             {;change_password.c: 174:                 write_ext
      +                          ernal_eeprom(100, newpw[0]);
  9529   0005EE  C060  F007         	movff	_newpw,write_external_eeprom@data
  9530   0005F2  0E64               	movlw	100
  9531   0005F4  ECB1  F013         	call	_write_external_eeprom
  9532                           
  9533                           ;change_password.c: 175:                 write_external_eeprom(101, newpw[1]);
  9534   0005F8  C061  F007         	movff	_newpw+1,write_external_eeprom@data
  9535   0005FC  0E65               	movlw	101
  9536   0005FE  ECB1  F013         	call	_write_external_eeprom
  9537                           
  9538                           ;change_password.c: 176:                 write_external_eeprom(102, newpw[2]);
  9539   000602  C062  F007         	movff	_newpw+2,write_external_eeprom@data
  9540   000606  0E66               	movlw	102
  9541   000608  ECB1  F013         	call	_write_external_eeprom
  9542                           
  9543                           ;change_password.c: 177:                 write_external_eeprom(103, newpw[3]);
  9544   00060C  C063  F007         	movff	_newpw+3,write_external_eeprom@data
  9545   000610  0E67               	movlw	103
  9546   000612  ECB1  F013         	call	_write_external_eeprom
  9547   000616                     
  9548                           ;change_password.c: 179:                 pw[0] = newpw[0];
  9549   000616  C060  F068         	movff	_newpw,_pw
  9550   00061A                     
  9551                           ;change_password.c: 180:                 pw[1] = newpw[1];
  9552   00061A  C061  F069         	movff	_newpw+1,_pw+1
  9553   00061E                     
  9554                           ;change_password.c: 181:                 pw[2] = newpw[2];
  9555   00061E  C062  F06A         	movff	_newpw+2,_pw+2
  9556   000622                     
  9557                           ;change_password.c: 182:                 pw[3] = newpw[3];
  9558   000622  C063  F06B         	movff	_newpw+3,_pw+3
  9559   000626                     
  9560                           ;change_password.c: 184:                 clcd_print("SUCCESS..        ", (0x80 + (0)));
  9561   000626  0E18               	movlw	low STR_22
  9562   000628  6E08               	movwf	clcd_print@data^0,c
  9563   00062A  0E2E               	movlw	high STR_22
  9564   00062C  6E09               	movwf	(clcd_print@data+1)^0,c
  9565   00062E  0E80               	movlw	128
  9566   000630  6E0A               	movwf	clcd_print@addr^0,c
  9567   000632  EC1C  F012         	call	_clcd_print	;wreg free
  9568   000636                     
  9569                           ;change_password.c: 185:                 clcd_print("PSWD SAVED.      ", (0xC0 + (0)));
  9570   000636  0E2A               	movlw	low STR_23
  9571   000638  6E08               	movwf	clcd_print@data^0,c
  9572   00063A  0E2E               	movlw	high STR_23
  9573   00063C  6E09               	movwf	(clcd_print@data+1)^0,c
  9574   00063E  0EC0               	movlw	192
  9575   000640  6E0A               	movwf	clcd_print@addr^0,c
  9576   000642  EC1C  F012         	call	_clcd_print	;wreg free
  9577   000646                     
  9578                           ;change_password.c: 187:                 TMR0ON = 0;
  9579   000646  9ED5               	bcf	4053,7,c	;volatile
  9580   000648                     
  9581                           ;change_password.c: 188:                 sec_delay = 20000;
  9582   000648  0E20               	movlw	32
  9583   00064A  0100               	movlb	0	; () banked
  9584   00064C  6F70               	movwf	_sec_delay& (0+255),b
  9585   00064E  0E4E               	movlw	78
  9586   000650  6F71               	movwf	(_sec_delay+1)& (0+255),b
  9587   000652  0E00               	movlw	0
  9588   000654  6F72               	movwf	(_sec_delay+2)& (0+255),b
  9589   000656  0E00               	movlw	0
  9590   000658  6F73               	movwf	(_sec_delay+3)& (0+255),b
  9591   00065A                     
  9592                           ; BSR set to: 0
  9593                           ;change_password.c: 189:                 TMR0 = 6;
  9594   00065A  0E00               	movlw	0
  9595   00065C  6ED7               	movwf	215,c	;volatile
  9596   00065E  0E06               	movlw	6
  9597   000660  6ED6               	movwf	214,c	;volatile
  9598   000662                     
  9599                           ; BSR set to: 0
  9600                           ;change_password.c: 190:                 TMR0ON = 1;
  9601   000662  8ED5               	bsf	4053,7,c	;volatile
  9602   000664                     l5861:
  9603                           
  9604                           ; BSR set to: 0
  9605   000664  5170               	movf	_sec_delay& (0+255),w,b
  9606   000666  1171               	iorwf	(_sec_delay+1)& (0+255),w,b
  9607   000668  1172               	iorwf	(_sec_delay+2)& (0+255),w,b
  9608   00066A  1173               	iorwf	(_sec_delay+3)& (0+255),w,b
  9609   00066C  A4D8               	btfss	status,2,c
  9610   00066E  EF3B  F003         	goto	u4671
  9611   000672  EF3D  F003         	goto	u4670
  9612   000676                     u4671:
  9613   000676  EF32  F003         	goto	l5861
  9614   00067A                     u4670:
  9615   00067A                     
  9616                           ; BSR set to: 0
  9617                           ;change_password.c: 193:                 main_f = 2;
  9618   00067A  0E02               	movlw	2
  9619   00067C  6F8B               	movwf	_main_f& (0+255),b
  9620                           
  9621                           ;change_password.c: 194:                 back_f = 1;
  9622   00067E  0E01               	movlw	1
  9623   000680  6F8C               	movwf	_back_f& (0+255),b
  9624                           
  9625                           ;change_password.c: 195:             }
  9626   000682  EF6F  F003         	goto	l76
  9627   000686                     l5865:
  9628                           
  9629                           ;change_password.c: 197:             {;change_password.c: 198:                 clcd_prin
      +                          t("FAILED!!        ", (0x80 + (0)));
  9630   000686  0E1B               	movlw	low STR_24
  9631   000688  6E08               	movwf	clcd_print@data^0,c
  9632   00068A  0E2F               	movlw	high STR_24
  9633   00068C  6E09               	movwf	(clcd_print@data+1)^0,c
  9634   00068E  0E80               	movlw	128
  9635   000690  6E0A               	movwf	clcd_print@addr^0,c
  9636   000692  EC1C  F012         	call	_clcd_print	;wreg free
  9637                           
  9638                           ;change_password.c: 199:                 clcd_print("NOT MATCHING..  ", (0xC0 + (0)));
  9639   000696  0E2C               	movlw	low STR_25
  9640   000698  6E08               	movwf	clcd_print@data^0,c
  9641   00069A  0E2F               	movlw	high STR_25
  9642   00069C  6E09               	movwf	(clcd_print@data+1)^0,c
  9643   00069E  0EC0               	movlw	192
  9644   0006A0  6E0A               	movwf	clcd_print@addr^0,c
  9645   0006A2  EC1C  F012         	call	_clcd_print	;wreg free
  9646   0006A6                     
  9647                           ;change_password.c: 202:                 TMR0ON = 0;
  9648   0006A6  9ED5               	bcf	4053,7,c	;volatile
  9649   0006A8                     
  9650                           ;change_password.c: 203:                 sec_delay = 20000;
  9651   0006A8  0E20               	movlw	32
  9652   0006AA  0100               	movlb	0	; () banked
  9653   0006AC  6F70               	movwf	_sec_delay& (0+255),b
  9654   0006AE  0E4E               	movlw	78
  9655   0006B0  6F71               	movwf	(_sec_delay+1)& (0+255),b
  9656   0006B2  0E00               	movlw	0
  9657   0006B4  6F72               	movwf	(_sec_delay+2)& (0+255),b
  9658   0006B6  0E00               	movlw	0
  9659   0006B8  6F73               	movwf	(_sec_delay+3)& (0+255),b
  9660   0006BA                     
  9661                           ; BSR set to: 0
  9662                           ;change_password.c: 204:                 TMR0 = 6;
  9663   0006BA  0E00               	movlw	0
  9664   0006BC  6ED7               	movwf	215,c	;volatile
  9665   0006BE  0E06               	movlw	6
  9666   0006C0  6ED6               	movwf	214,c	;volatile
  9667   0006C2                     
  9668                           ; BSR set to: 0
  9669                           ;change_password.c: 205:                 TMR0ON = 1;
  9670   0006C2  8ED5               	bsf	4053,7,c	;volatile
  9671   0006C4                     l5875:
  9672                           
  9673                           ; BSR set to: 0
  9674   0006C4  5170               	movf	_sec_delay& (0+255),w,b
  9675   0006C6  1171               	iorwf	(_sec_delay+1)& (0+255),w,b
  9676   0006C8  1172               	iorwf	(_sec_delay+2)& (0+255),w,b
  9677   0006CA  1173               	iorwf	(_sec_delay+3)& (0+255),w,b
  9678   0006CC  A4D8               	btfss	status,2,c
  9679   0006CE  EF6B  F003         	goto	u4681
  9680   0006D2  EF6D  F003         	goto	u4680
  9681   0006D6                     u4681:
  9682   0006D6  EF62  F003         	goto	l5875
  9683   0006DA                     u4680:
  9684   0006DA  EF0F  F002         	goto	l5777
  9685   0006DE                     l76:
  9686   0006DE  0012               	return		;funcret
  9687   0006E0                     __end_of_change_pass:
  9688                           	callstack 0
  9689                           
  9690 ;; *************** function _write_external_eeprom *****************
  9691 ;; Defined at:
  9692 ;;		line 14 in file "extern_eeprom.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;  address         1    wreg     unsigned char 
  9695 ;;  data            1    6[COMRAM] unsigned char 
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;  address         1    7[COMRAM] unsigned char 
  9698 ;;  wait            2    8[COMRAM] unsigned int 
  9699 ;; Return value:  Size  Location     Type
  9700 ;;                  1    wreg      void 
  9701 ;; Registers used:
  9702 ;;		wreg, status,2, status,0, cstack
  9703 ;; Tracked objects:
  9704 ;;		On entry : 0/0
  9705 ;;		On exit  : 0/0
  9706 ;;		Unchanged: 0/0
  9707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9708 ;;      Params:         1       0       0       0       0       0       0
  9709 ;;      Locals:         3       0       0       0       0       0       0
  9710 ;;      Temps:          0       0       0       0       0       0       0
  9711 ;;      Totals:         4       0       0       0       0       0       0
  9712 ;;Total ram usage:        4 bytes
  9713 ;; Hardware stack levels used: 1
  9714 ;; Hardware stack levels required when called: 4
  9715 ;; This function calls:
  9716 ;;		_i2c_start
  9717 ;;		_i2c_stop
  9718 ;;		_i2c_write
  9719 ;; This function is called by:
  9720 ;;		_change_pass
  9721 ;;		_write_10_bytes
  9722 ;; This function uses a non-reentrant model
  9723 ;;
  9724                           
  9725                           	psect	text47
  9726   002762                     __ptext47:
  9727                           	callstack 0
  9728   002762                     _write_external_eeprom:
  9729                           	callstack 24
  9730                           
  9731                           ;incstack = 0
  9732                           ;write_external_eeprom@address stored from wreg
  9733   002762  6E08               	movwf	write_external_eeprom@address^0,c
  9734   002764                     
  9735                           ;extern_eeprom.c: 14: void write_external_eeprom(unsigned char address, unsigned char da
      +                          ta);extern_eeprom.c: 15: {;extern_eeprom.c: 16:     i2c_start();
  9736   002764  EC18  F015         	call	_i2c_start	;wreg free
  9737   002768                     
  9738                           ;extern_eeprom.c: 17:     i2c_write(0xA0);
  9739   002768  0EA0               	movlw	160
  9740   00276A  EC06  F015         	call	_i2c_write
  9741   00276E                     
  9742                           ;extern_eeprom.c: 18:     i2c_write(address);
  9743   00276E  5008               	movf	write_external_eeprom@address^0,w,c
  9744   002770  EC06  F015         	call	_i2c_write
  9745   002774                     
  9746                           ;extern_eeprom.c: 19:     i2c_write(data);
  9747   002774  5007               	movf	write_external_eeprom@data^0,w,c
  9748   002776  EC06  F015         	call	_i2c_write
  9749   00277A                     
  9750                           ;extern_eeprom.c: 20:     i2c_stop();
  9751   00277A  EC14  F015         	call	_i2c_stop	;wreg free
  9752   00277E                     
  9753                           ;extern_eeprom.c: 21:     for (unsigned int wait = 3000;wait--;);
  9754   00277E  0E0B               	movlw	11
  9755   002780  6E0A               	movwf	(write_external_eeprom@wait+1)^0,c
  9756   002782  0EB8               	movlw	184
  9757   002784  6E09               	movwf	write_external_eeprom@wait^0,c
  9758   002786                     l5631:
  9759   002786  0609               	decf	write_external_eeprom@wait^0,f,c
  9760   002788  A0D8               	btfss	status,0,c
  9761   00278A  060A               	decf	(write_external_eeprom@wait+1)^0,f,c
  9762   00278C  2809               	incf	write_external_eeprom@wait^0,w,c
  9763   00278E  E106               	bnz	u4481
  9764   002790  280A               	incf	(write_external_eeprom@wait+1)^0,w,c
  9765   002792  A4D8               	btfss	status,2,c
  9766   002794  EFCE  F013         	goto	u4481
  9767   002798  EFD0  F013         	goto	u4480
  9768   00279C                     u4481:
  9769   00279C  EFC3  F013         	goto	l5631
  9770   0027A0                     u4480:
  9771   0027A0  0012               	return		;funcret
  9772   0027A2                     __end_of_write_external_eeprom:
  9773                           	callstack 0
  9774                           
  9775 ;; *************** function _i2c_write *****************
  9776 ;; Defined at:
  9777 ;;		line 61 in file "i2c.c"
  9778 ;; Parameters:    Size  Location     Type
  9779 ;;  data            1    wreg     unsigned char 
  9780 ;; Auto vars:     Size  Location     Type
  9781 ;;  data            1    5[COMRAM] unsigned char 
  9782 ;; Return value:  Size  Location     Type
  9783 ;;                  1    wreg      void 
  9784 ;; Registers used:
  9785 ;;		wreg, cstack
  9786 ;; Tracked objects:
  9787 ;;		On entry : 0/0
  9788 ;;		On exit  : 0/0
  9789 ;;		Unchanged: 0/0
  9790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9791 ;;      Params:         0       0       0       0       0       0       0
  9792 ;;      Locals:         1       0       0       0       0       0       0
  9793 ;;      Temps:          0       0       0       0       0       0       0
  9794 ;;      Totals:         1       0       0       0       0       0       0
  9795 ;;Total ram usage:        1 bytes
  9796 ;; Hardware stack levels used: 1
  9797 ;; Hardware stack levels required when called: 3
  9798 ;; This function calls:
  9799 ;;		_i2c_idle
  9800 ;; This function is called by:
  9801 ;;		_write_ds1307
  9802 ;;		_read_ds1307
  9803 ;;		_write_external_eeprom
  9804 ;;		_read_external_eeprom
  9805 ;; This function uses a non-reentrant model
  9806 ;;
  9807                           
  9808                           	psect	text48
  9809   002A0C                     __ptext48:
  9810                           	callstack 0
  9811   002A0C                     _i2c_write:
  9812                           	callstack 25
  9813                           
  9814                           ;incstack = 0
  9815                           ;i2c_write@data stored from wreg
  9816   002A0C  6E06               	movwf	i2c_write@data^0,c
  9817   002A0E                     
  9818                           ;i2c.c: 61: void i2c_write(unsigned char data);i2c.c: 62: {;i2c.c: 63:  SSPBUF = data;
  9819   002A0E  C006  FFC9         	movff	i2c_write@data,4041	;volatile
  9820   002A12                     
  9821                           ;i2c.c: 64:  i2c_idle();
  9822   002A12  ECF0  F014         	call	_i2c_idle	;wreg free
  9823   002A16  0012               	return		;funcret
  9824   002A18                     __end_of_i2c_write:
  9825                           	callstack 0
  9826                           
  9827 ;; *************** function _i2c_stop *****************
  9828 ;; Defined at:
  9829 ;;		line 49 in file "i2c.c"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;		None
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;		None
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  1    wreg      void 
  9836 ;; Registers used:
  9837 ;;		cstack
  9838 ;; Tracked objects:
  9839 ;;		On entry : 0/0
  9840 ;;		On exit  : 0/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9843 ;;      Params:         0       0       0       0       0       0       0
  9844 ;;      Locals:         0       0       0       0       0       0       0
  9845 ;;      Temps:          0       0       0       0       0       0       0
  9846 ;;      Totals:         0       0       0       0       0       0       0
  9847 ;;Total ram usage:        0 bytes
  9848 ;; Hardware stack levels used: 1
  9849 ;; Hardware stack levels required when called: 3
  9850 ;; This function calls:
  9851 ;;		_i2c_idle
  9852 ;; This function is called by:
  9853 ;;		_write_ds1307
  9854 ;;		_read_ds1307
  9855 ;;		_write_external_eeprom
  9856 ;;		_read_external_eeprom
  9857 ;; This function uses a non-reentrant model
  9858 ;;
  9859                           
  9860                           	psect	text49
  9861   002A28                     __ptext49:
  9862                           	callstack 0
  9863   002A28                     _i2c_stop:
  9864                           	callstack 25
  9865   002A28                     
  9866                           ;i2c.c: 51:  PEN = 1;
  9867   002A28  84C5               	bsf	4037,2,c	;volatile
  9868   002A2A                     
  9869                           ;i2c.c: 52:  i2c_idle();
  9870   002A2A  ECF0  F014         	call	_i2c_idle	;wreg free
  9871   002A2E  0012               	return		;funcret
  9872   002A30                     __end_of_i2c_stop:
  9873                           	callstack 0
  9874                           
  9875 ;; *************** function _i2c_start *****************
  9876 ;; Defined at:
  9877 ;;		line 43 in file "i2c.c"
  9878 ;; Parameters:    Size  Location     Type
  9879 ;;		None
  9880 ;; Auto vars:     Size  Location     Type
  9881 ;;		None
  9882 ;; Return value:  Size  Location     Type
  9883 ;;                  1    wreg      void 
  9884 ;; Registers used:
  9885 ;;		cstack
  9886 ;; Tracked objects:
  9887 ;;		On entry : 0/0
  9888 ;;		On exit  : 0/0
  9889 ;;		Unchanged: 0/0
  9890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9891 ;;      Params:         0       0       0       0       0       0       0
  9892 ;;      Locals:         0       0       0       0       0       0       0
  9893 ;;      Temps:          0       0       0       0       0       0       0
  9894 ;;      Totals:         0       0       0       0       0       0       0
  9895 ;;Total ram usage:        0 bytes
  9896 ;; Hardware stack levels used: 1
  9897 ;; Hardware stack levels required when called: 3
  9898 ;; This function calls:
  9899 ;;		_i2c_idle
  9900 ;; This function is called by:
  9901 ;;		_write_ds1307
  9902 ;;		_read_ds1307
  9903 ;;		_write_external_eeprom
  9904 ;;		_read_external_eeprom
  9905 ;; This function uses a non-reentrant model
  9906 ;;
  9907                           
  9908                           	psect	text50
  9909   002A30                     __ptext50:
  9910                           	callstack 0
  9911   002A30                     _i2c_start:
  9912                           	callstack 25
  9913   002A30                     
  9914                           ;i2c.c: 45:  SEN = 1;
  9915   002A30  80C5               	bsf	4037,0,c	;volatile
  9916   002A32                     
  9917                           ;i2c.c: 46:  i2c_idle();
  9918   002A32  ECF0  F014         	call	_i2c_idle	;wreg free
  9919   002A36  0012               	return		;funcret
  9920   002A38                     __end_of_i2c_start:
  9921                           	callstack 0
  9922                           
  9923 ;; *************** function _i2c_idle *****************
  9924 ;; Defined at:
  9925 ;;		line 29 in file "i2c.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;		None
  9928 ;; Auto vars:     Size  Location     Type
  9929 ;;		None
  9930 ;; Return value:  Size  Location     Type
  9931 ;;                  1    wreg      void 
  9932 ;; Registers used:
  9933 ;;		None
  9934 ;; Tracked objects:
  9935 ;;		On entry : 0/0
  9936 ;;		On exit  : 0/0
  9937 ;;		Unchanged: 0/0
  9938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9939 ;;      Params:         0       0       0       0       0       0       0
  9940 ;;      Locals:         0       0       0       0       0       0       0
  9941 ;;      Temps:          0       0       0       0       0       0       0
  9942 ;;      Totals:         0       0       0       0       0       0       0
  9943 ;;Total ram usage:        0 bytes
  9944 ;; Hardware stack levels used: 1
  9945 ;; Hardware stack levels required when called: 2
  9946 ;; This function calls:
  9947 ;;		Nothing
  9948 ;; This function is called by:
  9949 ;;		_i2c_start
  9950 ;;		_i2c_stop
  9951 ;;		_i2c_rep_start
  9952 ;;		_i2c_write
  9953 ;;		_i2c_rx_mode
  9954 ;; This function uses a non-reentrant model
  9955 ;;
  9956                           
  9957                           	psect	text51
  9958   0029E0                     __ptext51:
  9959                           	callstack 0
  9960   0029E0                     _i2c_idle:
  9961                           	callstack 25
  9962   0029E0                     l1142:
  9963   0029E0  A69E               	btfss	3998,3,c	;volatile
  9964   0029E2  EFF5  F014         	goto	u4361
  9965   0029E6  EFF7  F014         	goto	u4360
  9966   0029EA                     u4361:
  9967   0029EA  EFF0  F014         	goto	l1142
  9968   0029EE                     u4360:
  9969   0029EE                     
  9970                           ;i2c.c: 32:  SSPIF = 0;
  9971   0029EE  969E               	bcf	3998,3,c	;volatile
  9972   0029F0  0012               	return		;funcret
  9973   0029F2                     __end_of_i2c_idle:
  9974                           	callstack 0
  9975                           
  9976 ;; *************** function _check_password *****************
  9977 ;; Defined at:
  9978 ;;		line 46 in file "password.c"
  9979 ;; Parameters:    Size  Location     Type
  9980 ;;		None
  9981 ;; Auto vars:     Size  Location     Type
  9982 ;;		None
  9983 ;; Return value:  Size  Location     Type
  9984 ;;                  1    wreg      unsigned char 
  9985 ;; Registers used:
  9986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9987 ;; Tracked objects:
  9988 ;;		On entry : 0/0
  9989 ;;		On exit  : 0/0
  9990 ;;		Unchanged: 0/0
  9991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9992 ;;      Params:         0       0       0       0       0       0       0
  9993 ;;      Locals:         0       0       0       0       0       0       0
  9994 ;;      Temps:          2       0       0       0       0       0       0
  9995 ;;      Totals:         2       0       0       0       0       0       0
  9996 ;;Total ram usage:        2 bytes
  9997 ;; Hardware stack levels used: 1
  9998 ;; Hardware stack levels required when called: 2
  9999 ;; This function calls:
 10000 ;;		Nothing
 10001 ;; This function is called by:
 10002 ;;		_change_pass
 10003 ;;		_password
 10004 ;; This function uses a non-reentrant model
 10005 ;;
 10006                           
 10007                           	psect	text52
 10008   0025B8                     __ptext52:
 10009                           	callstack 0
 10010   0025B8                     _check_password:
 10011                           	callstack 27
 10012   0025B8                     
 10013                           ;password.c: 48:     for(ind = 0; ind < 4; ind++)
 10014   0025B8  0E00               	movlw	0
 10015   0025BA  6E57               	movwf	_ind^0,c
 10016   0025BC                     l4189:
 10017   0025BC  0E03               	movlw	3
 10018   0025BE  6457               	cpfsgt	_ind^0,c
 10019   0025C0  EFE4  F012         	goto	u2661
 10020   0025C4  EFE6  F012         	goto	u2660
 10021   0025C8                     u2661:
 10022   0025C8  EFE8  F012         	goto	l4193
 10023   0025CC                     u2660:
 10024   0025CC  EFFF  F012         	goto	l4203
 10025   0025D0                     l4193:
 10026                           
 10027                           ;password.c: 49:     {;password.c: 50:         if(try[ind] != pw[ind])
 10028   0025D0  5057               	movf	_ind^0,w,c
 10029   0025D2  0F68               	addlw	low _pw
 10030   0025D4  6ED9               	movwf	fsr2l,c
 10031   0025D6  6ADA               	clrf	fsr2h,c
 10032   0025D8  5057               	movf	_ind^0,w,c
 10033   0025DA  0F64               	addlw	low _try
 10034   0025DC  6EE1               	movwf	fsr1l,c
 10035   0025DE  6AE2               	clrf	fsr1h,c
 10036   0025E0  50DE               	movf	postinc2,w,c
 10037   0025E2  18E6               	xorwf	postinc1,w,c
 10038   0025E4  B4D8               	btfsc	status,2,c
 10039   0025E6  EFF7  F012         	goto	u2671
 10040   0025EA  EFF9  F012         	goto	u2670
 10041   0025EE                     u2671:
 10042   0025EE  EFFC  F012         	goto	l4199
 10043   0025F2                     u2670:
 10044   0025F2                     
 10045                           ;password.c: 51:         {;password.c: 52:             return 0;
 10046   0025F2  0E00               	movlw	0
 10047   0025F4  EF02  F013         	goto	l639
 10048   0025F8                     l4199:
 10049                           
 10050                           ;password.c: 54:     }
 10051   0025F8  2A57               	incf	_ind^0,f,c
 10052   0025FA  EFDE  F012         	goto	l4189
 10053   0025FE                     l4203:
 10054                           
 10055                           ;password.c: 55:     ind = 0;
 10056   0025FE  0E00               	movlw	0
 10057   002600  6E57               	movwf	_ind^0,c
 10058   002602                     
 10059                           ;password.c: 56:     return 1;
 10060   002602  0E01               	movlw	1
 10061   002604                     l639:
 10062   002604  0012               	return		;funcret
 10063   002606                     __end_of_check_password:
 10064                           	callstack 0
 10065                           
 10066 ;; *************** function _check_newpassword *****************
 10067 ;; Defined at:
 10068 ;;		line 58 in file "change_password.c"
 10069 ;; Parameters:    Size  Location     Type
 10070 ;;		None
 10071 ;; Auto vars:     Size  Location     Type
 10072 ;;		None
 10073 ;; Return value:  Size  Location     Type
 10074 ;;                  1    wreg      unsigned char 
 10075 ;; Registers used:
 10076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10077 ;; Tracked objects:
 10078 ;;		On entry : 0/0
 10079 ;;		On exit  : 0/0
 10080 ;;		Unchanged: 0/0
 10081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10082 ;;      Params:         0       0       0       0       0       0       0
 10083 ;;      Locals:         0       0       0       0       0       0       0
 10084 ;;      Temps:          2       0       0       0       0       0       0
 10085 ;;      Totals:         2       0       0       0       0       0       0
 10086 ;;Total ram usage:        2 bytes
 10087 ;; Hardware stack levels used: 1
 10088 ;; Hardware stack levels required when called: 2
 10089 ;; This function calls:
 10090 ;;		Nothing
 10091 ;; This function is called by:
 10092 ;;		_change_pass
 10093 ;; This function uses a non-reentrant model
 10094 ;;
 10095                           
 10096                           	psect	text53
 10097   002606                     __ptext53:
 10098                           	callstack 0
 10099   002606                     _check_newpassword:
 10100                           	callstack 27
 10101   002606                     
 10102                           ;change_password.c: 60:     for(ind = 0; ind < 4; ind++)
 10103   002606  0E00               	movlw	0
 10104   002608  6E57               	movwf	_ind^0,c
 10105   00260A                     l4153:
 10106   00260A  0E03               	movlw	3
 10107   00260C  6457               	cpfsgt	_ind^0,c
 10108   00260E  EF0B  F013         	goto	u2631
 10109   002612  EF0D  F013         	goto	u2630
 10110   002616                     u2631:
 10111   002616  EF0F  F013         	goto	l4157
 10112   00261A                     u2630:
 10113   00261A  EF26  F013         	goto	l4167
 10114   00261E                     l4157:
 10115                           
 10116                           ;change_password.c: 61:     {;change_password.c: 62:         if(try[ind] != newpw[ind])
 10117   00261E  5057               	movf	_ind^0,w,c
 10118   002620  0F60               	addlw	low _newpw
 10119   002622  6ED9               	movwf	fsr2l,c
 10120   002624  6ADA               	clrf	fsr2h,c
 10121   002626  5057               	movf	_ind^0,w,c
 10122   002628  0F64               	addlw	low _try
 10123   00262A  6EE1               	movwf	fsr1l,c
 10124   00262C  6AE2               	clrf	fsr1h,c
 10125   00262E  50DE               	movf	postinc2,w,c
 10126   002630  18E6               	xorwf	postinc1,w,c
 10127   002632  B4D8               	btfsc	status,2,c
 10128   002634  EF1E  F013         	goto	u2641
 10129   002638  EF20  F013         	goto	u2640
 10130   00263C                     u2641:
 10131   00263C  EF23  F013         	goto	l4163
 10132   002640                     u2640:
 10133   002640                     
 10134                           ;change_password.c: 63:         {;change_password.c: 64:             return 0;
 10135   002640  0E00               	movlw	0
 10136   002642  EF29  F013         	goto	l72
 10137   002646                     l4163:
 10138                           
 10139                           ;change_password.c: 66:     }
 10140   002646  2A57               	incf	_ind^0,f,c
 10141   002648  EF05  F013         	goto	l4153
 10142   00264C                     l4167:
 10143                           
 10144                           ;change_password.c: 67:     ind = 0;
 10145   00264C  0E00               	movlw	0
 10146   00264E  6E57               	movwf	_ind^0,c
 10147   002650                     
 10148                           ;change_password.c: 68:     return 1;
 10149   002650  0E01               	movlw	1
 10150   002652                     l72:
 10151   002652  0012               	return		;funcret
 10152   002654                     __end_of_check_newpassword:
 10153                           	callstack 0
 10154                           
 10155 ;; *************** function _addtoarray2 *****************
 10156 ;; Defined at:
 10157 ;;		line 45 in file "change_password.c"
 10158 ;; Parameters:    Size  Location     Type
 10159 ;;  key             1    wreg     unsigned char 
 10160 ;; Auto vars:     Size  Location     Type
 10161 ;;  key             1   10[COMRAM] unsigned char 
 10162 ;; Return value:  Size  Location     Type
 10163 ;;                  1    wreg      void 
 10164 ;; Registers used:
 10165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10166 ;; Tracked objects:
 10167 ;;		On entry : 0/0
 10168 ;;		On exit  : 0/0
 10169 ;;		Unchanged: 0/0
 10170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10171 ;;      Params:         0       0       0       0       0       0       0
 10172 ;;      Locals:         1       0       0       0       0       0       0
 10173 ;;      Temps:          0       0       0       0       0       0       0
 10174 ;;      Totals:         1       0       0       0       0       0       0
 10175 ;;Total ram usage:        1 bytes
 10176 ;; Hardware stack levels used: 1
 10177 ;; Hardware stack levels required when called: 4
 10178 ;; This function calls:
 10179 ;;		_clcd_print
 10180 ;; This function is called by:
 10181 ;;		_change_pass
 10182 ;; This function uses a non-reentrant model
 10183 ;;
 10184                           
 10185                           	psect	text54
 10186   00284A                     __ptext54:
 10187                           	callstack 0
 10188   00284A                     _addtoarray2:
 10189                           	callstack 25
 10190                           
 10191                           ;incstack = 0
 10192                           ;addtoarray2@key stored from wreg
 10193   00284A  6E0B               	movwf	addtoarray2@key^0,c
 10194   00284C                     
 10195                           ;change_password.c: 45: void addtoarray2(unsigned char key);change_password.c: 46: {;cha
      +                          nge_password.c: 47:     if(key != 0xFF)
 10196   00284C  280B               	incf	addtoarray2@key^0,w,c
 10197   00284E  B4D8               	btfsc	status,2,c
 10198   002850  EF2C  F014         	goto	u2621
 10199   002854  EF2E  F014         	goto	u2620
 10200   002858                     u2621:
 10201   002858  EF3E  F014         	goto	l66
 10202   00285C                     u2620:
 10203   00285C                     
 10204                           ;change_password.c: 48:     {;change_password.c: 50:         newpw[ind] = key;
 10205   00285C  5057               	movf	_ind^0,w,c
 10206   00285E  0F60               	addlw	low _newpw
 10207   002860  6ED9               	movwf	fsr2l,c
 10208   002862  6ADA               	clrf	fsr2h,c
 10209   002864  C00B  FFDF         	movff	addtoarray2@key,indf2
 10210   002868                     
 10211                           ;change_password.c: 52:         clcd_print("*", (0xC0 + (ind)));
 10212   002868  0EFB               	movlw	low STR_10
 10213   00286A  6E08               	movwf	clcd_print@data^0,c
 10214   00286C  0E2F               	movlw	high STR_10
 10215   00286E  6E09               	movwf	(clcd_print@data+1)^0,c
 10216   002870  5057               	movf	_ind^0,w,c
 10217   002872  0FC0               	addlw	192
 10218   002874  6E0A               	movwf	clcd_print@addr^0,c
 10219   002876  EC1C  F012         	call	_clcd_print	;wreg free
 10220   00287A                     
 10221                           ;change_password.c: 54:         ind++;
 10222   00287A  2A57               	incf	_ind^0,f,c
 10223   00287C                     l66:
 10224   00287C  0012               	return		;funcret
 10225   00287E                     __end_of_addtoarray2:
 10226                           	callstack 0
 10227                           
 10228 ;; *************** function _addtoarray *****************
 10229 ;; Defined at:
 10230 ;;		line 27 in file "password.c"
 10231 ;; Parameters:    Size  Location     Type
 10232 ;;  key             1    wreg     unsigned char 
 10233 ;; Auto vars:     Size  Location     Type
 10234 ;;  key             1   10[COMRAM] unsigned char 
 10235 ;; Return value:  Size  Location     Type
 10236 ;;                  1    wreg      void 
 10237 ;; Registers used:
 10238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10239 ;; Tracked objects:
 10240 ;;		On entry : 0/0
 10241 ;;		On exit  : 0/0
 10242 ;;		Unchanged: 0/0
 10243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10244 ;;      Params:         0       0       0       0       0       0       0
 10245 ;;      Locals:         1       0       0       0       0       0       0
 10246 ;;      Temps:          0       0       0       0       0       0       0
 10247 ;;      Totals:         1       0       0       0       0       0       0
 10248 ;;Total ram usage:        1 bytes
 10249 ;; Hardware stack levels used: 1
 10250 ;; Hardware stack levels required when called: 4
 10251 ;; This function calls:
 10252 ;;		_clcd_print
 10253 ;; This function is called by:
 10254 ;;		_change_pass
 10255 ;;		_password
 10256 ;; This function uses a non-reentrant model
 10257 ;;
 10258                           
 10259                           	psect	text55
 10260   002566                     __ptext55:
 10261                           	callstack 0
 10262   002566                     _addtoarray:
 10263                           	callstack 25
 10264                           
 10265                           ;incstack = 0
 10266                           ;addtoarray@key stored from wreg
 10267   002566  6E0B               	movwf	addtoarray@key^0,c
 10268   002568                     
 10269                           ;password.c: 27: void addtoarray(unsigned char key);password.c: 28: {;password.c: 29:   
      +                            if(key != 0xFF)
 10270   002568  280B               	incf	addtoarray@key^0,w,c
 10271   00256A  B4D8               	btfsc	status,2,c
 10272   00256C  EFBA  F012         	goto	u2651
 10273   002570  EFBC  F012         	goto	u2650
 10274   002574                     u2651:
 10275   002574  EFDB  F012         	goto	l633
 10276   002578                     u2650:
 10277   002578                     
 10278                           ;password.c: 30:     {;password.c: 31:         TMR0ON = 0;
 10279   002578  9ED5               	bcf	4053,7,c	;volatile
 10280   00257A                     
 10281                           ;password.c: 32:         wait = 60000;
 10282   00257A  0E60               	movlw	96
 10283   00257C  0100               	movlb	0	; () banked
 10284   00257E  6F74               	movwf	_wait& (0+255),b
 10285   002580  0EEA               	movlw	234
 10286   002582  6F75               	movwf	(_wait+1)& (0+255),b
 10287   002584  0E00               	movlw	0
 10288   002586  6F76               	movwf	(_wait+2)& (0+255),b
 10289   002588  0E00               	movlw	0
 10290   00258A  6F77               	movwf	(_wait+3)& (0+255),b
 10291                           
 10292                           ;password.c: 33:         TMR0 = 6;
 10293   00258C  0E00               	movlw	0
 10294   00258E  6ED7               	movwf	215,c	;volatile
 10295   002590  0E06               	movlw	6
 10296   002592  6ED6               	movwf	214,c	;volatile
 10297   002594                     
 10298                           ; BSR set to: 0
 10299                           ;password.c: 34:         TMR0ON = 1;
 10300   002594  8ED5               	bsf	4053,7,c	;volatile
 10301   002596                     
 10302                           ; BSR set to: 0
 10303                           ;password.c: 37:         try[ind] = key;
 10304   002596  5057               	movf	_ind^0,w,c
 10305   002598  0F64               	addlw	low _try
 10306   00259A  6ED9               	movwf	fsr2l,c
 10307   00259C  6ADA               	clrf	fsr2h,c
 10308   00259E  C00B  FFDF         	movff	addtoarray@key,indf2
 10309   0025A2                     
 10310                           ; BSR set to: 0
 10311                           ;password.c: 39:         clcd_print("*", (0xC0 + (ind)));
 10312   0025A2  0EFB               	movlw	low STR_10
 10313   0025A4  6E08               	movwf	clcd_print@data^0,c
 10314   0025A6  0E2F               	movlw	high STR_10
 10315   0025A8  6E09               	movwf	(clcd_print@data+1)^0,c
 10316   0025AA  5057               	movf	_ind^0,w,c
 10317   0025AC  0FC0               	addlw	192
 10318   0025AE  6E0A               	movwf	clcd_print@addr^0,c
 10319   0025B0  EC1C  F012         	call	_clcd_print	;wreg free
 10320   0025B4                     
 10321                           ;password.c: 41:         ind++;
 10322   0025B4  2A57               	incf	_ind^0,f,c
 10323   0025B6                     l633:
 10324   0025B6  0012               	return		;funcret
 10325   0025B8                     __end_of_addtoarray:
 10326                           	callstack 0
 10327                           
 10328 ;; *************** function _clcd_print *****************
 10329 ;; Defined at:
 10330 ;;		line 65 in file "clcd.c"
 10331 ;; Parameters:    Size  Location     Type
 10332 ;;  data            2    7[COMRAM] PTR const unsigned char 
 10333 ;;		 -> STR_156(17), STR_155(17), STR_154(17), view_log@logs(17), 
 10334 ;;		 -> STR_134(14), settime@str(17), STR_124(16), STR_122(17), 
 10335 ;;		 -> STR_121(18), STR_120(18), STR_119(16), STR_118(16), 
 10336 ;;		 -> STR_116(2), STR_115(17), STR_114(17), STR_113(2), 
 10337 ;;		 -> STR_112(2), STR_111(18), STR_110(2), STR_100(2), 
 10338 ;;		 -> STR_99(2), STR_98(2), STR_97(2), STR_96(17), 
 10339 ;;		 -> STR_95(17), STR_94(17), STR_93(17), STR_92(16), 
 10340 ;;		 -> STR_91(16), STR_90(16), STR_89(16), STR_88(16), 
 10341 ;;		 -> STR_78(17), STR_77(17), STR_58(17), STR_57(17), 
 10342 ;;		 -> STR_47(17), str(17), time(9), STR_36(20), 
 10343 ;;		 -> STR_35(20), STR_25(17), STR_24(17), STR_23(18), 
 10344 ;;		 -> STR_22(18), STR_21(2), STR_20(2), STR_19(18), 
 10345 ;;		 -> STR_18(18), STR_17(2), STR_16(2), STR_15(18), 
 10346 ;;		 -> STR_14(18), STR_13(2), STR_12(2), STR_11(17), 
 10347 ;;		 -> STR_10(2), 
 10348 ;;  addr            1    9[COMRAM] unsigned char 
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;		None
 10351 ;; Return value:  Size  Location     Type
 10352 ;;                  1    wreg      void 
 10353 ;; Registers used:
 10354 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10355 ;; Tracked objects:
 10356 ;;		On entry : 0/0
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10360 ;;      Params:         3       0       0       0       0       0       0
 10361 ;;      Locals:         0       0       0       0       0       0       0
 10362 ;;      Temps:          0       0       0       0       0       0       0
 10363 ;;      Totals:         3       0       0       0       0       0       0
 10364 ;;Total ram usage:        3 bytes
 10365 ;; Hardware stack levels used: 1
 10366 ;; Hardware stack levels required when called: 3
 10367 ;; This function calls:
 10368 ;;		_clcd_write
 10369 ;; This function is called by:
 10370 ;;		_addtoarray2
 10371 ;;		_change_pass
 10372 ;;		_clear_log
 10373 ;;		_dashboard
 10374 ;;		_download_log
 10375 ;;		_main
 10376 ;;		_menu
 10377 ;;		_addtoarray
 10378 ;;		_password
 10379 ;;		_settime
 10380 ;;		_view_log
 10381 ;; This function uses a non-reentrant model
 10382 ;;
 10383                           
 10384                           	psect	text56
 10385   002438                     __ptext56:
 10386                           	callstack 0
 10387   002438                     _clcd_print:
 10388                           	callstack 26
 10389   002438                     
 10390                           ;clcd.c: 65: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 66: 
      +                          {;clcd.c: 67:  clcd_write(addr, 0);
 10391   002438  0E00               	movlw	0
 10392   00243A  6E06               	movwf	clcd_write@control_bit^0,c
 10393   00243C  500A               	movf	clcd_print@addr^0,w,c
 10394   00243E  ECEE  F013         	call	_clcd_write
 10395                           
 10396                           ;clcd.c: 68:  while (*data != '\0')
 10397   002442  EF39  F012         	goto	l4101
 10398   002446                     l4097:
 10399                           
 10400                           ;clcd.c: 69:  {;clcd.c: 70:   clcd_write(*data++, 1);
 10401   002446  0E01               	movlw	1
 10402   002448  6E06               	movwf	clcd_write@control_bit^0,c
 10403   00244A  C008  FFF6         	movff	clcd_print@data,tblptrl
 10404   00244E  C009  FFF7         	movff	clcd_print@data+1,tblptrh
 10405   002452  6AF8               	clrf	tblptru,c
 10406   002454  0E05               	movlw	(high __ramtop+-1)
 10407   002456  64F7               	cpfsgt	tblptrh,c
 10408   002458  D003               	bra	u2587
 10409   00245A  0008               	tblrd		*
 10410   00245C  50F5               	movf	tablat,w,c
 10411   00245E  D005               	bra	u2580
 10412   002460                     u2587:
 10413   002460  CFF6 FFE1          	movff	tblptrl,fsr1l
 10414   002464  CFF7 FFE2          	movff	tblptrh,fsr1h
 10415   002468  50E7               	movf	indf1,w,c
 10416   00246A                     u2580:
 10417   00246A  ECEE  F013         	call	_clcd_write
 10418   00246E  4A08               	infsnz	clcd_print@data^0,f,c
 10419   002470  2A09               	incf	(clcd_print@data+1)^0,f,c
 10420   002472                     l4101:
 10421                           
 10422                           ;clcd.c: 68:  while (*data != '\0')
 10423   002472  C008  FFF6         	movff	clcd_print@data,tblptrl
 10424   002476  C009  FFF7         	movff	clcd_print@data+1,tblptrh
 10425   00247A  6AF8               	clrf	tblptru,c
 10426   00247C  0E05               	movlw	(high __ramtop+-1)
 10427   00247E  64F7               	cpfsgt	tblptrh,c
 10428   002480  D003               	bra	u2597
 10429   002482  0008               	tblrd		*
 10430   002484  50F5               	movf	tablat,w,c
 10431   002486  D005               	bra	u2590
 10432   002488                     u2597:
 10433   002488  CFF6 FFE1          	movff	tblptrl,fsr1l
 10434   00248C  CFF7 FFE2          	movff	tblptrh,fsr1h
 10435   002490  50E7               	movf	indf1,w,c
 10436   002492                     u2590:
 10437   002492  0900               	iorlw	0
 10438   002494  A4D8               	btfss	status,2,c
 10439   002496  EF4F  F012         	goto	u2601
 10440   00249A  EF51  F012         	goto	u2600
 10441   00249E                     u2601:
 10442   00249E  EF23  F012         	goto	l4097
 10443   0024A2                     u2600:
 10444   0024A2  0012               	return		;funcret
 10445   0024A4                     __end_of_clcd_print:
 10446                           	callstack 0
 10447                           
 10448 ;; *************** function _clcd_write *****************
 10449 ;; Defined at:
 10450 ;;		line 11 in file "clcd.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;  byte            1    wreg     unsigned char 
 10453 ;;  control_bit     1    5[COMRAM] unsigned char 
 10454 ;; Auto vars:     Size  Location     Type
 10455 ;;  byte            1    6[COMRAM] unsigned char 
 10456 ;; Return value:  Size  Location     Type
 10457 ;;                  1    wreg      void 
 10458 ;; Registers used:
 10459 ;;		wreg
 10460 ;; Tracked objects:
 10461 ;;		On entry : 0/0
 10462 ;;		On exit  : 0/0
 10463 ;;		Unchanged: 0/0
 10464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10465 ;;      Params:         1       0       0       0       0       0       0
 10466 ;;      Locals:         1       0       0       0       0       0       0
 10467 ;;      Temps:          0       0       0       0       0       0       0
 10468 ;;      Totals:         2       0       0       0       0       0       0
 10469 ;;Total ram usage:        2 bytes
 10470 ;; Hardware stack levels used: 1
 10471 ;; Hardware stack levels required when called: 2
 10472 ;; This function calls:
 10473 ;;		Nothing
 10474 ;; This function is called by:
 10475 ;;		_init_clcd
 10476 ;;		_clcd_print
 10477 ;;		_clcd_putch
 10478 ;; This function uses a non-reentrant model
 10479 ;;
 10480                           
 10481                           	psect	text57
 10482   0027DC                     __ptext57:
 10483                           	callstack 0
 10484   0027DC                     _clcd_write:
 10485                           	callstack 26
 10486                           
 10487                           ;incstack = 0
 10488                           ;clcd_write@byte stored from wreg
 10489   0027DC  6E07               	movwf	clcd_write@byte^0,c
 10490   0027DE                     
 10491                           ;clcd.c: 11: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 12: 
      +                          {;clcd.c: 13:  RC1 = control_bit;
 10492   0027DE  B006               	btfsc	clcd_write@control_bit^0,0,c
 10493   0027E0  EFF4  F013         	goto	u2551
 10494   0027E4  EFF7  F013         	goto	u2550
 10495   0027E8                     u2551:
 10496   0027E8  8282               	bsf	3970,1,c	;volatile
 10497   0027EA  EFF8  F013         	goto	u2565
 10498   0027EE                     u2550:
 10499   0027EE  9282               	bcf	3970,1,c	;volatile
 10500   0027F0                     u2565:
 10501   0027F0                     
 10502                           ;clcd.c: 14:  PORTD = byte;
 10503   0027F0  C007  FF83         	movff	clcd_write@byte,3971	;volatile
 10504   0027F4                     
 10505                           ;clcd.c: 17:  RC2 = 1;
 10506   0027F4  8482               	bsf	3970,2,c	;volatile
 10507   0027F6                     
 10508                           ;clcd.c: 18:  RC2 = 0;
 10509   0027F6  9482               	bcf	3970,2,c	;volatile
 10510   0027F8                     
 10511                           ;clcd.c: 20:  TRISD7 = 0xFF;
 10512   0027F8  8E95               	bsf	3989,7,c	;volatile
 10513   0027FA                     
 10514                           ;clcd.c: 21:  RC0 = 1;
 10515   0027FA  8082               	bsf	3970,0,c	;volatile
 10516   0027FC                     
 10517                           ;clcd.c: 22:  RC1 = 0;
 10518   0027FC  9282               	bcf	3970,1,c	;volatile
 10519   0027FE                     l4079:
 10520                           
 10521                           ;clcd.c: 25:  {;clcd.c: 26:   RC2 = 1;
 10522   0027FE  8482               	bsf	3970,2,c	;volatile
 10523   002800                     
 10524                           ;clcd.c: 27:   RC2 = 0;
 10525   002800  9482               	bcf	3970,2,c	;volatile
 10526   002802                     
 10527                           ;clcd.c: 28:  } while (RD7);
 10528   002802  BE83               	btfsc	3971,7,c	;volatile
 10529   002804  EF06  F014         	goto	u2571
 10530   002808  EF08  F014         	goto	u2570
 10531   00280C                     u2571:
 10532   00280C  EFFF  F013         	goto	l4079
 10533   002810                     u2570:
 10534   002810                     
 10535                           ;clcd.c: 30:  RC0 = 0;
 10536   002810  9082               	bcf	3970,0,c	;volatile
 10537                           
 10538                           ;clcd.c: 31:  TRISD7 = 0x00;
 10539   002812  9E95               	bcf	3989,7,c	;volatile
 10540   002814  0012               	return		;funcret
 10541   002816                     __end_of_clcd_write:
 10542                           	callstack 0
 10543                           
 10544 ;; *************** function ___lwdiv *****************
 10545 ;; Defined at:
 10546 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
 10547 ;; Parameters:    Size  Location     Type
 10548 ;;  dividend        2    5[COMRAM] unsigned int 
 10549 ;;  divisor         2    7[COMRAM] unsigned int 
 10550 ;; Auto vars:     Size  Location     Type
 10551 ;;  quotient        2    9[COMRAM] unsigned int 
 10552 ;;  counter         1   11[COMRAM] unsigned char 
 10553 ;; Return value:  Size  Location     Type
 10554 ;;                  2    5[COMRAM] unsigned int 
 10555 ;; Registers used:
 10556 ;;		wreg, status,2, status,0
 10557 ;; Tracked objects:
 10558 ;;		On entry : 0/0
 10559 ;;		On exit  : 0/0
 10560 ;;		Unchanged: 0/0
 10561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10562 ;;      Params:         4       0       0       0       0       0       0
 10563 ;;      Locals:         3       0       0       0       0       0       0
 10564 ;;      Temps:          0       0       0       0       0       0       0
 10565 ;;      Totals:         7       0       0       0       0       0       0
 10566 ;;Total ram usage:        7 bytes
 10567 ;; Hardware stack levels used: 1
 10568 ;; Hardware stack levels required when called: 2
 10569 ;; This function calls:
 10570 ;;		Nothing
 10571 ;; This function is called by:
 10572 ;;		_main
 10573 ;; This function uses a non-reentrant model
 10574 ;;
 10575                           
 10576                           	psect	text58
 10577   0022E4                     __ptext58:
 10578                           	callstack 0
 10579   0022E4                     ___lwdiv:
 10580                           	callstack 28
 10581   0022E4  0E00               	movlw	0
 10582   0022E6  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
 10583   0022E8  0E00               	movlw	0
 10584   0022EA  6E0A               	movwf	___lwdiv@quotient^0,c
 10585   0022EC  5008               	movf	___lwdiv@divisor^0,w,c
 10586   0022EE  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
 10587   0022F0  B4D8               	btfsc	status,2,c
 10588   0022F2  EF7D  F011         	goto	u3621
 10589   0022F6  EF7F  F011         	goto	u3620
 10590   0022FA                     u3621:
 10591   0022FA  EFA7  F011         	goto	l1781
 10592   0022FE                     u3620:
 10593   0022FE  0E01               	movlw	1
 10594   002300  6E0C               	movwf	___lwdiv@counter^0,c
 10595   002302  EF87  F011         	goto	l5119
 10596   002306                     l5117:
 10597   002306  90D8               	bcf	status,0,c
 10598   002308  3608               	rlcf	___lwdiv@divisor^0,f,c
 10599   00230A  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
 10600   00230C  2A0C               	incf	___lwdiv@counter^0,f,c
 10601   00230E                     l5119:
 10602   00230E  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
 10603   002310  EF8C  F011         	goto	u3631
 10604   002314  EF8E  F011         	goto	u3630
 10605   002318                     u3631:
 10606   002318  EF83  F011         	goto	l5117
 10607   00231C                     u3630:
 10608   00231C                     l5121:
 10609   00231C  90D8               	bcf	status,0,c
 10610   00231E  360A               	rlcf	___lwdiv@quotient^0,f,c
 10611   002320  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
 10612   002322  5008               	movf	___lwdiv@divisor^0,w,c
 10613   002324  5C06               	subwf	___lwdiv@dividend^0,w,c
 10614   002326  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 10615   002328  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
 10616   00232A  A0D8               	btfss	status,0,c
 10617   00232C  EF9A  F011         	goto	u3641
 10618   002330  EF9C  F011         	goto	u3640
 10619   002334                     u3641:
 10620   002334  EFA1  F011         	goto	l5129
 10621   002338                     u3640:
 10622   002338  5008               	movf	___lwdiv@divisor^0,w,c
 10623   00233A  5E06               	subwf	___lwdiv@dividend^0,f,c
 10624   00233C  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 10625   00233E  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10626   002340  800A               	bsf	___lwdiv@quotient^0,0,c
 10627   002342                     l5129:
 10628   002342  90D8               	bcf	status,0,c
 10629   002344  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10630   002346  3208               	rrcf	___lwdiv@divisor^0,f,c
 10631   002348  2E0C               	decfsz	___lwdiv@counter^0,f,c
 10632   00234A  EF8E  F011         	goto	l5121
 10633   00234E                     l1781:
 10634   00234E  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
 10635   002352  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10636   002356  0012               	return		;funcret
 10637   002358                     __end_of___lwdiv:
 10638                           	callstack 0
 10639                           
 10640 ;; *************** function _isr *****************
 10641 ;; Defined at:
 10642 ;;		line 16 in file "isr.c"
 10643 ;; Parameters:    Size  Location     Type
 10644 ;;		None
 10645 ;; Auto vars:     Size  Location     Type
 10646 ;;		None
 10647 ;; Return value:  Size  Location     Type
 10648 ;;                  1    wreg      void 
 10649 ;; Registers used:
 10650 ;;		wreg, status,2, status,0, cstack
 10651 ;; Tracked objects:
 10652 ;;		On entry : 0/0
 10653 ;;		On exit  : 0/0
 10654 ;;		Unchanged: 0/0
 10655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10656 ;;      Params:         0       0       0       0       0       0       0
 10657 ;;      Locals:         0       0       0       0       0       0       0
 10658 ;;      Temps:          0       0       0       0       0       0       0
 10659 ;;      Totals:         0       0       0       0       0       0       0
 10660 ;;Total ram usage:        0 bytes
 10661 ;; Hardware stack levels used: 1
 10662 ;; Hardware stack levels required when called: 1
 10663 ;; This function calls:
 10664 ;;		___lwmod
 10665 ;; This function is called by:
 10666 ;;		Interrupt level 2
 10667 ;; This function uses a non-reentrant model
 10668 ;;
 10669                           
 10670                           	psect	intcode
 10671   000008                     __pintcode:
 10672                           	callstack 0
 10673   000008                     _isr:
 10674                           	callstack 18
 10675                           
 10676                           ;incstack = 0
 10677   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10678   00000A  ED89  F00D         	call	int_func,f	;refresh shadow registers
 10679                           
 10680                           	psect	intcode_body
 10681   001B12                     __pintcode_body:
 10682                           	callstack 18
 10683   001B12                     int_func:
 10684                           	callstack 18
 10685   001B12  0006               	pop		; remove dummy address from shadow register refresh
 10686   001B14                     
 10687                           ;isr.c: 18:  static unsigned short count;;isr.c: 20:  if (TMR0IF)
 10688   001B14  A4F2               	btfss	4082,2,c	;volatile
 10689   001B16  EF8F  F00D         	goto	i2u382_41
 10690   001B1A  EF91  F00D         	goto	i2u382_40
 10691   001B1E                     i2u382_41:
 10692   001B1E  EFF6  F00D         	goto	i2l1039
 10693   001B22                     i2u382_40:
 10694   001B22                     
 10695                           ;isr.c: 21:  {;isr.c: 22:   TMR0 = TMR0 + 8;
 10696   001B22  0E08               	movlw	8
 10697   001B24  24D6               	addwf	214,w,c	;volatile
 10698   001B26  6ED6               	movwf	214,c	;volatile
 10699   001B28  0E00               	movlw	0
 10700   001B2A  20D7               	addwfc	215,w,c	;volatile
 10701   001B2C  6ED7               	movwf	215,c	;volatile
 10702   001B2E                     
 10703                           ;isr.c: 24:         count++;
 10704   001B2E  0100               	movlb	0	; () banked
 10705   001B30  4B7F               	infsnz	isr@count& (0+255),f,b
 10706   001B32  2B80               	incf	(isr@count+1)& (0+255),f,b
 10707   001B34                     
 10708                           ; BSR set to: 0
 10709                           ;isr.c: 27:         if(count%10000 == 0)
 10710   001B34  C07F  F001         	movff	isr@count,___lwmod@dividend
 10711   001B38  C080  F002         	movff	isr@count+1,___lwmod@dividend+1
 10712   001B3C  0E27               	movlw	39
 10713   001B3E  6E04               	movwf	(___lwmod@divisor+1)^0,c
 10714   001B40  0E10               	movlw	16
 10715   001B42  6E03               	movwf	___lwmod@divisor^0,c
 10716   001B44  EC52  F012         	call	___lwmod	;wreg free
 10717   001B48  5001               	movf	?___lwmod^0,w,c
 10718   001B4A  1002               	iorwf	(?___lwmod+1)^0,w,c
 10719   001B4C  A4D8               	btfss	status,2,c
 10720   001B4E  EFAB  F00D         	goto	i2u383_41
 10721   001B52  EFAD  F00D         	goto	i2u383_40
 10722   001B56                     i2u383_41:
 10723   001B56  EFB8  F00D         	goto	i2l5257
 10724   001B5A                     i2u383_40:
 10725   001B5A                     
 10726                           ;isr.c: 28:         {;isr.c: 29:             flag = !flag;
 10727   001B5A  5059               	movf	_flag^0,w,c
 10728   001B5C  B4D8               	btfsc	status,2,c
 10729   001B5E  EFB3  F00D         	goto	i2u384_41
 10730   001B62  EFB6  F00D         	goto	i2u384_40
 10731   001B66                     i2u384_41:
 10732   001B66  0E01               	movlw	1
 10733   001B68  EFB7  F00D         	goto	i2u385_40
 10734   001B6C                     i2u384_40:
 10735   001B6C  0E00               	movlw	0
 10736   001B6E                     i2u385_40:
 10737   001B6E  6E59               	movwf	_flag^0,c
 10738   001B70                     i2l5257:
 10739                           
 10740                           ;isr.c: 31:         if(wait)
 10741   001B70  0100               	movlb	0	; () banked
 10742   001B72  5174               	movf	_wait& (0+255),w,b
 10743   001B74  1175               	iorwf	(_wait+1)& (0+255),w,b
 10744   001B76  1176               	iorwf	(_wait+2)& (0+255),w,b
 10745   001B78  1177               	iorwf	(_wait+3)& (0+255),w,b
 10746   001B7A  B4D8               	btfsc	status,2,c
 10747   001B7C  EFC2  F00D         	goto	i2u386_41
 10748   001B80  EFC4  F00D         	goto	i2u386_40
 10749   001B84                     i2u386_41:
 10750   001B84  EFC9  F00D         	goto	i2l1035
 10751   001B88                     i2u386_40:
 10752   001B88                     
 10753                           ; BSR set to: 0
 10754                           ;isr.c: 32:         {;isr.c: 33:             wait--;
 10755   001B88  0774               	decf	_wait& (0+255),f,b
 10756   001B8A  0E00               	movlw	0
 10757   001B8C  5B75               	subwfb	(_wait+1)& (0+255),f,b
 10758   001B8E  5B76               	subwfb	(_wait+2)& (0+255),f,b
 10759   001B90  5B77               	subwfb	(_wait+3)& (0+255),f,b
 10760   001B92                     i2l1035:
 10761                           
 10762                           ; BSR set to: 0
 10763                           ;isr.c: 36:         if(sec_delay)
 10764   001B92  5170               	movf	_sec_delay& (0+255),w,b
 10765   001B94  1171               	iorwf	(_sec_delay+1)& (0+255),w,b
 10766   001B96  1172               	iorwf	(_sec_delay+2)& (0+255),w,b
 10767   001B98  1173               	iorwf	(_sec_delay+3)& (0+255),w,b
 10768   001B9A  B4D8               	btfsc	status,2,c
 10769   001B9C  EFD2  F00D         	goto	i2u387_41
 10770   001BA0  EFD4  F00D         	goto	i2u387_40
 10771   001BA4                     i2u387_41:
 10772   001BA4  EFD9  F00D         	goto	i2l1036
 10773   001BA8                     i2u387_40:
 10774   001BA8                     
 10775                           ; BSR set to: 0
 10776                           ;isr.c: 37:         {;isr.c: 38:             sec_delay--;
 10777   001BA8  0770               	decf	_sec_delay& (0+255),f,b
 10778   001BAA  0E00               	movlw	0
 10779   001BAC  5B71               	subwfb	(_sec_delay+1)& (0+255),f,b
 10780   001BAE  5B72               	subwfb	(_sec_delay+2)& (0+255),f,b
 10781   001BB0  5B73               	subwfb	(_sec_delay+3)& (0+255),f,b
 10782   001BB2                     i2l1036:
 10783                           
 10784                           ; BSR set to: 0
 10785                           ;isr.c: 41:         if (count == 20000)
 10786   001BB2  0E20               	movlw	32
 10787   001BB4  197F               	xorwf	isr@count& (0+255),w,b
 10788   001BB6  E107               	bnz	i2u388_41
 10789   001BB8  0E4E               	movlw	78
 10790   001BBA  1980               	xorwf	(isr@count+1)& (0+255),w,b
 10791   001BBC  A4D8               	btfss	status,2,c
 10792   001BBE  EFE3  F00D         	goto	i2u388_41
 10793   001BC2  EFE5  F00D         	goto	i2u388_40
 10794   001BC6                     i2u388_41:
 10795   001BC6  EFF5  F00D         	goto	i2l5269
 10796   001BCA                     i2u388_40:
 10797   001BCA                     
 10798                           ; BSR set to: 0
 10799                           ;isr.c: 42:   {;isr.c: 43:    count = 0;
 10800   001BCA  0E00               	movlw	0
 10801   001BCC  6F80               	movwf	(isr@count+1)& (0+255),b
 10802   001BCE  0E00               	movlw	0
 10803   001BD0  6F7F               	movwf	isr@count& (0+255),b
 10804   001BD2                     
 10805                           ; BSR set to: 0
 10806                           ;isr.c: 44:             if(block_time)
 10807   001BD2  5183               	movf	_block_time& (0+255),w,b
 10808   001BD4  1184               	iorwf	(_block_time+1)& (0+255),w,b
 10809   001BD6  B4D8               	btfsc	status,2,c
 10810   001BD8  EFF0  F00D         	goto	i2u389_41
 10811   001BDC  EFF2  F00D         	goto	i2u389_40
 10812   001BE0                     i2u389_41:
 10813   001BE0  EFF5  F00D         	goto	i2l5269
 10814   001BE4                     i2u389_40:
 10815   001BE4                     
 10816                           ; BSR set to: 0
 10817                           ;isr.c: 45:             {;isr.c: 46:                 block_time--;
 10818   001BE4  0783               	decf	_block_time& (0+255),f,b
 10819   001BE6  A0D8               	btfss	status,0,c
 10820   001BE8  0784               	decf	(_block_time+1)& (0+255),f,b
 10821   001BEA                     i2l5269:
 10822                           
 10823                           ; BSR set to: 0
 10824                           ;isr.c: 50:   TMR0IF = 0;
 10825   001BEA  94F2               	bcf	4082,2,c	;volatile
 10826   001BEC                     i2l1039:
 10827   001BEC  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10828   001BEE  0011               	retfie		f
 10829   001BF0                     __end_of_isr:
 10830                           	callstack 0
 10831                           
 10832 ;; *************** function ___lwmod *****************
 10833 ;; Defined at:
 10834 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
 10835 ;; Parameters:    Size  Location     Type
 10836 ;;  dividend        2    0[COMRAM] unsigned int 
 10837 ;;  divisor         2    2[COMRAM] unsigned int 
 10838 ;; Auto vars:     Size  Location     Type
 10839 ;;  counter         1    4[COMRAM] unsigned char 
 10840 ;; Return value:  Size  Location     Type
 10841 ;;                  2    0[COMRAM] unsigned int 
 10842 ;; Registers used:
 10843 ;;		wreg, status,2, status,0
 10844 ;; Tracked objects:
 10845 ;;		On entry : 0/0
 10846 ;;		On exit  : 0/0
 10847 ;;		Unchanged: 0/0
 10848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10849 ;;      Params:         4       0       0       0       0       0       0
 10850 ;;      Locals:         1       0       0       0       0       0       0
 10851 ;;      Temps:          0       0       0       0       0       0       0
 10852 ;;      Totals:         5       0       0       0       0       0       0
 10853 ;;Total ram usage:        5 bytes
 10854 ;; Hardware stack levels used: 1
 10855 ;; This function calls:
 10856 ;;		Nothing
 10857 ;; This function is called by:
 10858 ;;		_isr
 10859 ;; This function uses a non-reentrant model
 10860 ;;
 10861                           
 10862                           	psect	text60
 10863   0024A4                     __ptext60:
 10864                           	callstack 0
 10865   0024A4                     ___lwmod:
 10866                           	callstack 18
 10867   0024A4  5003               	movf	___lwmod@divisor^0,w,c
 10868   0024A6  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
 10869   0024A8  B4D8               	btfsc	status,2,c
 10870   0024AA  EF59  F012         	goto	i2u365_41
 10871   0024AE  EF5B  F012         	goto	i2u365_40
 10872   0024B2                     i2u365_41:
 10873   0024B2  EF7F  F012         	goto	i2l1791
 10874   0024B6                     i2u365_40:
 10875   0024B6  0E01               	movlw	1
 10876   0024B8  6E05               	movwf	___lwmod@counter^0,c
 10877   0024BA  EF63  F012         	goto	i2l5139
 10878   0024BE                     i2l5137:
 10879   0024BE  90D8               	bcf	status,0,c
 10880   0024C0  3603               	rlcf	___lwmod@divisor^0,f,c
 10881   0024C2  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
 10882   0024C4  2A05               	incf	___lwmod@counter^0,f,c
 10883   0024C6                     i2l5139:
 10884   0024C6  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
 10885   0024C8  EF68  F012         	goto	i2u366_41
 10886   0024CC  EF6A  F012         	goto	i2u366_40
 10887   0024D0                     i2u366_41:
 10888   0024D0  EF5F  F012         	goto	i2l5137
 10889   0024D4                     i2u366_40:
 10890   0024D4                     i2l5141:
 10891   0024D4  5003               	movf	___lwmod@divisor^0,w,c
 10892   0024D6  5C01               	subwf	___lwmod@dividend^0,w,c
 10893   0024D8  5004               	movf	(___lwmod@divisor+1)^0,w,c
 10894   0024DA  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
 10895   0024DC  A0D8               	btfss	status,0,c
 10896   0024DE  EF73  F012         	goto	i2u367_41
 10897   0024E2  EF75  F012         	goto	i2u367_40
 10898   0024E6                     i2u367_41:
 10899   0024E6  EF79  F012         	goto	i2l5145
 10900   0024EA                     i2u367_40:
 10901   0024EA  5003               	movf	___lwmod@divisor^0,w,c
 10902   0024EC  5E01               	subwf	___lwmod@dividend^0,f,c
 10903   0024EE  5004               	movf	(___lwmod@divisor+1)^0,w,c
 10904   0024F0  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
 10905   0024F2                     i2l5145:
 10906   0024F2  90D8               	bcf	status,0,c
 10907   0024F4  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
 10908   0024F6  3203               	rrcf	___lwmod@divisor^0,f,c
 10909   0024F8  2E05               	decfsz	___lwmod@counter^0,f,c
 10910   0024FA  EF6A  F012         	goto	i2l5141
 10911   0024FE                     i2l1791:
 10912   0024FE  C001  F001         	movff	___lwmod@dividend,?___lwmod
 10913   002502  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 10914   002506  0012               	return		;funcret
 10915   002508                     __end_of___lwmod:
 10916                           	callstack 0
 10917                           
 10918                           	psect	rparam
 10919   000000                     
 10920                           	psect	temp
 10921   00005A                     btemp:
 10922                           	callstack 0
 10923   00005A                     	ds	1
 10924   000000                     int$flags	set	btemp
 10925   000000                     wtemp8	set	btemp+1
 10926   000000                     ttemp5	set	btemp+1
 10927   000000                     ttemp6	set	btemp+4
 10928   000000                     ttemp7	set	btemp+8
 10929                           
 10930                           	psect	idloc
 10931                           
 10932                           ;Config register IDLOC0 @ 0x200000
 10933                           ;	unspecified, using default values
 10934   200000                     	org	2097152
 10935   200000  FF                 	db	255
 10936                           
 10937                           ;Config register IDLOC1 @ 0x200001
 10938                           ;	unspecified, using default values
 10939   200001                     	org	2097153
 10940   200001  FF                 	db	255
 10941                           
 10942                           ;Config register IDLOC2 @ 0x200002
 10943                           ;	unspecified, using default values
 10944   200002                     	org	2097154
 10945   200002  FF                 	db	255
 10946                           
 10947                           ;Config register IDLOC3 @ 0x200003
 10948                           ;	unspecified, using default values
 10949   200003                     	org	2097155
 10950   200003  FF                 	db	255
 10951                           
 10952                           ;Config register IDLOC4 @ 0x200004
 10953                           ;	unspecified, using default values
 10954   200004                     	org	2097156
 10955   200004  FF                 	db	255
 10956                           
 10957                           ;Config register IDLOC5 @ 0x200005
 10958                           ;	unspecified, using default values
 10959   200005                     	org	2097157
 10960   200005  FF                 	db	255
 10961                           
 10962                           ;Config register IDLOC6 @ 0x200006
 10963                           ;	unspecified, using default values
 10964   200006                     	org	2097158
 10965   200006  FF                 	db	255
 10966                           
 10967                           ;Config register IDLOC7 @ 0x200007
 10968                           ;	unspecified, using default values
 10969   200007                     	org	2097159
 10970   200007  FF                 	db	255
 10971                           
 10972                           	psect	config
 10973                           
 10974                           ; Padding undefined space
 10975   300000                     	org	3145728
 10976   300000  FF                 	db	255
 10977                           
 10978                           ;Config register CONFIG1H @ 0x300001
 10979                           ;	unspecified, using default values
 10980                           ;	Oscillator Selection bits
 10981                           ;	OSC = 0x7, unprogrammed default
 10982                           ;	Fail-Safe Clock Monitor Enable bit
 10983                           ;	FCMEN = 0x0, unprogrammed default
 10984                           ;	Internal/External Oscillator Switchover bit
 10985                           ;	IESO = 0x0, unprogrammed default
 10986   300001                     	org	3145729
 10987   300001  07                 	db	7
 10988                           
 10989                           ;Config register CONFIG2L @ 0x300002
 10990                           ;	unspecified, using default values
 10991                           ;	Power-up Timer Enable bit
 10992                           ;	PWRT = 0x1, unprogrammed default
 10993                           ;	Brown-out Reset Enable bits
 10994                           ;	BOREN = 0x3, unprogrammed default
 10995                           ;	Brown-out Reset Voltage bits
 10996                           ;	BORV = 0x3, unprogrammed default
 10997   300002                     	org	3145730
 10998   300002  1F                 	db	31
 10999                           
 11000                           ;Config register CONFIG2H @ 0x300003
 11001                           ;	unspecified, using default values
 11002                           ;	Watchdog Timer Enable bit
 11003                           ;	WDT = 0x1, unprogrammed default
 11004                           ;	Watchdog Timer Postscale Select bits
 11005                           ;	WDTPS = 0xF, unprogrammed default
 11006   300003                     	org	3145731
 11007   300003  1F                 	db	31
 11008                           
 11009                           ; Padding undefined space
 11010   300004                     	org	3145732
 11011   300004  FF                 	db	255
 11012                           
 11013                           ;Config register CONFIG3H @ 0x300005
 11014                           ;	unspecified, using default values
 11015                           ;	PORTB A/D Enable bit
 11016                           ;	PBADEN = 0x1, unprogrammed default
 11017                           ;	Low-Power Timer 1 Oscillator Enable bit
 11018                           ;	LPT1OSC = 0x0, unprogrammed default
 11019                           ;	MCLR Pin Enable bit
 11020                           ;	MCLRE = 0x1, unprogrammed default
 11021   300005                     	org	3145733
 11022   300005  82                 	db	130
 11023                           
 11024                           ;Config register CONFIG4L @ 0x300006
 11025                           ;	unspecified, using default values
 11026                           ;	Stack Full/Underflow Reset Enable bit
 11027                           ;	STVREN = 0x1, unprogrammed default
 11028                           ;	Single-Supply ICSP Enable bit
 11029                           ;	LVP = 0x1, unprogrammed default
 11030                           ;	Boot Block Size Select bit
 11031                           ;	BBSIZ = 0x0, unprogrammed default
 11032                           ;	Extended Instruction Set Enable bit
 11033                           ;	XINST = 0x0, unprogrammed default
 11034                           ;	Background Debugger Enable bit
 11035                           ;	DEBUG = 0x1, unprogrammed default
 11036   300006                     	org	3145734
 11037   300006  85                 	db	133
 11038                           
 11039                           ; Padding undefined space
 11040   300007                     	org	3145735
 11041   300007  FF                 	db	255
 11042                           
 11043                           ;Config register CONFIG5L @ 0x300008
 11044                           ;	unspecified, using default values
 11045                           ;	Code Protection bit
 11046                           ;	CP0 = 0x1, unprogrammed default
 11047                           ;	Code Protection bit
 11048                           ;	CP1 = 0x1, unprogrammed default
 11049                           ;	Code Protection bit
 11050                           ;	CP2 = 0x1, unprogrammed default
 11051                           ;	Code Protection bit
 11052                           ;	CP3 = 0x1, unprogrammed default
 11053   300008                     	org	3145736
 11054   300008  0F                 	db	15
 11055                           
 11056                           ;Config register CONFIG5H @ 0x300009
 11057                           ;	unspecified, using default values
 11058                           ;	Boot Block Code Protection bit
 11059                           ;	CPB = 0x1, unprogrammed default
 11060                           ;	Data EEPROM Code Protection bit
 11061                           ;	CPD = 0x1, unprogrammed default
 11062   300009                     	org	3145737
 11063   300009  C0                 	db	192
 11064                           
 11065                           ;Config register CONFIG6L @ 0x30000A
 11066                           ;	unspecified, using default values
 11067                           ;	Write Protection bit
 11068                           ;	WRT0 = 0x1, unprogrammed default
 11069                           ;	Write Protection bit
 11070                           ;	WRT1 = 0x1, unprogrammed default
 11071                           ;	Write Protection bit
 11072                           ;	WRT2 = 0x1, unprogrammed default
 11073                           ;	Write Protection bit
 11074                           ;	WRT3 = 0x1, unprogrammed default
 11075   30000A                     	org	3145738
 11076   30000A  0F                 	db	15
 11077                           
 11078                           ;Config register CONFIG6H @ 0x30000B
 11079                           ;	unspecified, using default values
 11080                           ;	Configuration Register Write Protection bit
 11081                           ;	WRTC = 0x1, unprogrammed default
 11082                           ;	Boot Block Write Protection bit
 11083                           ;	WRTB = 0x1, unprogrammed default
 11084                           ;	Data EEPROM Write Protection bit
 11085                           ;	WRTD = 0x1, unprogrammed default
 11086   30000B                     	org	3145739
 11087   30000B  E0                 	db	224
 11088                           
 11089                           ;Config register CONFIG7L @ 0x30000C
 11090                           ;	unspecified, using default values
 11091                           ;	Table Read Protection bit
 11092                           ;	EBTR0 = 0x1, unprogrammed default
 11093                           ;	Table Read Protection bit
 11094                           ;	EBTR1 = 0x1, unprogrammed default
 11095                           ;	Table Read Protection bit
 11096                           ;	EBTR2 = 0x1, unprogrammed default
 11097                           ;	Table Read Protection bit
 11098                           ;	EBTR3 = 0x1, unprogrammed default
 11099   30000C                     	org	3145740
 11100   30000C  0F                 	db	15
 11101                           
 11102                           ;Config register CONFIG7H @ 0x30000D
 11103                           ;	unspecified, using default values
 11104                           ;	Boot Block Table Read Protection bit
 11105                           ;	EBTRB = 0x1, unprogrammed default
 11106   30000D                     	org	3145741
 11107   30000D  40                 	db	64
 11108                           tosu	equ	0xFFF
 11109                           tosh	equ	0xFFE
 11110                           tosl	equ	0xFFD
 11111                           stkptr	equ	0xFFC
 11112                           pclatu	equ	0xFFB
 11113                           pclath	equ	0xFFA
 11114                           pcl	equ	0xFF9
 11115                           tblptru	equ	0xFF8
 11116                           tblptrh	equ	0xFF7
 11117                           tblptrl	equ	0xFF6
 11118                           tablat	equ	0xFF5
 11119                           prodh	equ	0xFF4
 11120                           prodl	equ	0xFF3
 11121                           indf0	equ	0xFEF
 11122                           postinc0	equ	0xFEE
 11123                           postdec0	equ	0xFED
 11124                           preinc0	equ	0xFEC
 11125                           plusw0	equ	0xFEB
 11126                           fsr0h	equ	0xFEA
 11127                           fsr0l	equ	0xFE9
 11128                           wreg	equ	0xFE8
 11129                           indf1	equ	0xFE7
 11130                           postinc1	equ	0xFE6
 11131                           postdec1	equ	0xFE5
 11132                           preinc1	equ	0xFE4
 11133                           plusw1	equ	0xFE3
 11134                           fsr1h	equ	0xFE2
 11135                           fsr1l	equ	0xFE1
 11136                           bsr	equ	0xFE0
 11137                           indf2	equ	0xFDF
 11138                           postinc2	equ	0xFDE
 11139                           postdec2	equ	0xFDD
 11140                           preinc2	equ	0xFDC
 11141                           plusw2	equ	0xFDB
 11142                           fsr2h	equ	0xFDA
 11143                           fsr2l	equ	0xFD9
 11144                           status	equ	0xFD8

Data Sizes:
    Strings     678
    Constant    0
    Data        32
    BSS         120
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     80      89
    BANK0           160     66     159
    BANK1           256      0      50
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 20
		 -> settime@str(COMRAM[17]), str(BANK0[17]), STR_10(CODE[2]), STR_100(CODE[2]), 
		 -> STR_11(CODE[17]), STR_110(CODE[2]), STR_111(CODE[18]), STR_112(CODE[2]), 
		 -> STR_113(CODE[2]), STR_114(CODE[17]), STR_115(CODE[17]), STR_116(CODE[2]), 
		 -> STR_118(CODE[16]), STR_119(CODE[16]), STR_12(CODE[2]), STR_120(CODE[18]), 
		 -> STR_121(CODE[18]), STR_122(CODE[17]), STR_124(CODE[16]), STR_13(CODE[2]), 
		 -> STR_134(CODE[14]), STR_14(CODE[18]), STR_15(CODE[18]), STR_154(CODE[17]), 
		 -> STR_155(CODE[17]), STR_156(CODE[17]), STR_16(CODE[2]), STR_17(CODE[2]), 
		 -> STR_18(CODE[18]), STR_19(CODE[18]), STR_20(CODE[2]), STR_21(CODE[2]), 
		 -> STR_22(CODE[18]), STR_23(CODE[18]), STR_24(CODE[17]), STR_25(CODE[17]), 
		 -> STR_35(CODE[20]), STR_36(CODE[20]), STR_47(CODE[17]), STR_57(CODE[17]), 
		 -> STR_58(CODE[17]), STR_77(CODE[17]), STR_78(CODE[17]), STR_88(CODE[16]), 
		 -> STR_89(CODE[16]), STR_90(CODE[16]), STR_91(CODE[16]), STR_92(CODE[16]), 
		 -> STR_93(CODE[17]), STR_94(CODE[17]), STR_95(CODE[17]), STR_96(CODE[17]), 
		 -> STR_97(CODE[2]), STR_98(CODE[2]), STR_99(CODE[2]), time(BANK0[9]), 
		 -> view_log@logs(COMRAM[17]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    dashboard$1799	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), STR_101(CODE[3]), STR_102(CODE[3]), STR_103(CODE[3]), 
		 -> STR_104(CODE[3]), STR_105(CODE[3]), STR_106(CODE[3]), STR_107(CODE[3]), 
		 -> STR_108(CODE[3]), STR_109(CODE[3]), STR_125(CODE[3]), STR_126(CODE[3]), 
		 -> STR_127(CODE[3]), STR_128(CODE[3]), STR_129(CODE[3]), STR_130(CODE[3]), 
		 -> STR_131(CODE[3]), STR_132(CODE[3]), STR_133(CODE[3]), STR_135(CODE[3]), 
		 -> STR_136(CODE[3]), STR_137(CODE[3]), STR_138(CODE[3]), STR_139(CODE[3]), 
		 -> STR_140(CODE[3]), STR_141(CODE[3]), STR_142(CODE[3]), STR_143(CODE[3]), 
		 -> STR_145(CODE[3]), STR_146(CODE[3]), STR_147(CODE[3]), STR_148(CODE[3]), 
		 -> STR_149(CODE[3]), STR_150(CODE[3]), STR_151(CODE[3]), STR_152(CODE[3]), 
		 -> STR_153(CODE[3]), STR_157(CODE[3]), STR_158(CODE[3]), STR_159(CODE[3]), 
		 -> STR_160(CODE[3]), STR_161(CODE[3]), STR_162(CODE[3]), STR_163(CODE[3]), 
		 -> STR_164(CODE[3]), STR_165(CODE[3]), STR_166(CODE[3]), STR_167(CODE[3]), 
		 -> STR_168(CODE[3]), STR_169(CODE[3]), STR_170(CODE[3]), STR_171(CODE[3]), 
		 -> STR_172(CODE[3]), STR_173(CODE[3]), STR_174(CODE[3]), STR_175(CODE[3]), 
		 -> STR_176(CODE[3]), STR_177(CODE[3]), STR_178(CODE[3]), STR_179(CODE[3]), 
		 -> STR_180(CODE[3]), STR_181(CODE[3]), STR_182(CODE[3]), STR_183(CODE[3]), 
		 -> STR_2(CODE[3]), STR_26(CODE[3]), STR_27(CODE[3]), STR_28(CODE[3]), 
		 -> STR_29(CODE[3]), STR_3(CODE[3]), STR_30(CODE[3]), STR_31(CODE[3]), 
		 -> STR_32(CODE[3]), STR_33(CODE[3]), STR_34(CODE[3]), STR_37(CODE[3]), 
		 -> STR_38(CODE[3]), STR_39(CODE[3]), STR_4(CODE[3]), STR_40(CODE[3]), 
		 -> STR_41(CODE[3]), STR_42(CODE[3]), STR_43(CODE[3]), STR_44(CODE[3]), 
		 -> STR_45(CODE[3]), STR_48(CODE[3]), STR_49(CODE[3]), STR_5(CODE[3]), 
		 -> STR_50(CODE[3]), STR_51(CODE[3]), STR_52(CODE[3]), STR_53(CODE[3]), 
		 -> STR_54(CODE[3]), STR_55(CODE[3]), STR_56(CODE[3]), STR_6(CODE[3]), 
		 -> STR_68(CODE[3]), STR_69(CODE[3]), STR_7(CODE[3]), STR_70(CODE[3]), 
		 -> STR_71(CODE[3]), STR_72(CODE[3]), STR_73(CODE[3]), STR_74(CODE[3]), 
		 -> STR_75(CODE[3]), STR_76(CODE[3]), STR_79(CODE[3]), STR_8(CODE[3]), 
		 -> STR_80(CODE[3]), STR_81(CODE[3]), STR_82(CODE[3]), STR_83(CODE[3]), 
		 -> STR_84(CODE[3]), STR_85(CODE[3]), STR_86(CODE[3]), STR_87(CODE[3]), 
		 -> STR_9(CODE[3]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    gear	PTR unsigned char [9] size(2) Largest target is 3
		 -> STR_1(CODE[3]), STR_101(CODE[3]), STR_102(CODE[3]), STR_103(CODE[3]), 
		 -> STR_104(CODE[3]), STR_105(CODE[3]), STR_106(CODE[3]), STR_107(CODE[3]), 
		 -> STR_108(CODE[3]), STR_109(CODE[3]), STR_125(CODE[3]), STR_126(CODE[3]), 
		 -> STR_127(CODE[3]), STR_128(CODE[3]), STR_129(CODE[3]), STR_130(CODE[3]), 
		 -> STR_131(CODE[3]), STR_132(CODE[3]), STR_133(CODE[3]), STR_135(CODE[3]), 
		 -> STR_136(CODE[3]), STR_137(CODE[3]), STR_138(CODE[3]), STR_139(CODE[3]), 
		 -> STR_140(CODE[3]), STR_141(CODE[3]), STR_142(CODE[3]), STR_143(CODE[3]), 
		 -> STR_145(CODE[3]), STR_146(CODE[3]), STR_147(CODE[3]), STR_148(CODE[3]), 
		 -> STR_149(CODE[3]), STR_150(CODE[3]), STR_151(CODE[3]), STR_152(CODE[3]), 
		 -> STR_153(CODE[3]), STR_157(CODE[3]), STR_158(CODE[3]), STR_159(CODE[3]), 
		 -> STR_160(CODE[3]), STR_161(CODE[3]), STR_162(CODE[3]), STR_163(CODE[3]), 
		 -> STR_164(CODE[3]), STR_165(CODE[3]), STR_166(CODE[3]), STR_167(CODE[3]), 
		 -> STR_168(CODE[3]), STR_169(CODE[3]), STR_170(CODE[3]), STR_171(CODE[3]), 
		 -> STR_172(CODE[3]), STR_173(CODE[3]), STR_174(CODE[3]), STR_175(CODE[3]), 
		 -> STR_176(CODE[3]), STR_177(CODE[3]), STR_178(CODE[3]), STR_179(CODE[3]), 
		 -> STR_180(CODE[3]), STR_181(CODE[3]), STR_182(CODE[3]), STR_183(CODE[3]), 
		 -> STR_2(CODE[3]), STR_26(CODE[3]), STR_27(CODE[3]), STR_28(CODE[3]), 
		 -> STR_29(CODE[3]), STR_3(CODE[3]), STR_30(CODE[3]), STR_31(CODE[3]), 
		 -> STR_32(CODE[3]), STR_33(CODE[3]), STR_34(CODE[3]), STR_37(CODE[3]), 
		 -> STR_38(CODE[3]), STR_39(CODE[3]), STR_4(CODE[3]), STR_40(CODE[3]), 
		 -> STR_41(CODE[3]), STR_42(CODE[3]), STR_43(CODE[3]), STR_44(CODE[3]), 
		 -> STR_45(CODE[3]), STR_48(CODE[3]), STR_49(CODE[3]), STR_5(CODE[3]), 
		 -> STR_50(CODE[3]), STR_51(CODE[3]), STR_52(CODE[3]), STR_53(CODE[3]), 
		 -> STR_54(CODE[3]), STR_55(CODE[3]), STR_56(CODE[3]), STR_6(CODE[3]), 
		 -> STR_68(CODE[3]), STR_69(CODE[3]), STR_7(CODE[3]), STR_70(CODE[3]), 
		 -> STR_71(CODE[3]), STR_72(CODE[3]), STR_73(CODE[3]), STR_74(CODE[3]), 
		 -> STR_75(CODE[3]), STR_76(CODE[3]), STR_79(CODE[3]), STR_8(CODE[3]), 
		 -> STR_80(CODE[3]), STR_81(CODE[3]), STR_82(CODE[3]), STR_83(CODE[3]), 
		 -> STR_84(CODE[3]), STR_85(CODE[3]), STR_86(CODE[3]), STR_87(CODE[3]), 
		 -> STR_9(CODE[3]), 

    menu_item	PTR unsigned char [5] size(2) Largest target is 16
		 -> STR_88(CODE[16]), STR_89(CODE[16]), STR_90(CODE[16]), STR_91(CODE[16]), 
		 -> STR_92(CODE[16]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1408$buffer	PTR unsigned char  size(2) Largest target is 0

    S1408$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 47
		 -> STR_117(CODE[3]), STR_123(CODE[17]), STR_144(CODE[3]), STR_46(CODE[10]), 
		 -> STR_62(CODE[47]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 30
		 -> download_log@str(BANK0[30]), str(BANK0[17]), write_10_bytes@tm(COMRAM[3]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), STR_1(CODE[3]), STR_101(CODE[3]), STR_102(CODE[3]), 
		 -> STR_103(CODE[3]), STR_104(CODE[3]), STR_105(CODE[3]), STR_106(CODE[3]), 
		 -> STR_107(CODE[3]), STR_108(CODE[3]), STR_109(CODE[3]), STR_125(CODE[3]), 
		 -> STR_126(CODE[3]), STR_127(CODE[3]), STR_128(CODE[3]), STR_129(CODE[3]), 
		 -> STR_130(CODE[3]), STR_131(CODE[3]), STR_132(CODE[3]), STR_133(CODE[3]), 
		 -> STR_135(CODE[3]), STR_136(CODE[3]), STR_137(CODE[3]), STR_138(CODE[3]), 
		 -> STR_139(CODE[3]), STR_140(CODE[3]), STR_141(CODE[3]), STR_142(CODE[3]), 
		 -> STR_143(CODE[3]), STR_145(CODE[3]), STR_146(CODE[3]), STR_147(CODE[3]), 
		 -> STR_148(CODE[3]), STR_149(CODE[3]), STR_150(CODE[3]), STR_151(CODE[3]), 
		 -> STR_152(CODE[3]), STR_153(CODE[3]), STR_157(CODE[3]), STR_158(CODE[3]), 
		 -> STR_159(CODE[3]), STR_160(CODE[3]), STR_161(CODE[3]), STR_162(CODE[3]), 
		 -> STR_163(CODE[3]), STR_164(CODE[3]), STR_165(CODE[3]), STR_166(CODE[3]), 
		 -> STR_167(CODE[3]), STR_168(CODE[3]), STR_169(CODE[3]), STR_170(CODE[3]), 
		 -> STR_171(CODE[3]), STR_172(CODE[3]), STR_173(CODE[3]), STR_174(CODE[3]), 
		 -> STR_175(CODE[3]), STR_176(CODE[3]), STR_177(CODE[3]), STR_178(CODE[3]), 
		 -> STR_179(CODE[3]), STR_180(CODE[3]), STR_181(CODE[3]), STR_182(CODE[3]), 
		 -> STR_183(CODE[3]), STR_184(CODE[7]), STR_2(CODE[3]), STR_26(CODE[3]), 
		 -> STR_27(CODE[3]), STR_28(CODE[3]), STR_29(CODE[3]), STR_3(CODE[3]), 
		 -> STR_30(CODE[3]), STR_31(CODE[3]), STR_32(CODE[3]), STR_33(CODE[3]), 
		 -> STR_34(CODE[3]), STR_37(CODE[3]), STR_38(CODE[3]), STR_39(CODE[3]), 
		 -> STR_4(CODE[3]), STR_40(CODE[3]), STR_41(CODE[3]), STR_42(CODE[3]), 
		 -> STR_43(CODE[3]), STR_44(CODE[3]), STR_45(CODE[3]), STR_48(CODE[3]), 
		 -> STR_49(CODE[3]), STR_5(CODE[3]), STR_50(CODE[3]), STR_51(CODE[3]), 
		 -> STR_52(CODE[3]), STR_53(CODE[3]), STR_54(CODE[3]), STR_55(CODE[3]), 
		 -> STR_56(CODE[3]), STR_6(CODE[3]), STR_68(CODE[3]), STR_69(CODE[3]), 
		 -> STR_7(CODE[3]), STR_70(CODE[3]), STR_71(CODE[3]), STR_72(CODE[3]), 
		 -> STR_73(CODE[3]), STR_74(CODE[3]), STR_75(CODE[3]), STR_76(CODE[3]), 
		 -> STR_79(CODE[3]), STR_8(CODE[3]), STR_80(CODE[3]), STR_81(CODE[3]), 
		 -> STR_82(CODE[3]), STR_83(CODE[3]), STR_84(CODE[3]), STR_85(CODE[3]), 
		 -> STR_86(CODE[3]), STR_87(CODE[3]), STR_9(CODE[3]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 3
		 -> ?_sprintf(BANK0[2]), STR_1(CODE[3]), STR_101(CODE[3]), STR_102(CODE[3]), 
		 -> STR_103(CODE[3]), STR_104(CODE[3]), STR_105(CODE[3]), STR_106(CODE[3]), 
		 -> STR_107(CODE[3]), STR_108(CODE[3]), STR_109(CODE[3]), STR_125(CODE[3]), 
		 -> STR_126(CODE[3]), STR_127(CODE[3]), STR_128(CODE[3]), STR_129(CODE[3]), 
		 -> STR_130(CODE[3]), STR_131(CODE[3]), STR_132(CODE[3]), STR_133(CODE[3]), 
		 -> STR_135(CODE[3]), STR_136(CODE[3]), STR_137(CODE[3]), STR_138(CODE[3]), 
		 -> STR_139(CODE[3]), STR_140(CODE[3]), STR_141(CODE[3]), STR_142(CODE[3]), 
		 -> STR_143(CODE[3]), STR_145(CODE[3]), STR_146(CODE[3]), STR_147(CODE[3]), 
		 -> STR_148(CODE[3]), STR_149(CODE[3]), STR_150(CODE[3]), STR_151(CODE[3]), 
		 -> STR_152(CODE[3]), STR_153(CODE[3]), STR_157(CODE[3]), STR_158(CODE[3]), 
		 -> STR_159(CODE[3]), STR_160(CODE[3]), STR_161(CODE[3]), STR_162(CODE[3]), 
		 -> STR_163(CODE[3]), STR_164(CODE[3]), STR_165(CODE[3]), STR_166(CODE[3]), 
		 -> STR_167(CODE[3]), STR_168(CODE[3]), STR_169(CODE[3]), STR_170(CODE[3]), 
		 -> STR_171(CODE[3]), STR_172(CODE[3]), STR_173(CODE[3]), STR_174(CODE[3]), 
		 -> STR_175(CODE[3]), STR_176(CODE[3]), STR_177(CODE[3]), STR_178(CODE[3]), 
		 -> STR_179(CODE[3]), STR_180(CODE[3]), STR_181(CODE[3]), STR_182(CODE[3]), 
		 -> STR_183(CODE[3]), STR_2(CODE[3]), STR_26(CODE[3]), STR_27(CODE[3]), 
		 -> STR_28(CODE[3]), STR_29(CODE[3]), STR_3(CODE[3]), STR_30(CODE[3]), 
		 -> STR_31(CODE[3]), STR_32(CODE[3]), STR_33(CODE[3]), STR_34(CODE[3]), 
		 -> STR_37(CODE[3]), STR_38(CODE[3]), STR_39(CODE[3]), STR_4(CODE[3]), 
		 -> STR_40(CODE[3]), STR_41(CODE[3]), STR_42(CODE[3]), STR_43(CODE[3]), 
		 -> STR_44(CODE[3]), STR_45(CODE[3]), STR_48(CODE[3]), STR_49(CODE[3]), 
		 -> STR_5(CODE[3]), STR_50(CODE[3]), STR_51(CODE[3]), STR_52(CODE[3]), 
		 -> STR_53(CODE[3]), STR_54(CODE[3]), STR_55(CODE[3]), STR_56(CODE[3]), 
		 -> STR_6(CODE[3]), STR_68(CODE[3]), STR_69(CODE[3]), STR_7(CODE[3]), 
		 -> STR_70(CODE[3]), STR_71(CODE[3]), STR_72(CODE[3]), STR_73(CODE[3]), 
		 -> STR_74(CODE[3]), STR_75(CODE[3]), STR_76(CODE[3]), STR_79(CODE[3]), 
		 -> STR_8(CODE[3]), STR_80(CODE[3]), STR_81(CODE[3]), STR_82(CODE[3]), 
		 -> STR_83(CODE[3]), STR_84(CODE[3]), STR_85(CODE[3]), STR_86(CODE[3]), 
		 -> STR_87(CODE[3]), STR_9(CODE[3]), 

    store_event@time	PTR unsigned char  size(1) Largest target is 9
		 -> time(BANK0[9]), 

    uart_puts@s	PTR const unsigned char  size(2) Largest target is 34
		 -> download_log@str(BANK0[30]), STR_59(CODE[3]), STR_60(CODE[34]), STR_61(CODE[34]), 
		 -> STR_63(CODE[3]), STR_64(CODE[3]), STR_65(CODE[3]), STR_66(CODE[17]), 
		 -> STR_67(CODE[3]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 47
		 -> STR_117(CODE[3]), STR_123(CODE[17]), STR_144(CODE[3]), STR_46(CODE[10]), 
		 -> STR_62(CODE[47]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 47
		 -> STR_117(CODE[3]), STR_123(CODE[17]), STR_144(CODE[3]), STR_46(CODE[10]), 
		 -> STR_62(CODE[47]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 47
		 -> STR_117(CODE[3]), STR_123(CODE[17]), STR_144(CODE[3]), STR_46(CODE[10]), 
		 -> STR_62(CODE[47]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    write_10_bytes@ptr	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    write_10_bytes@time	PTR unsigned char  size(1) Largest target is 9
		 -> time(BANK0[9]), 


Critical Paths under _main in COMRAM

    _main->_download_log
    _view_log->___awmod
    _settime->___awdiv
    _password->_sprintf
    _menu->_clcd_print
    _inti_config->_init_ds1307
    _init_ds1307->_read_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_clcd_write
    _download_log->_sprintf
    _uart_puts->_uart_putch
    _read_external_eeprom->_i2c_write
    _store_event->_write_10_bytes
    _write_10_bytes->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _ctoa->_fputc
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _clear_log->_clcd_print
    _change_pass->_addtoarray
    _change_pass->_addtoarray2
    _write_external_eeprom->_i2c_write
    _addtoarray2->_clcd_print
    _addtoarray->_clcd_print
    _clcd_print->_clcd_write

Critical Paths under _isr in COMRAM

    _isr->___lwmod

Critical Paths under _main in BANK0

    _main->_download_log
    _password->_sprintf
    _download_log->_sprintf
    _dashboard->_store_event
    _store_event->_write_10_bytes
    _write_10_bytes->_sprintf

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0  248629
                                             59 BANK0      7     7      0
                            ___lwdiv
                        _change_pass
                         _clcd_print
                          _clear_log
                          _dashboard
                       _download_log
                           _get_time
                        _inti_config
                               _menu
                           _password
                           _read_adc
               _read_external_eeprom
                      _read_switches
                            _settime
                        _store_event
                           _view_log
 ---------------------------------------------------------------------------------
 (1) _view_log                                            23    23      0   12559
                                             11 COMRAM    23    23      0
                            ___awmod
                         _clcd_print
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (1) _settime                                             28    28      0   15254
                                             13 COMRAM    28    28      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        3     3      0      22
                                              5 COMRAM     3     3      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _password                                             1     1      0   40424
                                             70 COMRAM     1     1      0
                         _addtoarray
                     _check_password
                         _clcd_print
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _menu                                                 6     6      0    9769
                                             10 COMRAM     6     6      0
                         _clcd_print
 ---------------------------------------------------------------------------------
 (1) _inti_config                                          0     0      0    2071
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
                        _init_timer0
                          _init_uart
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0    1191
                                              8 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _write_ds1307                                         2     1      1     993
                                              6 COMRAM     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            1     1      0     880
                                              7 COMRAM     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _download_log                                        44    44      0   33758
                                             70 COMRAM    10    10      0
                                             25 BANK0     34    34      0
                            ___awmod
                         _clcd_print
               _read_external_eeprom
                            _sprintf
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _uart_puts                                            2     0      2     751
                                              6 COMRAM     2     0      2
                         _uart_putch
 ---------------------------------------------------------------------------------
 (3) _uart_putch                                           1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _read_external_eeprom                                 2     2      0      96
                                              6 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _dashboard                                            9     9      0   57502
                                             39 BANK0      9     9      0
                         _clcd_print
                           _get_time
                            _sprintf
                        _store_event
 ---------------------------------------------------------------------------------
 (1) _store_event                                          9     6      3   26520
                                             30 BANK0      9     6      3
                             ___wmul
                     _write_10_bytes
 ---------------------------------------------------------------------------------
 (2) _write_10_bytes                                      10     5      5   23900
                                             70 COMRAM     5     5      0
                                             25 BANK0      5     0      5
                            _sprintf
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             40    15     25   21096
                                             57 COMRAM    13    13      0
                                              0 BANK0     25     0     25
               _read_external_eeprom (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             6     2      4   19872
                                             51 COMRAM     6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           13    10      3   19360
                                             38 COMRAM    13    10      3
                               _ctoa
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
 ---------------------------------------------------------------------------------
 (6) _stoa                                                13    10      3    2585
                                             13 COMRAM    13    10      3
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   5     3      2    1652
                                             11 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    1212
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                11     8      3    9588
                                             27 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  8     3      5    4901
                                             19 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                6     3      3    2437
                                             13 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             11 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    2053
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1705
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     5      2    2380
                                             13 COMRAM     7     5      2
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3    1937
                                              5 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             0     0      0      96
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (2) _read_ds1307                                          2     2      0      96
                                              6 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (4) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clear_log                                            1     1      0    9611
                         _clcd_print
 ---------------------------------------------------------------------------------
 (1) _change_pass                                          1     1      0   30432
                                             11 COMRAM     1     1      0
                         _addtoarray
                        _addtoarray2
                  _check_newpassword
                     _check_password
                         _clcd_print
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (3) _write_external_eeprom                                4     3      1    1387
                                              6 COMRAM     4     3      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      31
                                              5 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _check_password                                       2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _check_newpassword                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _addtoarray2                                          1     1      0    9655
                                             10 COMRAM     1     1      0
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _addtoarray                                           1     1      0    9655
                                             10 COMRAM     1     1      0
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    9611
                                              7 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           2     1      1     880
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     466
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isr                                                 0     0      0     311
                            ___lwmod
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   _change_pass
     _addtoarray
       _clcd_print
         _clcd_write
     _addtoarray2
       _clcd_print
     _check_newpassword
     _check_password
     _clcd_print
     _write_external_eeprom
       _i2c_start
         _i2c_idle
       _i2c_stop
         _i2c_idle
       _i2c_write
         _i2c_idle
   _clcd_print
   _clear_log
     _clcd_print
   _dashboard
     _clcd_print
     _get_time
       _read_ds1307
         _i2c_read
           _i2c_no_ack
           _i2c_rx_mode
             _i2c_idle
         _i2c_rep_start
           _i2c_idle
         _i2c_start
         _i2c_stop
         _i2c_write
     _sprintf
       _read_external_eeprom (ARG)
         _i2c_read
         _i2c_rep_start
         _i2c_start
         _i2c_stop
         _i2c_write
       _vfprintf (ARG)
         _vfpfcnvrt
           _ctoa
             _fputc
               _putch
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
     _store_event
       ___wmul
       _write_10_bytes
         _sprintf
         _write_external_eeprom
   _download_log
     ___awmod
     _clcd_print
     _read_external_eeprom
     _sprintf
     _uart_puts
       _uart_putch
   _get_time
   _inti_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
     _init_matrix_keypad
     _init_timer0
     _init_uart
   _menu
     _clcd_print
   _password
     _addtoarray
     _check_password
     _clcd_print
     _sprintf
   _read_adc
   _read_external_eeprom
   _read_switches
     _scan_key
   _settime
     ___awdiv
     ___awmod
     _clcd_print
     _read_ds1307
     _write_ds1307
   _store_event
   _view_log
     ___awmod
     _clcd_print
     _read_external_eeprom

 _isr (ROOT)
   ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      27        0.0%
BITBIGSFRllll      281      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      32       7       19.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     42      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     50      59       1       94.7%
BITBIGSFRhl         19      0       0      17        0.0%
BITBIGSFRlllh        F      0       0      24        0.0%
BITBIGSFRhh          D      0       0      16        0.0%
BITBIGSFRlhhhh       B      0       0      18        0.0%
BITBIGSFRllhhhh      9      0       0      21        0.0%
BITBIGSFRllhhhh      8      0       0      20        0.0%
BITBIGSFRllhhl       8      0       0      23        0.0%
BITBIGSFRllhhhh      7      0       0      19        0.0%
BITBIGSFRllhhhl      2      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12A      26        0.0%
DATA                 0      0     12A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jul 05 16:10:35 2024

                            _e 008D                              _p 008F                              _s 0058  
        _write_external_eeprom 2762                 clcd_print@addr 000A                 clcd_print@data 0008  
                           l72 2652                             l66 287C                             l76 06DE  
                           _GO 7E11                   ___awdiv@sign 000B                             _hr 0093  
                           _pw 0068            ___wmul@multiplicand 0008             _init_matrix_keypad 29CE  
                          l302 0E58                            l209 22E2                            l154 2436  
                          l234 179C                            l417 08BA                            l450 1B10  
                          l451 1A60                            l452 1A38                            l461 1AA2  
                          l446 29DE                            l454 1A4C                            l552 115C  
                          l464 1AD2                            l633 25B6                            l545 1100  
                          l457 1A7A                            l449 1A24                            l562 12FA  
                          l466 1AE6                            l458 1AB6                            l643 10AC  
                          l467 1B0E                            l459 1A8E                            l820 1CC4  
                          l468 1AFA                            l484 1D92                            l805 1A08  
                          l557 1254                            l486 1D7E                            l639 2604  
                          l911 21C6                            l399 2918                            l746 02F8  
                          l907 2810                            l908 2814                            l748 0408  
                          l917 24A2                            l870 14EE                            _CKE 7E3E  
                          l953 2958                            l956 266C                            l959 2698  
                          l976 29A4                            _GIE 7F97                            _RC0 7C10  
                          _RC1 7C11                            _RC2 7C12                            _RD7 7C1F  
                          _PEN 7E2A                            _SEN 7E28                            _PSA 7EAB  
                          _RX9 7D5E                            _SMP 7E3F                            _TX9 7D66  
                          _abs 2816                            _ind 0057                            _pad 21C8  
                          _min 0092                            _hrr 0053                            _scd 0051  
                          _sec 0091                            _isr 0008                            _mnn 0052  
                          _str 0095                            _try 0064                   ___awmod@sign 000B  
                          prod 0FF3                            wreg 0FE8            ?_init_matrix_keypad 0001  
               _check_password 25B8                           l1101 2976                           l1104 28D0  
                         ?_abs 000C                           l2004 1EBA                           l2012 17FC  
                         l1142 29E0                           l2030 155E                           l2007 1EF8  
                         l2023 18EA                           l1231 28A6                           l1144 29EE  
                         l1152 2A36                           l1145 29F0                           l1161 2A16  
                         l2009 1F16                           l1170 2A0A                           l2050 2074  
                         l2042 164C                           l1155 2A2E                           l1139 29BA  
                         l1228 27A0                           l1164 2A26                           l2037 1606  
                         l1158 2A1E                           l2046 206C                           l1167 2A3C  
                         l1271 2988                           l2056 0BFA                           l1272 298E  
                         l1521 1E56                           l2073 2830                           l1290 28F6  
                         l1098 26DE                           l1266 2938                           l2076 2848  
                         l4101 2472                           l2069 2720                           l1269 297A  
                         l1534 1FC6                           l1278 2564                           l2088 211E  
                         l2096 2760                           l4203 25FE                           l4027 2A38  
                         l2099 2A3E                           l4205 2602                           l4141 298A  
                         l4301 213C                           l5111 22E4                           l4071 27F6  
                         l4143 284C                           l4151 2606                           l4311 2172  
                         l4303 2146                           l5121 231C                           l5113 22EC  
                         l4081 2800                           l4073 27F8                           l4065 27DE  
                         l4145 285C                           l4153 260A                           l4321 219C  
                         l4313 2178                           l4305 2156                           l6001 0EBE  
                         l4401 1A74                           l5131 2348                           l5123 2322  
                         l5115 22FE                           l4083 2802                           l4075 27FA  
                         l4067 27F0                           l4147 2868                           l4163 2646  
                         l4139 297A                           l4323 21A6                           l4315 2182  
                         l4307 2160                           l4331 29D6                           l6011 0F1C  
                         l6003 0ED0                           l5125 2338                           l5117 2306  
                         l1781 234E                           l4077 27FC                           l4069 27F4  
                         l4181 2596                           l4173 2568                           l4149 287A  
                         l4157 261E                           l4325 21B4                           l4317 218A  
                         l4309 2168                           l4341 29B4                           l4333 29D8  
                         l6021 0F50                           l6013 0F1E                           l6005 0ED6  
                         l4413 1A9C                           l6101 13BA                           l5127 2340  
                         l5119 230E                           l4079 27FE                           l4095 2438  
                         l4183 25A2                           l4175 2578                           l4159 2640  
                         l4167 264C                           l5311 1DB2                           l5303 1D94  
                         l4271 2534                           l4327 21BE                           l4319 2194  
                         l4343 29B6                           l4335 29A6                           l6023 0F54  
                         l6015 0F30                           l6031 0F6E                           l6007 0EE8  
                         l4423 1ACC                           l4407 1A88                           l6111 1406  
                         l6103 13CA                           l5129 2342                           l4097 2446  
                         l4185 25B4                           l4177 257A                           l4169 2650  
                         l4193 25D0                           l5321 1DE6                           l5313 1DC0  
                         l5305 1D98                           l5401 2824                           l4265 2508  
                         l4345 29B8                           l4337 29AA                           l4329 29CE  
                         l4361 291A                           l6041 0FC0                           l6033 0F90  
                         l6025 0F64                           l6017 0F38                           l6009 0EFC  
                         l4441 1B08                           l6201 013C                           l6121 1454  
                         l6113 1414                           l6105 13D2                           l4099 246E  
                         l4179 2594                           l4195 25F2                           l4187 25B8  
                         l5411 1E92                           l5403 1E58                           l5331 1E20  
                         l5323 1DEE                           l5315 1DC8                           l5307 1DA6  
                         l4267 250C                           l4291 2956                           l4339 29B2  
                         l4371 2998                           l4363 2930                           l6051 0FF4  
                         l6043 0FD2                           l6035 0FA0                           l6019 0F3A  
                         l4435 1AF4                           l4419 1AB0                           l6203 014C  
                         l6211 017E                           l6131 1498                           l6123 1464  
                         l6115 1424                           l6107 13D6                           l1788 2356  
                         l4189 25BC                           l5421 1ED6                           l5413 1EA0  
                         l5405 1E6C                           l5341 1E46                           l5333 1E28  
                         l5325 1DF6                           l5317 1DCC                           l5309 1DAE  
                         l5501 162A                           l4269 2530                           l4293 2120  
                         l4373 29A0                           l4365 2934                           l6061 1028  
                         l6053 1004                           l6045 0FDA                           l6037 0FAE  
                         l4445 1B0E                           l4429 1AE0                           l4701 1CF4  
                         l6213 0190                           l6205 015E                           l6221 01C2  
                         l6141 14AC                           l6133 149C                           l6125 1474  
                         l6117 1434                           l6109 13F8                           l6301 0718  
                         ?_pad 0014                           l4199 25F8                           l5423 1EDA  
                         l5407 1E78                           l5343 1E4E                           l5335 1E2A  
                         l5327 1E04                           l5319 1DD4                           l5351 1F2A  
                         l1991 223C                           l5431 17B6                           l5511 1FFE  
                         l5503 162E                           l4287 293A                           l4295 2124  
                         l4375 29A2                           l4367 2936                           l6071 1088  
                         l6055 1006                           l6047 0FDC                           l6039 0FBE  
                         l6063 103C                           l4391 1A46                           l4703 1D16  
                         l4711 1D38                           l6231 01F2                           l6223 01D4  
                         l6215 01A2                           l6207 016E                           l6151 002E  
                         l6143 14BC                           l6135 14A0                           l6127 1484  
                         l6119 1444                           l6311 0742                           l6303 0728  
                         l1968 27DA                           l5601 2A28                           l4561 23DA  
                         l5281 20A0                           l5425 1F08                           l5417 1EB2  
                         l5409 1E84                           l5337 1E30                           l5329 1E0A  
                         l5361 1F5E                           l5353 1F32                           l1993 225C  
                         l5441 17F0                           l5433 17BE                           l5513 201A  
                         l5505 1FC8                           l5521 0976                           l4289 294E  
                         l4297 212A                           l4369 2990                           l6073 109C  
                         l6065 104C                           l6057 100E                           l6049 0FF2  
                         l4385 1A32                           l4377 1A0A                           l4713 1D4E  
                         l4705 1D28                           l6241 0210                           l6233 01F6  
                         l6225 01DC                           l6217 01B2                           l6209 0176  
                         l6161 0056                           l6153 0034                           l6137 14A4  
                         l6129 1494                           l6145 14CE                           l6081 131E  
                         l6321 077C                           l6313 0754                           l6305 0732  
                         l5603 2A2A                           l4571 2416                           l4563 23EA  
                         l4555 23CA                           l5283 20BC                           l5275 2076  
                         l5419 1EC6                           l5339 1E36                           l5371 1F9A  
                         l5363 1F66                           l5355 1F36                           l5347 1F18  
                         l5291 272E                           l5451 1846                           l5443 17F8  
                         l5435 17CE                           l5427 179E                           l5515 203A  
                         l5507 1FD0                           l5531 09CA                           l5523 0998  
                         l5611 26EC                           l4299 212C                           l6067 1066  
                         l6059 1018                           l4379 1A1E                           l4723 1D80  
                         l4715 1D60                           l4707 1D30                           l6251 02DC  
                         l6243 024A                           l6227 01E2                           l6219 01BA  
                         l6171 0086                           l6163 005E                           l6155 003E  
                         l6147 0014                           l6139 14A8                           l6091 1374  
                         l6083 1330                           l6075 12FE                           l6331 07C8  
                         l6323 0786                           l6315 075E                           l6307 073A  
                         l1988 21FE                           l5621 2768                           l4573 2418  
                         l4565 23FA                           l4557 23CE                           l5605 2A20  
                         l5701 22B6                           l5285 20EE                           l5277 2086  
                         l5373 1FA0                           l5365 1F6E                           l5357 1F44  
                         l5349 1F1C                           l5293 273C                           l5461 1898  
                         l5453 184A                           l5445 1804                           l5437 17D4  
                         l5429 17A2                           l5509 1FF2                           l5517 2046  
                         l5541 0A26                           l5533 09DA                           l5525 09A4  
                         l5613 26FC                           l4821 10D4                           l6069 1074  
                         l4397 1A5A                           l4717 1D70                           l4725 1D90  
                         l6253 02E4                           l6245 0254                           l6229 01EC  
                         l6181 00B6                           l6173 008E                           l6165 0066  
                         l6157 0046                           l6149 0026                           l6093 137C  
                         l6085 1342                           l6077 1310                           l6341 0802  
                         l6333 07D0                           l6325 0794                           l6317 0768  
                         l6309 073E                           l5519 29E0                           l5631 2786  
                         l5623 276E                           l4575 242E                           l4567 23FC  
                         l4559 23D2                           l5607 2A22                           l5703 22C0  
                         l5279 2096                           l5367 1F7C                           l5375 1FA6  
                         l5359 1F4C                           l5295 2740                           l5391 220A  
                         l5383 21C8                           l5463 18A8                           l5455 1850  
                         l5447 180E                           l5439 17E4                           l5551 0A7C  
                         l5535 09E4                           l5527 09B2                           l5615 2718  
                         l5711 1C02                           l4831 111A                           l4823 10E4  
                         l6271 0344                           l6255 02EA                           l6247 0298  
                         l6239 01FE                           l6191 00FA                           l6183 00C8  
                         l6175 0096                           l6167 0076                           l6159 004E  
                         l6087 1354                           l6095 1384                           l6351 0854  
                         l6343 0812                           l6335 07E4                           l6327 07AE  
                         l6319 0772                           l5625 2774                           l5801 04DC  
                         l4569 240E                           l5705 22C8                           l5377 1FB6  
                         l5369 1F92                           l5289 2722                           l5393 221A  
                         l5385 21D8                           l5465 18B8                           l5449 1814  
                         l5457 186C                           l5297 28D2                           l5481 1522  
                         l5473 14F0                           l5561 0AC6                           l5553 0A94  
                         l5537 0A06                           l5545 0A36                           l5529 09B6  
                         l5609 26E0                           l5641 27CE                           l5633 27A2  
                         l5721 1C40                           l5713 1C06                           l4833 112E  
                         l4841 1164                           l4825 10F4                           l4817 10B0  
                         l6281 03A8                           l6273 035C                           l6249 02D2  
                         l6193 010A                           l6265 02F8                           l6185 00D8  
                         l6177 009E                           l6169 007E                           l6097 1396  
                         l6089 1364                           l6361 08B0                           l6353 087C  
                         l6345 0822                           l6337 07EA                           l6329 07BE  
                         l5627 277A                           l5619 2764                           l5811 050E  
                         l5803 04E4                           l5651 2A08                           l5707 22DE  
                         l5379 1FBE                           l5395 221E                           l5387 21E8  
                         l5467 18BE                           l5459 1886                           l5299 28EE  
                         l5491 15B8                           l5475 150A                           l5571 0B50  
                         l5563 0AE8                           l5555 0AAE                           l5547 0A44  
                         l5539 0A12                           l5635 27AA                           l5731 1C8C  
                         l5715 1C08                           l5723 1C5C                           l4851 11C0  
                         l4843 1176                           l4835 1140                           l4827 10FC  
                         l4819 10C2                           l4683 2656                           l6283 03B4  
                         l6291 03EA                           l6275 0390                           l6267 0328  
                         l6195 011C                           l6187 00E0                           l6179 00A4  
                         l6099 13A8                           l6371 08FC                           l6355 0882  
                         l6363 08BE                           l6347 083E                           l6339 07FE  
                         l5629 277E                           l5821 056E                           l5813 0524  
                         l5645 2A18                           l5661 28BA                           l5397 224C  
                         l5389 21F6                           l5469 18CE                           l5493 15E8  
                         l5485 1582                           l5477 1512                           l5573 0B82  
                         l5565 0AF4                           l5549 0A60                           l5637 27B2  
                         l5741 1CBC                           l5733 1C94                           l5725 1C6C  
                         l5717 1C1A                           l5709 1BF0                           l4861 11E4  
                         l4853 11C6                           l4845 1186                           l4837 1150  
                         l4829 1108                           l4685 266A                           l4693 1CC8  
                         l6285 03C0                           l6277 0394                           l6269 032C  
                         l6197 012C                           l6189 00E8                           l6381 093A  
                         l6373 0906                           l6365 08D0                           l6357 089A  
                         l6349 0844                           l6293 06E0                           l5831 05B0  
                         l5815 0536                           l5807 04EE                           l5647 2A1A  
                         l5663 28BE                           l5655 28AA                           l5399 2816  
                         l5487 1592                           l5495 15EC                           l5479 151E  
                         l5583 0BC8                           l5567 0AFC                           l5559 0AC2  
                         l5639 27BA                           l5735 1C98                           l5727 1C70  
                         l5719 1C26                           l5911 1700                           l5903 16C6  
                         l5751 288A                           l5671 2960                           l4863 11E6  
                         l4855 11CA                           l4847 1192                           l4871 1220  
                         l4839 1158                           l4687 267A                           l4695 1CD8  
                         l6199 0134                           l6383 094C                           l6375 0918  
                         l6367 08DA                           l6359 08AC                           l6295 06E4  
                         l5593 2A30                           l5841 0616                           l5833 05C2  
                         l5817 053C                           l5809 04FE                           l5825 0578  
                         l5649 2A00                           l5665 28CA                           l5657 28AE  
                         l5489 1596                           l5569 0B1E                           l5577 0B94  
                         l5681 1974                           l5737 1CAA                           l5729 1C82  
                         l5905 16D8                           l5913 170C                           l5921 173C  
                         l5753 2890                           l5673 2966                           l5761 269A  
                         l4881 1266                           l4873 1232                           l4865 11FC  
                         l4857 11CC                           l4849 11A2                           l4689 2690  
                         l4697 1CE0                           l6289 03CC                           l6385 0956  
                         l6377 0920                           l6369 08EC                           l6297 06EA  
                         _ADFM 7E07                           l5595 2A32                           l5851 0636  
                         l5843 061A                           l5835 05C8                           l5827 058A  
                         l5819 054E                           l5659 28B4                           l5691 225E  
                         l5499 161A                           l5579 0BA4                           l5587 0BD8  
                         l5683 199C                           l5739 1CB4                           l5923 176C  
                         l5915 1714                           l5907 16E8                           l5755 2894  
                         l5747 2880                           l5931 0BFC                           l5675 296C  
                         l5771 26CA                           l5763 26A2                           l4891 12DE  
                         l4883 126C                           l4875 1244                           l4859 11DC  
                         l4699 1CF0                           l6387 0968                           l6379 0930  
                         l6299 06EE                           ?_isr 0001                           l5597 2A0E  
                         l5861 0664                           l5853 0646                           l5845 061E  
                         l5837 05DA                           l5829 059A                           l5781 0430  
                         l5693 227C                           l5685 19D4                           l5925 177C  
                         l5909 16F8                           l5757 28A0                           l5749 2884  
                         l5941 0D76                           l5933 0C1C                           l5677 2972  
                         l5669 295C                           l5773 26D2                           l5765 26AE  
                         l4885 127E                           l5599 2A12                           l5871 06BA  
                         l5863 067A                           l5855 0648                           l5847 0622  
                         l5839 05EE                           l5791 048A                           l5783 0442  
                         l5775 040C                           l5695 228A                           l5687 19EC  
                         l5679 18EC                           l5927 1780                           l5919 171C  
                         l5951 0DB8                           l5943 0D80                           l5935 0C2E  
                         l5767 26B6                           l4887 12A2                           l4879 1254  
                         l5873 06C2                           l5857 065A                           l5849 0626  
                         l5865 0686                           l5793 0490                           l5785 0452  
                         l5777 041E                           l5697 22A0                           l5689 19FA  
                         l5929 178E                           l5881 1652                           l5961 0E1E  
                         l5953 0DBC                           l5945 0D8C                           l5937 0C52  
                         l5769 26C0                           l4889 12C2                           l5875 06C4  
                         l5867 06A6                           l5859 0662                           l5795 04A2  
                         l5787 0462                           l5699 22B2                           l5891 1692  
                         l5883 1656                           l5963 0E30                           l5955 0DE8  
                         l5947 0DA0                           l5939 0C86                           l5971 28F8  
                         l5869 06A8                           l5797 04B6                           l5789 0478  
                         l5893 16A2                           l5885 165A                           l5965 0E38  
                         l5949 0DB0                           l5957 0DF8                           l5981 2910  
                         l5973 28FC                           l5799 04D6                           l5895 16AA  
                         l5887 166E                           l5967 0E3A                           l5959 0E1C  
                         l5983 2912                           l5975 2900                           l5889 1680  
                         l5897 16B6                           l5969 0E50                           l5985 2916  
                         l5977 2908                           l5993 0E76                           l5899 16BE  
                         l5979 290C                           l5995 0E88                           l5987 0E5C  
                         _ADON 7E10                           l5997 0E98                           l5989 0E6E  
                         l5999 0EA8                           STR_1 2FF5                           STR_2 2FF2  
                         STR_3 2FF8                           STR_4 2FE3                           STR_5 2FE6  
                         STR_6 2FE9                           STR_7 2FEC                           STR_8 2FEF  
                         STR_9 2FE0                           _BRGH 7D62                           _CREN 7D5C  
                         _T0CS 7EAD                           u3030 242E                           u3031 242A  
                         u4000 1E46                           u3120 267A                           u4001 1E42  
                         u3121 2676                           u4010 1F2A                           u3130 1CD8  
                         u4011 1F26                           u3131 1CD4                           u4020 1F44  
                         u4100 224C                           u3300 10D4                           u3140 1CF0  
                         u4021 1F40                           u4101 2248                           u3301 10D0  
                         u3141 1CEC                           u4030 1F5E                           u4110 2824  
                         u3310 10E4                           u3150 1D16                           u4031 1F5A  
                         u4111 2820                           u3311 10E0                           u3151 1D12  
                         u2600 24A2                           u4120 1E6C                           u4040 1F7C  
                         u4200 17E4                           u3400 127E                           u3320 111A  
                         u3160 1D28                           u5000 014C                           u2601 249E  
                         u4121 1E68                           u4041 1F78                           u4201 17E0  
                         u3401 127A                           u3321 1116                           u3161 1D24  
                         u5001 0148                           u4130 1E92                           u4050 1F92  
                         u4210 1886                           u2610 2988                           u3330 112E  
                         u3170 1D4E                           u5010 015E                           u4131 1E8E  
                         u4051 1F8E                           u4211 1882                           u2611 2984  
                         u3331 112A                           u3171 1D4A                           u5011 015A  
                         u2620 285C                           u4140 1EAE                           u4060 1FB6  
                         u4220 1898                           u4300 15D8                           u3340 1140  
                         u3180 1D60                           u5020 0190                           u5100 07FE  
                         u2621 2858                           u4141 1EAA                           u4061 1FB2  
                         u4221 1894                           u3341 113C                           u3181 1D5C  
                         u5021 018C                           u5101 07FA                           u2550 27EE  
                         u2630 261A                           u4150 1EF8                           u4070 21D8  
                         u4230 18A8                           u4310 1606                           u3350 1176  
                         u3190 1D70                           u5030 01A2                           u5110 0854  
                         u2551 27E8                           u2631 2616                           u4151 1EF4  
                         u4071 21D4                           u4231 18A4                           u4311 1602  
                         u3351 1172                           u3191 1D6C                           u5031 019E  
                         u5111 0850                           u2640 2640                           u4160 1F08  
                         u4080 21F6                           u4240 18B8                           u4320 1616  
                         u4400 0A60                           u3360 11FC                           u2800 1A5A  
                         u5040 01D4                           u5200 0968                           u5120 089A  
                         u2641 263C                           u4161 1F04                           u4081 21F2  
                         u4241 18B4                           u4321 1612                           u4401 0A5C  
                         u3361 11F8                           u2801 1A56                           u5041 01D0  
                         u5201 0964                           u5121 0896                           u2570 2810  
                         u2650 2578                           u4090 223C                           u4170 17B2  
                         u4330 164C                           u4250 150A                           u4410 0A7C  
                         u3370 1232                           u3290 10C2                           u2810 1A74  
                         u5050 0210                           u5130 08AC          ?_read_external_eeprom 0001  
                         u2571 280C                           u2651 2574                           u4091 2238  
                         u4171 17AC                           u4331 1648                           u4307 15CE  
                         u4251 1506                           u4411 0A78                           u3371 122E  
                         u3291 10BE                           u2811 1A70                           u5051 020C  
                         u5131 08A8                           u3620 22FE                           u2580 246A  
                         u2660 25CC                           u4180 17B4                           u4340 1FF2  
                         u4260 154E                           u4420 0AE8                           u4500 1C02  
                         u2740 252C                           u3380 1244                           u2820 1A88  
                         u5060 03A4                           u5140 08D0                           u3621 22FA  
                         u2565 27F0                           u2661 25C8                           u4341 1FEE  
                         u4421 0AE4                           u4501 1BFE                           u3381 1240  
                         u2821 1A84                           u5061 03A0                           u5141 08CC  
                         u3630 231C                           u2590 2492                           u2670 25F2  
                         u4190 17CE                           u4350 206C                           u4270 155E  
                         u4430 0B1E                           u4510 1C1A                           u2750 2554  
                         u3390 1266                           u2830 1A9C                           u5150 08EC  
                         u5070 0728                           u3631 2318                           u2671 25EE  
                         u4191 17CA                           u4351 2068                           u4271 155A  
                         u4431 0B1A                           u4511 1C16                           u3391 1262  
                         u2831 1A98                           u5151 08E8                           u5071 0724  
                         u3640 2338                           u4360 29EE                           u4600 04FE  
                         u4280 157E                           u4440 0B50                           u4520 1C6C  
                         u2760 2564                           u2840 1AB0                           u5160 08FC  
                         u5080 07BE                           u3641 2334                           u4361 29EA  
                         u4601 04FA                           u4281 157A                           u4441 0B4C  
                         u4521 1C68                           u2761 2560                           u5217 2132  
                         u2841 1AAC                           u5161 08F8                           u5081 07BA  
                         u4610 050E                           u4290 15B4                           u4450 0B82  
                         u4370 0998                           u4530 1C82                           u2850 1ACC  
                         u2770 1A1E                           u5170 0918                           u5090 07E4  
                         u2587 2460                           u4611 050A                           u4291 15B0  
                         u4267 1544                           u4451 0B7E                           u4371 0994  
                         u4531 1C7E                           u2747 2522                           u5227 214C  
                         u2851 1AC8                           u2771 1A1A                           u5171 0914  
                         u5091 07E0                           _PEIE 7F96                           u4620 054E  
                         u3900 2086                           u4460 0BA4                           u4380 09DA  
                         u4540 1CAA                           u4700 1692                           u2860 1AE0  
                         u2780 1A32                           u5180 0930                           u2597 2488  
                         u4621 054A                           u3901 2082                           u4461 0BA0  
                         u4381 09D6                           u4541 1CA6                           u4701 168E  
                         u2757 254A                           u5237 2162                           u2861 1ADC  
                         u2781 1A2E                           u5181 092C                           u4630 058A  
                         u4550 041E                           u3910 2096                           u4390 0A06  
                         u4470 2718                           u4710 16D8                           u2870 1AF4  
                         u2790 1A46                           u5190 094C                           u4631 0586  
                         u4551 041A                           u3911 2092                           u4391 0A02  
                         u4471 2714                           u4711 16D4                           u5247 2184  
                         u2871 1AF0                           u2791 1A42                           u5191 0948  
                         u4480 27A0                           u4640 059A                           u4560 0442  
                         u3920 20BC                           u4720 16E8                           u4800 0EE8  
                         u2880 1B08                           u4481 279C                           u4641 0596  
                         u4561 043E                           u3921 20B8                           u4721 16E4  
                         u5257 2196                           u4801 0EE4                           u2881 1B04  
                         u4650 05DA                           u4570 0462                           u4490 228A  
                         u3930 20EE                           u4730 0C2E                           u4810 0EFC  
                         u4651 05D6                           u4571 045E                           u4491 2286  
                         u3931 20EA                           u4731 0C2A                           u5267 21AC  
                         u4811 0EF8                           u4660 05EE                           u4580 04A2  
                         u3940 2760                           u4740 0DA0                           u4820 0F50  
                         u4900 1364                           _RCEN 7E2B                           _RCIF 7CF5  
                         u4661 05EA                           u4581 049E                           u3941 275C  
                         u4741 0D9C                           u5277 21C0                           u4821 0F4C  
                         u4901 1360                           u4670 067A                           u4590 04B6  
                         u3950 1DA6                           u4750 0DE8                           u4830 0FF2  
                         u4910 1396                           u4671 0676                           u4591 04B2  
                         u3951 1DA2                           u4751 0DE4                           u4831 0FEE  
                         u4911 1392                           u4680 06DA                           u3960 1DC0  
                         u4760 0E50                           u4840 1004                           u4920 13A8  
                         u4681 06D6                           u3961 1DBC                           u4761 0E4C  
                         u4841 1000                           u4921 13A4                           u3970 1DE6  
                         u4690 1680                           u4850 1088                           u4770 0E6E  
                         u4930 13BA                           u3971 1DE2                           u4691 167C  
                         u4851 1084                           u4771 0E6A                           u4931 13B6  
                         u3980 1E04                           u4780 0E88                           u4940 0026  
                         u4860 1310                           u3981 1E00                           u4781 0E84  
                         u4941 0022                           u4861 130C                           u3990 1E20  
                         u4790 0EA8                           u4950 00B6                           u4870 1330  
                         u3991 1E1C                           u4791 0EA4                           u4951 00B2  
                         u4871 132C                           u4960 00C8                           u4880 1342  
                         u4961 00C4                           u4881 133E                           u4970 00FA  
                         u4890 1354                           u4971 00F6                           u4891 1350  
                         u4980 010A                           u4981 0106                           u4990 011C  
                         u4991 0118                           _RBPU 7F8F                           _TMR0 0FD6  
                         _SPEN 7D5F                           _RSEN 7E29                           _TXEN 7D65  
                         _TXIF 7CF4                           _SYNC 7D64                           abs@a 000C  
                         _dbuf 0100                           _gear 0120                           _flag 0059  
                         _ctoa 1E58                           _main 06E0                           _dtoa 179E  
                         _byte 0055                           _line 00FE                           _menu 10AE  
                         _once 0086                           _prec 007D                           _wait 0074  
                         _time 00A6                           pad@i 001A                           pad@p 0017  
                         fsr1h 0FE2                           fsr2h 0FDA                           indf1 0FE7  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         _stoa 14F0                           btemp 005A                           prodh 0FF4  
                         prodl 0FF3                           start 000E           ??_init_matrix_keypad 0006  
                 ___param_bank 0000                 clcd_write@byte 0007                    _store_event 1BF0  
                _i2c_rep_start 2A18                  ??_i2c_rx_mode 0006                  addtoarray@key 000B  
                        ??_abs 000E                          ??_pad 0019                          ??_isr 0006  
                 ?_init_ds1307 0001                          _ADCS0 7E00                          _ADCS1 7E01  
                        _ADCS2 7E02                          ?_ctoa 000E                          ?_main 0001  
                        ?_dtoa 001C                   ?_read_ds1307 0001                          _ACKEN 7E2C  
                        _ACKDT 7E2D                          ?_menu 0001                          _BCLIF 7D0B  
                        _ACQT0 7E03                          _ACQT1 7E04                          _ACQT2 7E05  
              __end_of___awdiv 1E58                          STR_10 2FFB                          STR_11 2F3D  
                        STR_20 2FFD                          STR_12 2FFD                          STR_21 2E16  
                        STR_13 2E16                          STR_14 2E3C                          STR_22 2E18  
                        STR_23 2E2A                          STR_15 2E06                          STR_16 2FFD  
                        STR_24 2F1B                          _BRG16 7DC3                          STR_17 2E16  
                        STR_25 2F2C                          STR_18 2E4E                          STR_19 2E06  
                        STR_35 2DE0                          STR_36 2DCC                          STR_60 2DAA  
              __end_of___awmod 1FC8                          STR_61 2D88                          STR_46 2FCC  
                        STR_62 2D59                          STR_63 2D85                          STR_47 2F0A  
                        STR_64 2D85                          STR_65 2D85                          STR_57 2EF9  
                        STR_58 2E07                          STR_66 2EE8                          STR_90 2F9E  
                        STR_67 2D85                          STR_59 2D85                          STR_91 2F6E  
                        STR_92 2FAE                          STR_77 2E07                          STR_93 2ED7  
                        STR_94 2E07                          STR_78 2E07                          STR_95 2E07  
                        STR_96 2E07                          STR_88 2F7E                          STR_97 2FFB  
                        STR_89 2F8E                          STR_98 2E16                          STR_99 2E16  
                        ?_stoa 000E                ___awdiv@divisor 0008                __end_of___lwdiv 2358  
              _store_event$678 00D0                _store_event$679 00D2                __end_of___lwmod 2508  
              ___awdiv@counter 000A                          _VCFG0 7E0C                          _VCFG1 7E0D  
                        _RCREG 0FAE                          _SENDB 7D63                   vfpfcnvrt@fmt 0028  
                        _SPBRG 0FAF                          _PORTB 0F81                          _PORTD 0F83  
                        _TRISB 0F93                          _TRISC 0F94                          _TRISD 0F95  
                        _SSPIF 7CF3                          _TXREG 0FAD                   ?_init_timer0 0001  
    write_external_eeprom@data 0007         __end_of_check_password 2606      write_external_eeprom@wait 0009  
                        _field 0054                          _flags 0085                          _index 0094  
          read_prec_or_width@c 000E            read_prec_or_width@n 000F                          _fputc 2076  
                        _fputs 2722                          _newpw 0060                          _speed 0090  
                        pad@fp 0014                          _width 007B                   view_log@logs 000D  
                        ctoa@c 000F                          _putch 2A3E                          ctoa@l 0011  
                        ctoa@w 0013                          dtoa@d 001D                          dtoa@i 0025  
                        dtoa@p 0021                          dtoa@s 0024                          dtoa@w 0022  
                 ?_inti_config 0001                          tablat 0FF5                __end_of_settime 040A  
                        stoa@l 0019                          stoa@p 0013                          stoa@s 000F  
                        stoa@w 0015                          ttemp5 005B                          ttemp6 005E  
                        ttemp7 0062                          status 0FD8                          wtemp8 005B  
              __end_of_sprintf 27DC               init_ds1307@dummy 0009                     _i2c_no_ack 2A38  
              __initialization 2358                 ?_i2c_rep_start 0001         ?_write_external_eeprom 0007  
                 __end_of_ctoa 1F18                 addtoarray2@key 000B                   __end_of_main 0976  
                 __end_of_dtoa 18EC                   __end_of_menu 12FC                   __end_of_stoa 164E  
             __end_of_i2c_idle 29F2               __end_of_i2c_read 2A0C               __end_of_i2c_stop 2A30  
                ?_download_log 0001                         ??_ctoa 0010                         ??_main 0051  
                       ??_dtoa 001F                         ??_menu 000B                         ??_stoa 0011  
                __activetblptr 0002            __end_of_i2c_rx_mode 2A28     __end_of_read_prec_or_width 2076  
      read_switches@long_press 0081                ?_check_password 0001                         _ADCON0 0FC2  
                       _ADCON1 0FC1         ??_read_external_eeprom 0007                         ?_fputc 0006  
                       STR_100 2FFB                         STR_110 2FFB                         ?_fputs 000E  
                       STR_111 2DF4                         STR_120 2E06                         STR_112 2FFD  
                       STR_113 2E16                         STR_121 2DF4                         STR_114 2EB5  
                       STR_122 2EA4                         _ADRESH 0FC4                         STR_123 2EC6  
                       STR_115 2E93                         STR_124 2E08                         STR_116 2FFB  
                       STR_117 2FDD                         STR_134 2FBE                         STR_118 2F4E  
                       _ADRESL 0FC3                         STR_119 2F5E                         STR_144 2FDD  
                       STR_154 2E82                         STR_155 2E60                         STR_156 2E71  
                       STR_180 2FE9                         STR_181 2FEC                         STR_182 2FEF  
                       STR_183 2FE0                         STR_175 2FF5                         STR_184 2FD6  
                       STR_176 2FF2                         STR_177 2FF8                         STR_178 2FE3  
                       STR_179 2FE6                         _T08BIT 7EAE               ___awdiv@dividend 0006  
                       ?_putch 0001               _store_event$1801 00D4                         _GODONE 7E11  
                       i2l1035 1B92                         i2l1036 1BB2                         i2l1039 1BEC  
                       i2l5141 24D4                         i2l5133 24A4                         i2l5143 24EA  
                       i2l5135 24B6                         i2l1791 24FE                         i2l5145 24F2  
                       i2l5137 24BE                         i2l5147 24F8                         i2l5139 24C6  
                       i2l5251 1B2E                         i2l5261 1BA8                         i2l5253 1B34  
                       i2l1798 2506                         i2l5263 1BCA                         i2l5255 1B5A  
                       i2l5247 1B14                         i2l5265 1BD2                         i2l5257 1B70  
                       i2l5249 1B22                         i2l5267 1BE4                         i2l5259 1B88  
                       i2l5269 1BEA                   _write_ds1307 295A                  vfpfcnvrt@done 0031  
                       _TMR0IE 7F95                         _TMR0IF 7F92                         _TMR0ON 7EAF  
                       _SSPADD 0FC8                         _TRISC3 7CA3                         _TRISC4 7CA4  
                       _TRISC6 7CA6                         _TRISC7 7CA7                         _TRISD7 7CAF  
                       _SSPBUF 0FC9                   vfprintf@cfmt 0038               __end_of_get_time 22E4  
                       _back_f 008C                         ___wmul 28D2                      ??___awdiv 000A  
                    ??___awmod 000A                      ??___lwdiv 000A                      ??___lwmod 0005  
                       _main_f 008B               __end_of_init_i2c 29BC               __end_of_init_adc 295A  
                       _full_f 008E           read_prec_or_width@ap 000D                         _menu_f 008A  
             __end_of_read_adc 269A                         clear_0 239E                         clear_1 23AA  
                       clear_2 23B6                 ??_download_log 0047               ___awdiv@quotient 000C  
              ___awmod@divisor 0008                         _screen 0089                   _calender_reg 006C  
                       isa$std 0001               __end_of_scan_key 1B12                ___awmod@counter 000A  
                       pad@buf 0015                         ctoa@fp 000E                         dtoa@fp 001C  
             __end_of_password 10AE                         fputc@c 0006                         fputs@c 0011  
                       fputs@i 0012                         fputs@s 000E                   __mediumconst 2D58  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
             __end_of_view_log 14F0                      ??_settime 000E                         stoa@cp 0017  
                       stoa@fp 000E                         putch@c 0001               __end_of_vfprintf 2722  
                    ??_sprintf 003A                     __accesstop 0060        __end_of__initialization 23BC  
                ___rparam_used 0001                ??_i2c_rep_start 0006                    ?_i2c_no_ack 0001  
               __pcstackCOMRAM 0001                   __pidataBANK0 29F2                   __pidataBANK1 29BC  
                  _i2c_rx_mode 2A20                  __end_of_fputc 2120                  __end_of_fputs 2762  
                __end_of_putch 2A40                store_event@time 00CD              __end_of_i2c_start 2A38  
            __end_of_i2c_write 2A18                     _addtoarray 2566                        ??_fputc 0009  
                      ??_fputs 0011                        ??_putch 0006                     __pbssBANK0 0060  
                   __pbssBANK1 0100                      ?_i2c_idle 0001                      ?_i2c_read 0001  
                    ?_i2c_stop 0001                     _clcd_print 2438                     _clcd_write 27DC  
            _check_newpassword 2606   write_external_eeprom@address 0008                   ?_store_event 00CD  
              read_ds1307@data 0008                        ?___wmul 0006             ?_check_newpassword 0001  
            read_switches@key1 0088                     _block_time 0083              read_switches@once 00FB  
                      _ACKSTAT 7E2E            ??_check_newpassword 0006                    password@key 0047  
                      _SSPCON1 0FC6                      ?_get_time 0001                  _read_switches 1CC6  
                   ??_i2c_idle 0006                     ??_i2c_read 0006              __end_of_dashboard 179E  
                   ??_i2c_stop 0006                      ?_init_i2c 0001           __end_of_download_log 0E5A  
                    ?_init_adc 0001                      ?_read_adc 0006              __end_of_clear_log 2438  
    __end_of_check_newpassword 2654                      ?_scan_key 0001        ??_write_external_eeprom 0008  
                      __Hparam 0000                      ?_password 0001                  ??_addtoarray2 000B  
                      __Lparam 0000                        ___awdiv 1D94                        ___awmod 1F18  
                    ?_view_log 0001                        ___lwdiv 22E4                        ___lwmod 24A4  
                    ?_vfprintf 0034                        __pcinit 2358                        __ramtop 0600  
                      __ptext0 06E0                        __ptext1 12FC                        __ptext2 0012  
                      __ptext3 1CC6                        __ptext4 1A0A                        __ptext5 2654  
                      __ptext6 0E5A                        __ptext7 10AE                        __ptext8 28F8  
                      __ptext9 291A               ??_check_password 0006                        _attempt 00FD  
            __end_of_init_clcd 21C8          read_prec_or_width@fmt 000C              __end_of_init_uart 293A  
             ___awmod@dividend 0006                  ??_change_pass 000C                    ?_addtoarray 0001  
                      _settime 0012                 ?_read_switches 0001                        _sprintf 27A2  
                      main@key 00F0                     ??_get_time 0009                 __pintcode_body 1B12  
         end_of_initialization 23BC                        menu@key 0010                     ??_init_i2c 0006  
                      fputc@fp 0008                     ??_init_adc 0006                  __Lmediumconst 2D58  
                   ??_read_adc 0008                        int_func 1B12                        fputs@fp 0010  
           _read_prec_or_width 1FC8                     ??_scan_key 0006                    ?_clcd_print 0008  
            __end_of_uart_puts 2566                    ?_clcd_write 0006                     ??_password 0047  
            __end_of_vfpfcnvrt 0BFC                        postdec1 0FE5                        postdec2 0FDD  
          ?_read_prec_or_width 000C                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE               vfpfcnvrt@convarg 002C                     ??_view_log 000C  
                   ??_vfprintf 0038            __end_of_addtoarray2 287E                     _uart_putch 2978  
              main@adc_reg_val 00EE                      _PORTBbits 0F81                read_adc@channel 000C  
                i2c_write@data 0006                read_adc@reg_val 000A           ??_read_prec_or_width 000E  
          __end_of_change_pass 06E0       read_external_eeprom@data 0008                   ??_i2c_no_ack 0006  
                 ?_i2c_rx_mode 0001                    vfpfcnvrt@ap 0029                    vfpfcnvrt@cp 0032  
        read_switches@pre_key1 0087                    vfpfcnvrt@fp 0027                 __end_of___wmul 28F8  
                  view_log@key 0022               store_event@index 00CE               store_event@speed 00CF  
          start_initialization 2358                ??_read_switches 0006                    __end_of_abs 284A  
                    _i2c_start 2A30                    __end_of_pad 225E                    __end_of_isr 1BF0  
                    _i2c_write 2A0C             __end_of_i2c_no_ack 2A3E                  _dashboard$193 00D7  
                _dashboard$194 00D9                  _dashboard$195 00DB                  _dashboard$196 00DD  
                  _addtoarray2 284A                 _write_10_bytes 18EC          __end_of_i2c_rep_start 2A20  
                  vfprintf@fmt 0035                       ??___wmul 000A                  ??_init_ds1307 0009  
                  __pdataBANK0 00F1                    __pdataBANK1 0120                    ?_uart_putch 0001  
                ??_read_ds1307 0007                   _download_log 0BFC    read_switches@detection_type 0008  
                ??_init_timer0 0006                    __pbssCOMRAM 0051                    _change_pass 040A  
                __pcstackBANK0 00AF                     ?_i2c_start 0001                     ?_i2c_write 0001  
               change_pass@key 000C                  ??_inti_config 000A         __end_of_write_10_bytes 1A0A  
                    _dashboard 164E               ___lwdiv@dividend 0006                      _dtoa$1492 001F  
__end_of_write_external_eeprom 27A2                      _clear_log 23CA                      __pintcode 0008  
                __pmediumconst 2D58                       ?___awdiv 0006                       ?___awmod 0006  
           read_ds1307@address 0007                       ?___lwdiv 0006                      _clock_reg 0078  
                     ?___lwmod 0001            __end_of_init_ds1307 26E0            write_10_bytes@index 00CB  
          write_10_bytes@speed 00CC                   ??_addtoarray 000B                       ?_settime 0001  
          __end_of_read_ds1307 28D2               ___lwdiv@quotient 000A                      _init_clcd 2120  
                     ?_sprintf 00AF                      _init_uart 291A                      _menu_item 00F1  
                    _sec_delay 0070                  ?_write_ds1307 0007            __end_of_init_timer0 29A6  
               ___wmul@product 000A    read_external_eeprom@address 0007                   ??_clcd_print 000B  
              ?_write_10_bytes 00C8     __end_of_init_matrix_keypad 29E0                   ??_clcd_write 0007  
                   ?_dashboard 0001            __end_of_inti_config 291A                       i2u365_40 24B6  
                     i2u365_41 24B2                       i2u366_40 24D4                       i2u382_40 1B22  
                     i2u366_41 24D0                       i2u382_41 1B1E                       i2u367_40 24EA  
                     i2u383_40 1B5A                       i2u367_41 24E6                       i2u383_41 1B56  
                   ?_clear_log 0001                       i2u384_40 1B6C                       i2u384_41 1B66  
                     i2u385_40 1B6E                       i2u386_40 1B88                       i2u386_41 1B84  
                     i2u387_40 1BA8                       i2u387_41 1BA4                       i2u388_40 1BCA  
                     i2u388_41 1BC6                       i2u389_40 1BE4                       i2u389_41 1BE0  
                    _uart_puts 2508             __end_of_addtoarray 25B8                   dashboard@key 00D6  
                    _vfpfcnvrt 0976                     uart_puts@s 0007          clcd_write@control_bit 0006  
            ___wmul@multiplier 0006                     settime@key 0029                     settime@str 0010  
                  ??_i2c_start 0006             __end_of_clcd_print 24A4                    ??_i2c_write 0006  
           __end_of_clcd_write 2816                     ?_init_clcd 0001                     vfpfcnvrt@c 0030  
                   ?_init_uart 0001                      copy_data0 236C                      copy_data1 238C  
               ??_write_ds1307 0008                       _i2c_idle 29E0                       _i2c_read 2A00  
                     _i2c_stop 2A28                       __Hrparam 0000                   clear_log@key 0001  
                   vfprintf@ap 0037                       __Lrparam 0000                     vfprintf@fp 0034  
                   ?_uart_puts 0007   __end_of_read_external_eeprom 28A8                    _init_ds1307 269A  
                   ?_vfpfcnvrt 0027              _download_log$1800 00E6                    _read_ds1307 28A8  
                   sprintf@fmt 00B0            write_ds1307@address 0008                    _init_timer0 2990  
                     _main$368 00EA                       _main$369 00EC                ___lwdiv@divisor 0008  
              ___lwdiv@counter 000C                       __ptext10 2990                       __ptext11 29CE  
                     __ptext20 287E                       __ptext12 29A6                       __ptext21 164E  
                     __ptext13 269A                       __ptext30 179E                       __ptext22 1BF0  
                     __ptext14 295A                       __ptext31 21C8                       __ptext23 18EC  
                     __ptext15 2120                       __ptext40 28A8                       __ptext32 2722  
                     __ptext24 27A2                       __ptext16 293A                       __ptext41 2A18  
                     __ptext33 2816                       __ptext25 26E0                       __ptext17 0BFC  
                     __ptext50 2A30                       __ptext42 2A00                       __ptext34 1F18  
                     __ptext26 0976                       __ptext18 2508                       __ptext51 29E0  
                     __ptext43 2A20                       __ptext35 1D94                       __ptext27 14F0  
                     __ptext19 2978                       __ptext60 24A4                       __ptext52 25B8  
                     __ptext44 2A38                       __ptext36 1E58                       __ptext28 1FC8  
                     __ptext53 2606                       __ptext45 23CA                       __ptext37 2076  
                     __ptext29 28D2                       __ptext54 284A                       __ptext46 040A  
                     __ptext38 2A3E                       __ptext55 2566                       __ptext47 2762  
                     __ptext39 225E                       __ptext56 2438                       __ptext48 2A0C  
                     __ptext57 27DC                       __ptext49 2A28                       __ptext58 22E4  
                     _menu$511 000C                       _menu$512 000E                       _get_time 225E  
                  _inti_config 28F8             write_10_bytes@time 00CA                       _init_i2c 29A6  
                     _init_adc 293A                       _read_adc 2654                       _item_ind 0056  
                     _scan_key 1A0A                    ??_dashboard 004C                       _password 0E5A  
                 ?_addtoarray2 0001                    ??_clear_log 000B                  ??_store_event 004C  
                     isa$xinst 0000                       int$flags 005A                       _view_log 12FC  
                     _vfprintf 26E0                   ??_uart_putch 0006                   ?_change_pass 0001  
                     isr@count 007F                    ??_init_clcd 0008          __end_of_read_switches 1D94  
                  ??_init_uart 0006               _download_log$253 00E8                       intlevel2 0000  
                    sprintf@ap 003A               ___lwmod@dividend 0001             __end_of_uart_putch 2990  
            write_10_bytes@ptr 00C8                    ??_uart_puts 0009           __end_of_write_ds1307 2978  
                  ??_vfpfcnvrt 002A            __end_of_store_event 1CC6                       sprintf@f 003B  
                     sprintf@s 00AF                ___lwmod@divisor 0003                    _settime$630 0027  
                  _settime$627 0021                    _settime$628 0023                    _settime$629 0025  
             write_10_bytes@tm 0049                ___lwmod@counter 0005                 uart_putch@byte 0006  
                 _view_log$715 001E                   _view_log$716 0020               ??_write_10_bytes 0047  
             write_ds1307@data 0007           _read_external_eeprom 287E                download_log@str 00C8  
